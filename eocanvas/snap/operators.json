{
    "SAR-Simulation": {
        "alias": "SAR-Simulation",
        "description": "Rigorous SAR Simulation",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.geometric.SARSimulationOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "demResamplingMethod": {
                "description": null,
                "default_values": "BICUBIC_INTERPOLATION",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "externalDEMApplyEGM": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "saveLayoverShadowMask": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "PyOp": {
        "alias": "PyOp",
        "description": "Uses Python code to process data products",
        "authors": "Norman Fomferra",
        "name": "org.esa.snap.python.gpf.PyOperator",
        "version": "1.0",
        "params": {
            "pythonModulePath": {
                "description": "Path to the Python module(s). Can be either an absolute path or relative to the current working directory.",
                "default_values": ".",
                "values_set": []
            },
            "pythonModuleName": {
                "description": "Name of the Python module.",
                "default_values": null,
                "values_set": []
            },
            "pythonClassName": {
                "description": "Name of the Python class which implements the operator. Please refer to the SNAP help for details.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Faraday-Rotation-Correction": {
        "alias": "Faraday-Rotation-Correction",
        "description": "Perform Faraday-rotation correction for quad-pol product",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.polarimetric.gpf.FaradayRotationCorrectionOp",
        "version": "1.0",
        "params": {
            "windowSize": {
                "description": "The sliding window size",
                "default_values": "10",
                "values_set": []
            }
        }
    },
    "CrossResampling": {
        "alias": "CrossResampling",
        "description": "Estimate Resampling Polynomial using SAR Image Geometry, and Resample Input Images",
        "authors": "Petar Marinkovic",
        "name": "org.jlinda.nest.gpf.CrossResamplingOp",
        "version": "1.0",
        "params": {
            "warpPolynomialOrder": {
                "description": "The order of polynomial function",
                "default_values": "2",
                "values_set": [
                    "1",
                    "2",
                    "3"
                ]
            },
            "interpolationMethod": {
                "description": null,
                "default_values": "Cubic convolution (6 points)",
                "values_set": [
                    "Cubic convolution (4 points)",
                    "Cubic convolution (6 points)",
                    "Truncated sinc (6 points)",
                    "Truncated sinc (8 points)",
                    "Truncated sinc (16 points)"
                ]
            },
            "targetGeometry": {
                "description": null,
                "default_values": "ERS",
                "values_set": [
                    "ERS",
                    "Envisat ASAR"
                ]
            }
        }
    },
    "Biophysical10mOp": {
        "alias": "Biophysical10mOp",
        "description": "The 'Biophysical Processor' operator retrieves LAI from atmospherically corrected Sentinel-2 products",
        "authors": "CS",
        "name": "org.esa.s2tbx.biophysical.Biophysical10mOp",
        "version": null,
        "params": {
            "sensor": {
                "description": "Sensor",
                "default_values": "S2A_10m",
                "values_set": [
                    "S2A_10m",
                    "S2B_10m"
                ]
            },
            "computeLAI": {
                "description": "Compute LAI (Leaf Area Index)",
                "default_values": "true",
                "values_set": []
            },
            "computeFapar": {
                "description": "Compute FAPAR (Fraction of Absorbed Photosynthetically Active Radiation)",
                "default_values": "true",
                "values_set": []
            },
            "computeFcover": {
                "description": "Compute FVC (Fraction of Vegetation Cover)",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "MphChlMeris": {
        "alias": "MphChlMeris",
        "description": "Computes maximum peak height of chlorophyll for MERIS. Implements MERIS-specific parts.",
        "authors": "Mark William Matthews, Daniel Odermatt, Tom Block, Olaf Danne",
        "name": "org.esa.s3tbx.mphchl.MphChlMerisOp",
        "version": "1.0",
        "params": {
            "validPixelExpression": {
                "description": "Expression defining pixels considered for processing.",
                "default_values": null,
                "values_set": []
            },
            "cyanoMaxValue": {
                "description": "Maximum chlorophyll, arithmetically higher values are capped.",
                "default_values": "1000.0",
                "values_set": []
            },
            "chlThreshForFloatFlag": {
                "description": "Chlorophyll threshold, above which all cyanobacteria dominated waters are 'float.",
                "default_values": "350.0",
                "values_set": []
            },
            "exportMph": {
                "description": "Switch to true to write 'mph' band.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "RayleighCorrection": {
        "alias": "RayleighCorrection",
        "description": "Performs radiometric corrections on OLCI, MERIS L1B and S2 MSI L1C data products.",
        "authors": "Marco Peters, Muhammad Bala, Olaf Danne (Brockmann Consult)",
        "name": "org.esa.s3tbx.olci.radiometry.rayleigh.RayleighCorrectionOp",
        "version": "1.4",
        "params": {
            "sourceBandNames": {
                "description": "The source bands for the computation.",
                "default_values": null,
                "values_set": []
            },
            "computeTaur": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "computeRBrr": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "computeRtoaNg": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "computeRtoa": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "addAirMass": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "s2MsiTargetResolution": {
                "description": null,
                "default_values": "20",
                "values_set": [
                    "10",
                    "20",
                    "60"
                ]
            },
            "s2MsiSeaLevelPressure": {
                "description": null,
                "default_values": "1013.25",
                "values_set": []
            },
            "s2MsiOzone": {
                "description": null,
                "default_values": "300.0",
                "values_set": []
            }
        }
    },
    "SARSim-Terrain-Correction": {
        "alias": "SARSim-Terrain-Correction",
        "description": "Orthorectification with SAR simulation",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.geometric.SARSimTerrainCorrectionOp",
        "version": "1.0",
        "params": {
            "rmsThreshold": {
                "description": "The RMS threshold for eliminating invalid GCPs",
                "default_values": "1.0",
                "values_set": []
            },
            "warpPolynomialOrder": {
                "description": "The order of WARP polynomial function",
                "default_values": "1",
                "values_set": [
                    "1",
                    "2",
                    "3"
                ]
            },
            "imgResamplingMethod": {
                "description": null,
                "default_values": "BILINEAR_INTERPOLATION",
                "values_set": [
                    "NEAREST_NEIGHBOUR",
                    "BILINEAR_INTERPOLATION",
                    "CUBIC_CONVOLUTION"
                ]
            },
            "pixelSpacingInMeter": {
                "description": "The pixel spacing in meters",
                "default_values": "0",
                "values_set": []
            },
            "pixelSpacingInDegree": {
                "description": "The pixel spacing in degrees",
                "default_values": "0",
                "values_set": []
            },
            "mapProjection": {
                "description": "The coordinate reference system in well known text format",
                "default_values": null,
                "values_set": []
            },
            "alignToStandardGrid": {
                "description": "Force the image grid to be aligned with a specific point",
                "default_values": "false",
                "values_set": []
            },
            "standardGridOriginX": {
                "description": "x-coordinate of the standard grid's origin point",
                "default_values": "0",
                "values_set": []
            },
            "standardGridOriginY": {
                "description": "y-coordinate of the standard grid's origin point",
                "default_values": "0",
                "values_set": []
            },
            "saveDEM": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveLatLon": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveLocalIncidenceAngle": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveProjectedLocalIncidenceAngle": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveSelectedSourceBand": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "applyRadiometricNormalization": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveSigmaNought": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveGammaNought": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveBetaNought": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "incidenceAngleForSigma0": {
                "description": null,
                "default_values": "Use projected local incidence angle from DEM",
                "values_set": [
                    "Use incidence angle from Ellipsoid",
                    "Use projected local incidence angle from DEM",
                    "Use local incidence angle from DEM"
                ]
            },
            "incidenceAngleForGamma0": {
                "description": null,
                "default_values": "Use projected local incidence angle from DEM",
                "values_set": [
                    "Use incidence angle from Ellipsoid",
                    "Use projected local incidence angle from DEM",
                    "Use local incidence angle from DEM"
                ]
            },
            "auxFile": {
                "description": "The auxiliary file",
                "default_values": "Latest Auxiliary File",
                "values_set": [
                    "Latest Auxiliary File",
                    "Product Auxiliary File",
                    "External Auxiliary File"
                ]
            },
            "externalAuxFile": {
                "description": "The antenne elevation pattern gain auxiliary data file.",
                "default_values": null,
                "values_set": []
            },
            "openShiftsFile": {
                "description": "Show range and azimuth shifts file in a text viewer",
                "default_values": "false",
                "values_set": []
            },
            "openResidualsFile": {
                "description": "Show the Residuals file in a text viewer",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "SRGR": {
        "alias": "SRGR",
        "description": "Converts Slant Range to Ground Range",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.geometric.SRGROp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "warpPolynomialOrder": {
                "description": "The order of WARP polynomial function",
                "default_values": "4",
                "values_set": [
                    "1",
                    "2",
                    "3",
                    "4"
                ]
            },
            "interpolationMethod": {
                "description": null,
                "default_values": "Linear interpolation",
                "values_set": [
                    "Nearest-neighbor interpolation",
                    "Linear interpolation",
                    "Cubic interpolation",
                    "Cubic2 interpolation",
                    "Sinc interpolation"
                ]
            }
        }
    },
    "Ndi45Op": {
        "alias": "Ndi45Op",
        "description": "Normalized Difference Index using bands 4 and 5",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.Ndi45Op",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redB4Factor": {
                "description": "The value of the red source band (B4) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redB5Factor": {
                "description": "The value of the red source band (B5) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand4": {
                "description": "The red band (B4) for the NDI45 computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "redSourceBand5": {
                "description": "The red band (B5) for the NDI45 computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Data-Analysis": {
        "alias": "Data-Analysis",
        "description": "Computes statistics",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.utilities.gpf.DataAnalysisOp",
        "version": "1.0",
        "params": {}
    },
    "Forest-Area-Classification": {
        "alias": "Forest-Area-Classification",
        "description": "Detect forest area",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.forest.ForestAreaClassificationOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "numClasses": {
                "description": "The number of classes",
                "default_values": "3",
                "values_set": []
            },
            "maxIterations": {
                "description": "The maximum number of iterations",
                "default_values": "10",
                "values_set": []
            },
            "convergenceThreshold": {
                "description": "The convergence threshold",
                "default_values": "95",
                "values_set": []
            }
        }
    },
    "FillAerosol": {
        "alias": "FillAerosol",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.FillAerosolOp",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "TsaviOp": {
        "alias": "TsaviOp",
        "description": "This retrieves the Transformed Soil Adjusted Vegetation Index (TSAVI).",
        "authors": "Cosmin Cara",
        "name": "org.esa.s2tbx.radiometry.TsaviOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the RED source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "slope": {
                "description": "The soil line slope.",
                "default_values": "0.5F",
                "values_set": []
            },
            "intercept": {
                "description": "The soil line intercept.",
                "default_values": "0.5F",
                "values_set": []
            },
            "adjustment": {
                "description": "Adjustment factor to minimize soil background.",
                "default_values": "0.08F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the TSAVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the TSAVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "MphChl": {
        "alias": "MphChl",
        "description": "This operator computes maximum peak height of chlorophyll (MPH/CHL).",
        "authors": "Mark William Matthews, Daniel Odermatt, Tom Block, Olaf Danne",
        "name": "org.esa.s3tbx.mphchl.MphChlOp",
        "version": "1.0",
        "params": {
            "validPixelExpression": {
                "description": "Expression defining pixels considered for processing. If not set, all valid pixels over water are processed.",
                "default_values": null,
                "values_set": []
            },
            "cyanoMaxValue": {
                "description": "Maximum chlorophyll, arithmetically higher values are capped.",
                "default_values": "1000.0",
                "values_set": []
            },
            "chlThreshForFloatFlag": {
                "description": "Chlorophyll threshold, above which all cyanobacteria dominated waters are 'float'.",
                "default_values": "500.0",
                "values_set": []
            },
            "exportMph": {
                "description": "Switch to true to write 'mph' band.",
                "default_values": "false",
                "values_set": []
            },
            "applyLowPassFilter": {
                "description": "Switch to true to apply a 3x3 low-pass filter on the result.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "RemoveAntennaPattern": {
        "alias": "RemoveAntennaPattern",
        "description": "Remove Antenna Pattern",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.calibration.gpf.RemoveAntennaPatternOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Image-Filter": {
        "alias": "Image-Filter",
        "description": "Common Image Processing Filters",
        "authors": "Norman Fomferra, Luis Veci",
        "name": "org.esa.snap.raster.gpf.FilterOperator",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "selectedFilterName": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "userDefinedKernelFile": {
                "description": "The kernel file",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "NdviOp": {
        "alias": "NdviOp",
        "description": "The retrieves the Normalized Difference Vegetation Index (NDVI).",
        "authors": "Maximilian Aulinger, Thomas Storm",
        "name": "org.esa.snap.ndvi.NdviOp",
        "version": "1.3",
        "params": {
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the NDVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the NDVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "GndviOp": {
        "alias": "GndviOp",
        "description": "Green Normalized Difference Vegetation Index",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.GndviOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "greenFactor": {
                "description": "The value of the green source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "greenSourceBand": {
                "description": "The green band for the GNDVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the GNDVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Update-Geo-Reference": {
        "alias": "Update-Geo-Reference",
        "description": "Update Geo Reference",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.geometric.UpdateGeoRefOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": [
                    "ACE",
                    "ASTER 1sec GDEM",
                    "GETASSE30",
                    "SRTM 1Sec HGT",
                    "SRTM 3Sec"
                ]
            },
            "demResamplingMethod": {
                "description": null,
                "default_values": "BICUBIC_INTERPOLATION",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "reGridMethod": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Compactpol-Radar-Vegetation-Index": {
        "alias": "Compactpol-Radar-Vegetation-Index",
        "description": "Compact-pol Radar Vegetation Indices generation",
        "authors": "Dipankar Mandal et al.",
        "name": "org.csa.rstb.polarimetric.gpf.CPRVIOp",
        "version": "1.0",
        "params": {
            "windowSize": {
                "description": "The sliding window size",
                "default_values": "5",
                "values_set": []
            }
        }
    },
    "SaviOp": {
        "alias": "SaviOp",
        "description": "This retrieves the Soil-Adjusted Vegetation Index (SAVI).",
        "authors": "Cosmin Cara",
        "name": "org.esa.s2tbx.radiometry.SaviOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "soilCorrectionFactor": {
                "description": "The amount or cover of green vegetation.",
                "default_values": "0.5F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the SAVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the SAVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Msavi2Op": {
        "alias": "Msavi2Op",
        "description": "This retrieves the second Modified Soil Adjusted Vegetation Index (MSAVI2).",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.Msavi2Op",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the RED source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the MSAVI2 computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the MSAVI2 computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Oversample": {
        "alias": "Oversample",
        "description": "Oversample the datset",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.utilities.gpf.OversamplingOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "outputImageBy": {
                "description": null,
                "default_values": "Ratio",
                "values_set": [
                    "Image Size",
                    "Ratio",
                    "Pixel Spacing"
                ]
            },
            "targetImageHeight": {
                "description": "The row dimension of the output image",
                "default_values": "1000",
                "values_set": []
            },
            "targetImageWidth": {
                "description": "The col dimension of the output image",
                "default_values": "1000",
                "values_set": []
            },
            "widthRatio": {
                "description": "The width ratio of the output/input images",
                "default_values": "2.0",
                "values_set": []
            },
            "heightRatio": {
                "description": "The height ratio of the output/input images",
                "default_values": "2.0",
                "values_set": []
            },
            "rangeSpacing": {
                "description": "The range pixel spacing",
                "default_values": "12.5",
                "values_set": []
            },
            "azimuthSpacing": {
                "description": "The azimuth pixel spacing",
                "default_values": "12.5",
                "values_set": []
            },
            "usePRFTileSize": {
                "description": "use PRF as azimuth tile size and range line as range tile size",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Meris.CorrectRadiometry": {
        "alias": "Meris.CorrectRadiometry",
        "description": "Performs radiometric corrections on MERIS L1b data products.",
        "authors": "Marc Bouvet (ESTEC); Marco Peters, Ralf Quast, Thomas Storm, Marco Zuehlke (Brockmann Consult)",
        "name": "org.esa.s3tbx.meris.radiometry.MerisRadiometryCorrectionOp",
        "version": "1.2",
        "params": {
            "doCalibration": {
                "description": "Whether to perform the calibration.",
                "default_values": "true",
                "values_set": []
            },
            "sourceRacFile": {
                "description": "The radiometric correction auxiliary file for the source product. The default 'MER_RAC_AXVIEC20050708_135553_20021224_121445_20041213_220000'",
                "default_values": null,
                "values_set": []
            },
            "targetRacFile": {
                "description": "The radiometric correction auxiliary file for the target product. The default 'MER_RAC_AXVACR20091016_154511_20021224_121445_20041213_220000'",
                "default_values": null,
                "values_set": []
            },
            "doSmile": {
                "description": "Whether to perform Smile-effect correction.",
                "default_values": "true",
                "values_set": []
            },
            "doEqualization": {
                "description": "Perform removal of detector-to-detector systematic radiometric differences in MERIS L1b data products.",
                "default_values": "true",
                "values_set": []
            },
            "reproVersion": {
                "description": "The version of the reprocessing the product comes from. Is only used if equalisation is enabled.",
                "default_values": "AUTO_DETECT",
                "values_set": [
                    "AUTO_DETECT",
                    "REPROCESSING_2",
                    "REPROCESSING_3"
                ]
            },
            "doRadToRefl": {
                "description": "Whether to perform radiance-to-reflectance conversion. When selecting ENVISAT as target format, the radiance to reflectance conversion can not be performed.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Terrain-Correction": {
        "alias": "Terrain-Correction",
        "description": "RD method for orthorectification",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.geometric.RangeDopplerGeocodingOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "externalDEMApplyEGM": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "demResamplingMethod": {
                "description": null,
                "default_values": "BILINEAR_INTERPOLATION",
                "values_set": [
                    "NEAREST_NEIGHBOUR",
                    "BILINEAR_INTERPOLATION",
                    "CUBIC_CONVOLUTION",
                    "BISINC_5_POINT_INTERPOLATION",
                    "BISINC_11_POINT_INTERPOLATION",
                    "BISINC_21_POINT_INTERPOLATION",
                    "BICUBIC_INTERPOLATION",
                    "DELAUNAY_INTERPOLATION"
                ]
            },
            "imgResamplingMethod": {
                "description": null,
                "default_values": "BILINEAR_INTERPOLATION",
                "values_set": [
                    "NEAREST_NEIGHBOUR",
                    "BILINEAR_INTERPOLATION",
                    "CUBIC_CONVOLUTION",
                    "BISINC_5_POINT_INTERPOLATION",
                    "BISINC_11_POINT_INTERPOLATION",
                    "BISINC_21_POINT_INTERPOLATION",
                    "BICUBIC_INTERPOLATION"
                ]
            },
            "pixelSpacingInMeter": {
                "description": "The pixel spacing in meters",
                "default_values": "0",
                "values_set": []
            },
            "pixelSpacingInDegree": {
                "description": "The pixel spacing in degrees",
                "default_values": "0",
                "values_set": []
            },
            "mapProjection": {
                "description": "The coordinate reference system in well known text format",
                "default_values": "WGS84(DD)",
                "values_set": []
            },
            "alignToStandardGrid": {
                "description": "Force the image grid to be aligned with a specific point",
                "default_values": "false",
                "values_set": []
            },
            "standardGridOriginX": {
                "description": "x-coordinate of the standard grid's origin point",
                "default_values": "0",
                "values_set": []
            },
            "standardGridOriginY": {
                "description": "y-coordinate of the standard grid's origin point",
                "default_values": "0",
                "values_set": []
            },
            "nodataValueAtSea": {
                "description": "Mask the sea with no data value (faster)",
                "default_values": "true",
                "values_set": []
            },
            "saveDEM": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveLatLon": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveIncidenceAngleFromEllipsoid": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveLocalIncidenceAngle": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveProjectedLocalIncidenceAngle": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveSelectedSourceBand": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "saveLayoverShadowMask": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "applyRadiometricNormalization": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveSigmaNought": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveGammaNought": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveBetaNought": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "incidenceAngleForSigma0": {
                "description": null,
                "default_values": "Use projected local incidence angle from DEM",
                "values_set": [
                    "Use incidence angle from Ellipsoid",
                    "Use local incidence angle from DEM",
                    "Use projected local incidence angle from DEM"
                ]
            },
            "incidenceAngleForGamma0": {
                "description": null,
                "default_values": "Use projected local incidence angle from DEM",
                "values_set": [
                    "Use incidence angle from Ellipsoid",
                    "Use local incidence angle from DEM",
                    "Use projected local incidence angle from DEM"
                ]
            },
            "auxFile": {
                "description": "The auxiliary file",
                "default_values": "Latest Auxiliary File",
                "values_set": [
                    "Latest Auxiliary File",
                    "Product Auxiliary File",
                    "External Auxiliary File"
                ]
            },
            "externalAuxFile": {
                "description": "The antenne elevation pattern gain auxiliary data file.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "MphChlBasis": {
        "alias": "MphChlBasis",
        "description": "Computes maximum peak height of chlorophyll. Basis class, contains sensor-independent parts.",
        "authors": "Mark William Matthews, Daniel Odermatt, Tom Block, Olaf Danne",
        "name": "org.esa.s3tbx.mphchl.MphChlBasisOp",
        "version": "1.0",
        "params": {
            "validPixelExpression": {
                "description": "Expression defining pixels considered for processing.",
                "default_values": null,
                "values_set": []
            },
            "cyanoMaxValue": {
                "description": "Maximum chlorophyll, arithmetically higher values are capped.",
                "default_values": "1000.0",
                "values_set": []
            },
            "chlThreshForFloatFlag": {
                "description": "Chlorophyll threshold, above which all cyanobacteria dominated waters are 'float.",
                "default_values": "350.0",
                "values_set": []
            },
            "exportMph": {
                "description": "Switch to true to write 'mph' band.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Meris.Brr": {
        "alias": "Meris.Brr",
        "description": "Performs the Rayleigh correction on a MERIS L1b product.",
        "authors": "R. Santer, M. Zuehlke, T. Block, O. Danne",
        "name": "org.esa.s3tbx.meris.brr.operator.BrrOp",
        "version": "2.4",
        "params": {
            "copyAllTiePoints": {
                "description": "Write all tie points to the target product",
                "default_values": "true",
                "values_set": []
            },
            "copyL1Flags": {
                "description": "Write L1 flags to the target product.",
                "default_values": "true",
                "values_set": []
            },
            "outputToar": {
                "description": "Write TOA reflectances to the target product.",
                "default_values": "false",
                "values_set": []
            },
            "correctionSurface": {
                "description": "Specify the surface where the Rayleigh correction shall be performed",
                "default_values": "ALL_SURFACES",
                "values_set": [
                    "ALL_SURFACES",
                    "LAND",
                    "WATER"
                ]
            }
        }
    },
    "Mci.s2": {
        "alias": "Mci.s2",
        "description": "Computes maximum chlorophyll index (MCI) for Sentinel-2 MSI.",
        "authors": "Marco Peters",
        "name": "org.esa.s2tbx.processor.mci.S2MciOp",
        "version": "1.0",
        "params": {
            "lowerBaselineBandName": {
                "description": "The name for the lower wavelength band defining the baseline",
                "default_values": null,
                "values_set": []
            },
            "upperBaselineBandName": {
                "description": "The name of the upper wavelength band defining the baseline",
                "default_values": null,
                "values_set": []
            },
            "signalBandName": {
                "description": " The name of the signal band, i.e. the band for which the baseline height is calculated",
                "default_values": null,
                "values_set": []
            },
            "lineHeightBandName": {
                "description": "The name of the MCI band in the target product",
                "default_values": null,
                "values_set": []
            },
            "slope": {
                "description": "Activates or deactivates calculating the slope parameter",
                "default_values": "true",
                "values_set": []
            },
            "slopeBandName": {
                "description": "The name of the slope band in the target product",
                "default_values": null,
                "values_set": []
            },
            "maskExpression": {
                "description": "A ROI-mask expression used to identify pixels of interest",
                "default_values": null,
                "values_set": []
            },
            "cloudCorrectionFactor": {
                "description": "The cloud correction factor used during calculation",
                "default_values": "1.005",
                "values_set": []
            },
            "invalidMciValue": {
                "description": "Value used to fill invalid MCI pixels",
                "default_values": "NaN",
                "values_set": []
            }
        }
    },
    "Meris.CloudShadow": {
        "alias": "Meris.CloudShadow",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.cloud.CloudShadowOp",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            },
            "shadowWidth": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "DviOp": {
        "alias": "DviOp",
        "description": "Difference Vegetation Index retrieves the Isovegetation lines parallel to soil line",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.DviOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the DVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the DVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Find-Image-Pair": {
        "alias": "Find-Image-Pair",
        "description": "DB query to find matching image pair",
        "authors": "Luis Veci",
        "name": "org.esa.snap.productlibrary.gpf.FindImagePairOp",
        "version": "1.0",
        "params": {
            "minMJD": {
                "description": "Minimum days apart from master",
                "default_values": "1",
                "values_set": []
            },
            "maxMJD": {
                "description": "Maximum days apart from master",
                "default_values": "99999",
                "values_set": []
            }
        }
    },
    "Aatsr.SST": {
        "alias": "Aatsr.SST",
        "description": "Computes sea surface temperature (SST) from (A)ATSR products.",
        "authors": "Tom Block, Ralf Quast",
        "name": "org.esa.s3tbx.aatsr.sst.AatsrSstOp",
        "version": "2.0",
        "params": {
            "dual": {
                "description": "Enables/disables generation of the dual-view SST",
                "default_values": "true",
                "values_set": []
            },
            "dualCoefficientsFile": {
                "description": "Coefficient file for the dual-view SST",
                "default_values": "AVERAGE_POLAR_DUAL_VIEW",
                "values_set": [
                    "AVERAGE_POLAR_DUAL_VIEW",
                    "AVERAGE_TEMPERATE_DUAL_VIEW",
                    "AVERAGE_TROPICAL_DUAL_VIEW",
                    "GRIDDED_POLAR_DUAL_VIEW",
                    "GRIDDED_TEMPERATE_DUAL_VIEW",
                    "GRIDDED_TROPICAL_DUAL_VIEW",
                    "GRIDDED_DUAL_VIEW_IPF"
                ]
            },
            "dualMaskExpression": {
                "description": "ROI-mask used for the dual-view SST",
                "default_values": "!cloud_flags_nadir.LAND and !cloud_flags_nadir.CLOUDY and !cloud_flags_nadir.SUN_GLINT and !cloud_flags_fward.LAND and !cloud_flags_fward.CLOUDY and !cloud_flags_fward.SUN_GLINT",
                "values_set": []
            },
            "nadir": {
                "description": "Enables/disables generation of the nadir-view SST",
                "default_values": "true",
                "values_set": []
            },
            "nadirCoefficientsFile": {
                "description": "Coefficient file for the nadir-view SST",
                "default_values": "AVERAGE_POLAR_SINGLE_VIEW",
                "values_set": [
                    "AVERAGE_POLAR_SINGLE_VIEW",
                    "AVERAGE_TEMPERATE_SINGLE_VIEW",
                    "AVERAGE_TROPICAL_SINGLE_VIEW",
                    "GRIDDED_POLAR_SINGLE_VIEW",
                    "GRIDDED_TEMPERATE_SINGLE_VIEW",
                    "GRIDDED_TROPICAL_SINGLE_VIEW"
                ]
            },
            "nadirMaskExpression": {
                "description": "ROI-mask used for the nadir-view SST",
                "default_values": "!cloud_flags_nadir.LAND and !cloud_flags_nadir.CLOUDY and !cloud_flags_nadir.SUN_GLINT",
                "values_set": []
            },
            "invalidSstValue": {
                "description": "Value used to fill invalid SST pixels",
                "default_values": "-999.0f",
                "values_set": []
            }
        }
    },
    "Orientation-Angle-Correction": {
        "alias": "Orientation-Angle-Correction",
        "description": "Perform polarization orientation angle correction for given coherency matrix",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.polarimetric.gpf.OrientationAngleCorrectionOp",
        "version": "1.0",
        "params": {
            "outputOrientationAngle": {
                "description": "Output Orientation Angle",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "BiophysicalLandsat8Op": {
        "alias": "BiophysicalLandsat8Op",
        "description": "The 'Biophysical Processor' operator retrieves LAI from atmospherically corrected Landsat8 products",
        "authors": "CS",
        "name": "org.esa.s2tbx.biophysical.BiophysicalLandsatOp",
        "version": null,
        "params": {
            "computeLAI": {
                "description": "Compute LAI (Leaf Area Index)",
                "default_values": "true",
                "values_set": []
            },
            "computeFapar": {
                "description": "Compute FAPAR (Fraction of Absorbed Photosynthetically Active Radiation)",
                "default_values": "true",
                "values_set": []
            },
            "computeFcover": {
                "description": "Compute FVC (Fraction of Vegetation Cover)",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "Land-Cover-Mask": {
        "alias": "Land-Cover-Mask",
        "description": "Perform decision tree classification",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.landcover.gpf.LandCoverMaskOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "landCoverBand": {
                "description": "Land cover band",
                "default_values": null,
                "values_set": []
            },
            "validLandCoverClasses": {
                "description": "Land cover classes to include",
                "default_values": null,
                "values_set": []
            },
            "validPixelExpression": {
                "description": "Valid pixel expression",
                "default_values": null,
                "values_set": []
            },
            "includeOtherBands": {
                "description": "Add other bands unmasked",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Multilook": {
        "alias": "Multilook",
        "description": "Averages the power across a number of lines in both the azimuth and range directions",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.MultilookOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "nRgLooks": {
                "description": "The user defined number of range looks",
                "default_values": "1",
                "values_set": []
            },
            "nAzLooks": {
                "description": "The user defined number of azimuth looks",
                "default_values": "1",
                "values_set": []
            },
            "outputIntensity": {
                "description": "For complex product output intensity or i and q",
                "default_values": "false",
                "values_set": []
            },
            "grSquarePixel": {
                "description": "Use ground square pixel",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "SnaphuExport": {
        "alias": "SnaphuExport",
        "description": "Export data and prepare conf file for SNAPHU processing",
        "authors": "Petar Marinkovic, Jun Lu, Luis Veci",
        "name": "org.jlinda.nest.dataio.SnaphuExportOp",
        "version": "1.0",
        "params": {
            "targetFolder": {
                "description": "The output folder to which the data product is written.",
                "default_values": null,
                "values_set": []
            },
            "statCostMode": {
                "description": "Size of coherence estimation window in Azimuth direction",
                "default_values": "DEFO",
                "values_set": [
                    "TOPO",
                    "DEFO",
                    "SMOOTH",
                    "NOSTATCOSTS"
                ]
            },
            "initMethod": {
                "description": "Algorithm used for initialization of the wrapped phase values",
                "default_values": "MST",
                "values_set": [
                    "MST",
                    "MCF"
                ]
            },
            "numberOfTileRows": {
                "description": "Divide the image into tiles and process in parallel. Set to 1 for single tiled.",
                "default_values": "10",
                "values_set": []
            },
            "numberOfTileCols": {
                "description": "Divide the image into tiles and process in parallel. Set to 1 for single tiled.",
                "default_values": "10",
                "values_set": []
            },
            "numberOfProcessors": {
                "description": "Number of concurrent processing threads. Set to 1 for single threaded.",
                "default_values": "4",
                "values_set": []
            },
            "rowOverlap": {
                "description": "Overlap, in pixels, between neighboring tiles.",
                "default_values": "200",
                "values_set": []
            },
            "colOverlap": {
                "description": "Overlap, in pixels, between neighboring tiles.",
                "default_values": "200",
                "values_set": []
            },
            "tileCostThreshold": {
                "description": "Cost threshold to use for determining boundaries of reliable regions\n (long, dimensionless; scaled according to other cost constants).\n Larger cost threshold implies smaller regions---safer, but more expensive computationally.",
                "default_values": "500",
                "values_set": []
            }
        }
    },
    "S2Resampling": {
        "alias": "S2Resampling",
        "description": "Specific S2 resample algorithm",
        "authors": "Omar Barrilero",
        "name": "org.esa.s2tbx.s2msi.resampler.S2ResamplingOp",
        "version": "1.0",
        "params": {
            "targetResolution": {
                "description": "The output resolution.",
                "default_values": "60",
                "values_set": [
                    "10",
                    "20",
                    "60"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Bilinear",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "Mean",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "flagDownsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution) of flags.",
                "default_values": "First",
                "values_set": [
                    "First",
                    "FlagAnd",
                    "FlagOr",
                    "FlagMedianAnd",
                    "FlagMedianOr"
                ]
            },
            "resampleOnPyramidLevels": {
                "description": "This setting will increase performance when viewing the image, but accurate resamplings are only retrieved when zooming in on a pixel.",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "Subset": {
        "alias": "Subset",
        "description": "Create a spatial and/or spectral subset of a data product.",
        "authors": "Marco Zuehlke, Norman Fomferra, Marco Peters",
        "name": "org.esa.snap.core.gpf.common.SubsetOp",
        "version": "1.2",
        "params": {
            "bandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "region": {
                "description": "The subset region in pixel coordinates.\nUse the following format: <x>,<y>,<width>,<height>\nIf not given, the entire scene is used. The 'geoRegion' parameter has precedence over this parameter.",
                "default_values": null,
                "values_set": []
            },
            "referenceBand": {
                "description": "The band used to indicate the pixel coordinates.",
                "default_values": null,
                "values_set": []
            },
            "geoRegion": {
                "description": "The subset region in geographical coordinates using WKT-format,\ne.g. POLYGON((<lon1> <lat1>, <lon2> <lat2>, ..., <lon1> <lat1>))\n(make sure to quote the option due to spaces in <geometry>).\nIf not given, the entire scene is used.",
                "default_values": null,
                "values_set": []
            },
            "subSamplingX": {
                "description": "The pixel sub-sampling step in X (horizontal image direction)",
                "default_values": "1",
                "values_set": []
            },
            "subSamplingY": {
                "description": "The pixel sub-sampling step in Y (vertical image direction)",
                "default_values": "1",
                "values_set": []
            },
            "fullSwath": {
                "description": "Forces the operator to extend the subset region to the full swath.",
                "default_values": "false",
                "values_set": []
            },
            "tiePointGridNames": {
                "description": "The list of tie-point grids name.",
                "default_values": null,
                "values_set": []
            },
            "copyMetadata": {
                "description": "Whether to copy the metadata of the source product.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "StatisticsOp": {
        "alias": "StatisticsOp",
        "description": "Computes statistics for an arbitrary number of source products.",
        "authors": "Sabine Embacher, Tonio Fincke, Thomas Storm",
        "name": "org.esa.snap.statistics.StatisticsOp",
        "version": "1.0",
        "params": {
            "sourceProductPaths": {
                "description": "A comma-separated list of file paths specifying the source products.\nEach path may contain the wildcards '**' (matches recursively any directory),\n'*' (matches any character sequence in path names) and\n'?' (matches any single character).\nIf, for example, all NetCDF files under /eodata/ shall be considered, use '/eodata/**/*.nc'.",
                "default_values": null,
                "values_set": []
            },
            "shapefile": {
                "description": "An ESRI shapefile, providing the considered geographical region(s) given as polygons. If null, all pixels are considered.",
                "default_values": null,
                "values_set": []
            },
            "featureId": {
                "description": "The name of the attribute in the ESRI shapefile that shall be used to identify featuresin the output. If none is given or if the shapefile does not have the attribute, the feature id will beused. This parameter is case-sensitive. It is only considered when the shapefile parameter is set.",
                "default_values": "name",
                "values_set": []
            },
            "startDate": {
                "description": "The start date. If not given, taken from the 'oldest' source product. Products that have a start date before the start date given by this parameter are not considered.",
                "default_values": null,
                "values_set": []
            },
            "endDate": {
                "description": "The end date. If not given, taken from the 'youngest' source product. Products that have an end date after the end date given by this parameter are not considered.",
                "default_values": null,
                "values_set": []
            },
            "bandConfigurations": {
                "description": "The band configurations. These configurations determine the input of the operator.",
                "default_values": null,
                "values_set": []
            },
            "outputShapefile": {
                "description": "The target file for shapefile output. Shapefile output will only be written if this parameter is set. The band mapping file will have the suffix _band_mapping.txt.",
                "default_values": null,
                "values_set": []
            },
            "outputAsciiFile": {
                "description": "The target file for ASCII output.The metadata file will have the suffix _metadata.txt.\nASCII output will only be written if this parameter is set.",
                "default_values": null,
                "values_set": []
            },
            "percentiles": {
                "description": "The percentile levels that shall be created. Must be in the interval [0..100]",
                "default_values": "90,95",
                "values_set": []
            },
            "accuracy": {
                "description": "The degree of accuracy used for statistics computation. Higher numbers indicate higher accuracy but may lead to a considerably longer computation time.",
                "default_values": "3",
                "values_set": []
            },
            "interval": {
                "description": "If set, the StatisticsOp will divide the time between start and end time into time intervalsdefined by this parameter. All measures will be aggregated from products within these intervals. This parameter will only have an effect if the parameters start date and end date are set.",
                "default_values": null,
                "values_set": []
            },
            "writeDataTypesSeparately": {
                "description": "If true, categorical measures and quantitative measures will be written separately.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "ReflectanceToRadianceOp": {
        "alias": "ReflectanceToRadianceOp",
        "description": "The 'Reflectance To Radiance Processor' operator retrieves the radiance from reflectance using Sentinel-2 products",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.reflectance2radiance.ReflectanceToRadianceOp",
        "version": "1.0",
        "params": {
            "solarIrradiance": {
                "description": "The solar irradiance.",
                "default_values": null,
                "values_set": []
            },
            "u": {
                "description": "U",
                "default_values": null,
                "values_set": []
            },
            "incidenceAngle": {
                "description": "The incidence angle in degrees.",
                "default_values": null,
                "values_set": []
            },
            "sourceBandNames": {
                "description": "The source bands for the computation.",
                "default_values": null,
                "values_set": []
            },
            "copyMasks": {
                "description": "Copy masks from the source product",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "TOPSAR-DerampDemod": {
        "alias": "TOPSAR-DerampDemod",
        "description": "Bursts co-registration using orbit and DEM",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sentinel1.gpf.TOPSARDerampDemodOp",
        "version": "1.0",
        "params": {
            "outputDerampDemodPhase": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Azimuth-Shift-Estimation-ESD": {
        "alias": "Azimuth-Shift-Estimation-ESD",
        "description": "Estimate azimuth offset for the whole image",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sentinel1.gpf.AzimuthShiftEstimationUsingESDOp",
        "version": "1.0",
        "params": {
            "cohThreshold": {
                "description": "The coherence threshold for outlier removal",
                "default_values": "0.15",
                "values_set": []
            },
            "numBlocksPerOverlap": {
                "description": "The number of windows per overlap for ESD",
                "default_values": "10",
                "values_set": []
            }
        }
    },
    "Mosaic": {
        "alias": "Mosaic",
        "description": "Creates a mosaic out of a set of source products.",
        "authors": "Marco Peters, Ralf Quast, Marco Z\u00fchlke",
        "name": "org.esa.snap.core.gpf.common.MosaicOp",
        "version": "1.0",
        "params": {
            "variables": {
                "description": "Specifies the bands in the target product.",
                "default_values": null,
                "values_set": []
            },
            "conditions": {
                "description": "Specifies valid pixels considered in the target product.",
                "default_values": null,
                "values_set": []
            },
            "combine": {
                "description": "Specifies the way how conditions are combined.",
                "default_values": "OR",
                "values_set": [
                    "OR",
                    "AND"
                ]
            },
            "crs": {
                "description": "The CRS of the target product, represented as WKT or authority code.",
                "default_values": "EPSG:4326",
                "values_set": []
            },
            "orthorectify": {
                "description": "Whether the source product should be orthorectified.",
                "default_values": "false",
                "values_set": []
            },
            "elevationModelName": {
                "description": "The name of the elevation model for the orthorectification.",
                "default_values": null,
                "values_set": []
            },
            "resamplingName": {
                "description": "The method used for resampling.",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "westBound": {
                "description": "The western longitude.",
                "default_values": "-15.0",
                "values_set": []
            },
            "northBound": {
                "description": "The northern latitude.",
                "default_values": "75.0",
                "values_set": []
            },
            "eastBound": {
                "description": "The eastern longitude.",
                "default_values": "30.0",
                "values_set": []
            },
            "southBound": {
                "description": "The southern latitude.",
                "default_values": "35.0",
                "values_set": []
            },
            "pixelSizeX": {
                "description": "Size of a pixel in X-direction in map units.",
                "default_values": "0.05",
                "values_set": []
            },
            "pixelSizeY": {
                "description": "Size of a pixel in Y-direction in map units.",
                "default_values": "0.05",
                "values_set": []
            }
        }
    },
    "SnaphuImport": {
        "alias": "SnaphuImport",
        "description": "Ingest SNAPHU results into InSAR product.",
        "authors": "Petar Marinkovic, Jun Lu, Luis Veci",
        "name": "org.jlinda.nest.dataio.SnaphuImportOp",
        "version": "1.0",
        "params": {
            "doNotKeepWrapped": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Enhanced-Spectral-Diversity": {
        "alias": "Enhanced-Spectral-Diversity",
        "description": "Estimate constant range and azimuth offsets for a stack of images",
        "authors": "David A. Monge, Reinier Oost, Esteban Aguilera, Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sentinel1.gpf.SpectralDiversityOp",
        "version": "1.0",
        "params": {
            "fineWinWidthStr": {
                "description": null,
                "default_values": "512",
                "values_set": [
                    "32",
                    "64",
                    "128",
                    "256",
                    "512",
                    "1024",
                    "2048"
                ]
            },
            "fineWinHeightStr": {
                "description": null,
                "default_values": "512",
                "values_set": [
                    "32",
                    "64",
                    "128",
                    "256",
                    "512",
                    "1024",
                    "2048"
                ]
            },
            "fineWinAccAzimuth": {
                "description": null,
                "default_values": "16",
                "values_set": [
                    "2",
                    "4",
                    "8",
                    "16",
                    "32",
                    "64"
                ]
            },
            "fineWinAccRange": {
                "description": null,
                "default_values": "16",
                "values_set": [
                    "2",
                    "4",
                    "8",
                    "16",
                    "32",
                    "64"
                ]
            },
            "fineWinOversampling": {
                "description": null,
                "default_values": "128",
                "values_set": [
                    "32",
                    "64",
                    "128",
                    "256"
                ]
            },
            "xCorrThreshold": {
                "description": "The peak cross-correlation threshold",
                "default_values": "0.1",
                "values_set": []
            },
            "cohThreshold": {
                "description": "The coherence threshold for outlier removal",
                "default_values": "0.3",
                "values_set": []
            },
            "numBlocksPerOverlap": {
                "description": "The number of windows per overlap for ESD",
                "default_values": "10",
                "values_set": []
            },
            "esdEstimator": {
                "description": "ESD estimator used for azimuth shift computation",
                "default_values": "Periodogram",
                "values_set": [
                    "Average",
                    "Periodogram"
                ]
            },
            "weightFunc": {
                "description": "Weight function of the coherence to use for azimuth shift estimation",
                "default_values": "Inv Quadratic",
                "values_set": [
                    "None",
                    "Linear",
                    "Quadratic",
                    "Inv Quadratic"
                ]
            },
            "temporalBaselineType": {
                "description": "Baseline type for building the integration network",
                "default_values": "Number of images",
                "values_set": [
                    "Number of images",
                    "Number of days"
                ]
            },
            "maxTemporalBaseline": {
                "description": "Maximum temporal baseline (in days or number of images depending on the Temporal baseline type) between pairs of images to construct the network. Any number < 1 will generate a network with all of the possible pairs.",
                "default_values": "4",
                "values_set": []
            },
            "integrationMethod": {
                "description": "Method used for integrating the shifts network.",
                "default_values": "L1 and L2",
                "values_set": [
                    "L1",
                    "L2",
                    "L1 and L2"
                ]
            },
            "doNotWriteTargetBands": {
                "description": "Do not write target bands",
                "default_values": "false",
                "values_set": []
            },
            "useSuppliedRangeShift": {
                "description": "Use user supplied range shift",
                "default_values": "false",
                "values_set": []
            },
            "overallRangeShift": {
                "description": "The overall range shift",
                "default_values": "0.0",
                "values_set": []
            },
            "useSuppliedAzimuthShift": {
                "description": "Use user supplied azimuth shift",
                "default_values": "false",
                "values_set": []
            },
            "overallAzimuthShift": {
                "description": "The overall azimuth shift",
                "default_values": "0.0",
                "values_set": []
            }
        }
    },
    "Multitemporal-Compositing": {
        "alias": "Multitemporal-Compositing",
        "description": "Compute composite image from multi-temporal RTCs",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.geometric.MultitemporalCompositingOp",
        "version": "1.0",
        "params": {}
    },
    "c2rcc": {
        "alias": "c2rcc",
        "description": "Performs atmospheric correction and IOP retrieval on OLCI, MSI, MERIS, MODIS or SeaWiFS L1 product.",
        "authors": "Roland Doerffer, Norman Fomferra, Sabine Embacher (Brockmann Consult)",
        "name": "org.esa.s3tbx.c2rcc.C2rccOperator",
        "version": "1.0",
        "params": {
            "sensorName": {
                "description": null,
                "default_values": null,
                "values_set": [
                    "",
                    "olci",
                    "msi",
                    "meris",
                    "meris4",
                    "modis",
                    "seawifs, viirs"
                ]
            },
            "validPixelExpression": {
                "description": "If not specified a sensor specific default expression will be used.",
                "default_values": null,
                "values_set": []
            },
            "salinity": {
                "description": "The value used as salinity for the scene",
                "default_values": "35.0",
                "values_set": []
            },
            "temperature": {
                "description": "The value used as temperature for the scene",
                "default_values": "15.0",
                "values_set": []
            },
            "ozone": {
                "description": "The value used as ozone if not provided by auxiliary data",
                "default_values": "330",
                "values_set": []
            },
            "press": {
                "description": "The surface air pressure at sea level if not provided by auxiliary data",
                "default_values": "1000",
                "values_set": []
            },
            "atmosphericAuxDataPath": {
                "description": "Path to the atmospheric auxiliary data directory. Use either this or the specific products. If the auxiliary data needed for interpolation is not available in this path, the data will automatically downloaded.",
                "default_values": null,
                "values_set": []
            },
            "outputRtosa": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "useDefaultSolarFlux": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "useEcmwfAuxData": {
                "description": "If selected, the ECMWF auxiliary data (ozone, air pressure) of the source product is used",
                "default_values": "true",
                "values_set": []
            },
            "outputAsRrs": {
                "description": "Reflectance values in the target product shall be either written as remote sensing or water leaving reflectances",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "c2rcc.meris4": {
        "alias": "c2rcc.meris4",
        "description": "Performs atmospheric correction and IOP retrieval with uncertainties on MERIS L1b data products from the 4th reprocessing.",
        "authors": "Roland Doerffer, Sabine Embacher (Brockmann Consult)",
        "name": "org.esa.s3tbx.c2rcc.meris4.C2rccMeris4Operator",
        "version": "1.0",
        "params": {
            "validPixelExpression": {
                "description": "Defines the pixels which are valid for processing.",
                "default_values": "!quality_flags.invalid && (!quality_flags.land || quality_flags.fresh_inland_water)",
                "values_set": []
            },
            "salinity": {
                "description": "The value used as salinity for the scene.",
                "default_values": "35.0",
                "values_set": []
            },
            "temperature": {
                "description": "The value used as temperature for the scene.",
                "default_values": "15.0",
                "values_set": []
            },
            "ozone": {
                "description": "The value used as ozone if not provided by auxiliary data.",
                "default_values": "330",
                "values_set": []
            },
            "press": {
                "description": "The surface air pressure at sea level if not provided by auxiliary data.",
                "default_values": "1000",
                "values_set": []
            },
            "TSMfakBpart": {
                "description": "TSM factor (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "1.72",
                "values_set": []
            },
            "TSMfakBwit": {
                "description": "TSM exponent (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "3.1",
                "values_set": []
            },
            "CHLexp": {
                "description": "Chlorophyll exponent ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "1.04",
                "values_set": []
            },
            "CHLfak": {
                "description": "Chlorophyll factor ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "21.0",
                "values_set": []
            },
            "thresholdRtosaOOS": {
                "description": "Threshold for out of scope of nn training dataset flag for gas corrected top-of-atmosphere reflectances.",
                "default_values": "0.003",
                "values_set": []
            },
            "thresholdAcReflecOos": {
                "description": "Threshold for out of scope of nn training dataset flag for atmospherically corrected reflectances.",
                "default_values": "0.1",
                "values_set": []
            },
            "thresholdCloudTDown865": {
                "description": "Threshold for cloud test based on downwelling transmittance @865.",
                "default_values": "0.955",
                "values_set": []
            },
            "atmosphericAuxDataPath": {
                "description": "Path to the atmospheric auxiliary data directory. Use either this or the specified products on the I/O Parameters tab. If the auxiliary data is not available at this path, the data will automatically be downloaded.",
                "default_values": null,
                "values_set": []
            },
            "alternativeNNPath": {
                "description": "Path to an alternative set of neuronal nets. Use this to replace the standard set of neuronal nets with the ones in the given directory.",
                "default_values": null,
                "values_set": []
            },
            "netSet": {
                "description": "Set of neuronal nets for algorithm.",
                "default_values": "C2RCC-Nets",
                "values_set": [
                    "C2RCC-Nets",
                    "C2X-Nets"
                ]
            },
            "outputAsRrs": {
                "description": "Write remote sensing reflectances instead of water leaving reflectances.",
                "default_values": "false",
                "values_set": []
            },
            "deriveRwFromPathAndTransmittance": {
                "description": "Alternative way of calculating water reflectance. Still experimental.",
                "default_values": "false",
                "values_set": []
            },
            "useEcmwfAuxData": {
                "description": "If selected, the ECMWF auxiliary data (total_ozone, sea_level_pressure) of the source product is used",
                "default_values": "true",
                "values_set": []
            },
            "outputRtoa": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRtosaGc": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRtosaGcAann": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRpath": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTdown": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTup": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputAcReflectance": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRhown": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputOos": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputKd": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputUncertainties": {
                "description": null,
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "PduStitching": {
        "alias": "PduStitching",
        "description": "Stitches multiple SLSTR L1B product dissemination units (PDUs) of the same orbit to a single product.",
        "authors": "Tonio Fincke",
        "name": "org.esa.s3tbx.slstr.pdu.stitching.PDUStitchingOp",
        "version": "1.0",
        "params": {
            "sourceProductPaths": {
                "description": "A comma-separated list of file paths specifying the product dissemination units.\nEach path may contain the wildcards '**' (matches recursively any directory),\n'*' (matches any character sequence in path names) and\n'?' (matches any single character).\nIf not given, the parameter 'sourceProducts' must be provided.",
                "default_values": null,
                "values_set": []
            },
            "targetDir": {
                "description": "The directory to which the stitched product shall be written.\nWithin this directory, a folder of the SLSTR L1B naming format will be created.\nIf no target directory is given, the product will be written to the user directory.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Flood-Detection": {
        "alias": "Flood-Detection",
        "description": "Detect flooded area.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.flood.FloodDetectionOp",
        "version": "1.0",
        "params": {}
    },
    "Multi-Temporal-Speckle-Filter": {
        "alias": "Multi-Temporal-Speckle-Filter",
        "description": "Speckle Reduction using Multitemporal Filtering",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.filtering.MultiTemporalSpeckleFilterOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "filter": {
                "description": null,
                "default_values": "Lee Sigma",
                "values_set": [
                    "None",
                    "Boxcar",
                    "Median",
                    "Frost",
                    "Gamma Map",
                    "Lee",
                    "Refined Lee",
                    "Lee Sigma",
                    "IDAN"
                ]
            },
            "filterSizeX": {
                "description": "The kernel x dimension",
                "default_values": "3",
                "values_set": []
            },
            "filterSizeY": {
                "description": "The kernel y dimension",
                "default_values": "3",
                "values_set": []
            },
            "dampingFactor": {
                "description": "The damping factor (Frost filter only)",
                "default_values": "2",
                "values_set": []
            },
            "estimateENL": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "enl": {
                "description": "The number of looks",
                "default_values": "1.0",
                "values_set": []
            },
            "numLooksStr": {
                "description": null,
                "default_values": "1",
                "values_set": [
                    "1",
                    "2",
                    "3",
                    "4"
                ]
            },
            "windowSize": {
                "description": null,
                "default_values": "7x7",
                "values_set": [
                    "5x5",
                    "7x7",
                    "9x9",
                    "11x11",
                    "13x13",
                    "15x15",
                    "17x17"
                ]
            },
            "targetWindowSizeStr": {
                "description": null,
                "default_values": "3x3",
                "values_set": [
                    "3x3",
                    "5x5"
                ]
            },
            "sigmaStr": {
                "description": null,
                "default_values": "0.9",
                "values_set": [
                    "0.5",
                    "0.6",
                    "0.7",
                    "0.8",
                    "0.9"
                ]
            },
            "anSize": {
                "description": "The Adaptive Neighbourhood size",
                "default_values": "50",
                "values_set": []
            }
        }
    },
    "CP-Simulation": {
        "alias": "CP-Simulation",
        "description": "Simulation of Compact Pol data from Quad Pol data",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.polarimetric.gpf.CompactPolDataSimulationOp",
        "version": null,
        "params": {
            "compactMode": {
                "description": "The compact mode",
                "default_values": "Right Circular Hybrid Mode",
                "values_set": [
                    "Right Circular Hybrid Mode",
                    "Left Circular Hybrid Mode"
                ]
            },
            "outputFormat": {
                "description": "The output simulated compact pol data format",
                "default_values": "Covariance Matrix C2",
                "values_set": [
                    "Covariance Matrix C2",
                    "Scatter Vector S2"
                ]
            },
            "noisePower": {
                "description": "The noise power",
                "default_values": "-25",
                "values_set": []
            },
            "simulateNoiseFloor": {
                "description": "Simulate noise floor",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "CiOp": {
        "alias": "CiOp",
        "description": "Colour Index  was developed to differentiate soils in the field.\nIn most cases the CI gives complementary information with the BI and the NDVI.\n Used for diachronic analyses, they help for a better understanding of the evolution of soil surfaces.",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.CiOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "greenFactor": {
                "description": "The value of the green source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the CI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "greenSourceBand": {
                "description": "The green band for the CI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "BandSelect": {
        "alias": "BandSelect",
        "description": "Creates a new product with only selected bands",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.utilities.gpf.BandSelectOp",
        "version": "1.0",
        "params": {
            "selectedPolarisations": {
                "description": "The list of polarisations",
                "default_values": null,
                "values_set": []
            },
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "bandNamePattern": {
                "description": "Band name regular expression pattern",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Oil-Spill-Detection": {
        "alias": "Oil-Spill-Detection",
        "description": "Detect oil spill.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.oceantools.OilSpillDetectionOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "backgroundWindowDim": {
                "description": "Background window dimension (km)",
                "default_values": "4.5",
                "values_set": []
            },
            "k": {
                "description": "Threshold shift from background mean",
                "default_values": "2.0",
                "values_set": []
            }
        }
    },
    "Ellipsoid-Correction-RD": {
        "alias": "Ellipsoid-Correction-RD",
        "description": "Ellipsoid correction with RD method and average scene height",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.geometric.EllipsoidCorrectionRDOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "externalDEMApplyEGM": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "demResamplingMethod": {
                "description": null,
                "default_values": "BILINEAR_INTERPOLATION",
                "values_set": [
                    "NEAREST_NEIGHBOUR",
                    "BILINEAR_INTERPOLATION",
                    "CUBIC_CONVOLUTION",
                    "BISINC_5_POINT_INTERPOLATION",
                    "BISINC_11_POINT_INTERPOLATION",
                    "BISINC_21_POINT_INTERPOLATION",
                    "BICUBIC_INTERPOLATION",
                    "DELAUNAY_INTERPOLATION"
                ]
            },
            "imgResamplingMethod": {
                "description": null,
                "default_values": "BILINEAR_INTERPOLATION",
                "values_set": [
                    "NEAREST_NEIGHBOUR",
                    "BILINEAR_INTERPOLATION",
                    "CUBIC_CONVOLUTION",
                    "BISINC_5_POINT_INTERPOLATION",
                    "BISINC_11_POINT_INTERPOLATION",
                    "BISINC_21_POINT_INTERPOLATION",
                    "BICUBIC_INTERPOLATION"
                ]
            },
            "pixelSpacingInMeter": {
                "description": "The pixel spacing in meters",
                "default_values": "0",
                "values_set": []
            },
            "pixelSpacingInDegree": {
                "description": "The pixel spacing in degrees",
                "default_values": "0",
                "values_set": []
            },
            "mapProjection": {
                "description": "The coordinate reference system in well known text format",
                "default_values": "WGS84(DD)",
                "values_set": []
            },
            "alignToStandardGrid": {
                "description": "Force the image grid to be aligned with a specific point",
                "default_values": "false",
                "values_set": []
            },
            "standardGridOriginX": {
                "description": "x-coordinate of the standard grid's origin point",
                "default_values": "0",
                "values_set": []
            },
            "standardGridOriginY": {
                "description": "y-coordinate of the standard grid's origin point",
                "default_values": "0",
                "values_set": []
            },
            "nodataValueAtSea": {
                "description": "Mask the sea with no data value (faster)",
                "default_values": "true",
                "values_set": []
            },
            "saveDEM": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveLatLon": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveIncidenceAngleFromEllipsoid": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveLocalIncidenceAngle": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveProjectedLocalIncidenceAngle": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveSelectedSourceBand": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "saveLayoverShadowMask": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "applyRadiometricNormalization": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveSigmaNought": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveGammaNought": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "saveBetaNought": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "incidenceAngleForSigma0": {
                "description": null,
                "default_values": "Use projected local incidence angle from DEM",
                "values_set": [
                    "Use incidence angle from Ellipsoid",
                    "Use local incidence angle from DEM",
                    "Use projected local incidence angle from DEM"
                ]
            },
            "incidenceAngleForGamma0": {
                "description": null,
                "default_values": "Use projected local incidence angle from DEM",
                "values_set": [
                    "Use incidence angle from Ellipsoid",
                    "Use local incidence angle from DEM",
                    "Use projected local incidence angle from DEM"
                ]
            },
            "auxFile": {
                "description": "The auxiliary file",
                "default_values": "Latest Auxiliary File",
                "values_set": [
                    "Latest Auxiliary File",
                    "Product Auxiliary File",
                    "External Auxiliary File"
                ]
            },
            "externalAuxFile": {
                "description": "The antenne elevation pattern gain auxiliary data file.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "GoldsteinPhaseFiltering": {
        "alias": "GoldsteinPhaseFiltering",
        "description": "Phase Filtering",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.insar.gpf.GoldsteinFilterOp",
        "version": "1.0",
        "params": {
            "alpha": {
                "description": "adaptive filter exponent",
                "default_values": "1.0",
                "values_set": []
            },
            "FFTSizeString": {
                "description": null,
                "default_values": "64",
                "values_set": [
                    "32",
                    "64",
                    "128",
                    "256"
                ]
            },
            "windowSizeString": {
                "description": null,
                "default_values": "3",
                "values_set": [
                    "3",
                    "5",
                    "7"
                ]
            },
            "useCoherenceMask": {
                "description": "Use coherence mask",
                "default_values": "false",
                "values_set": []
            },
            "coherenceThreshold": {
                "description": "The coherence threshold",
                "default_values": "0.2",
                "values_set": []
            }
        }
    },
    "Import-Vector": {
        "alias": "Import-Vector",
        "description": "Imports a shape file into a product",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.core.gpf.common.ImportVectorOp",
        "version": "1.1",
        "params": {
            "vectorFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "separateShapes": {
                "description": null,
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "Meris.Sdr": {
        "alias": "Meris.Sdr",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.sdr.SdrOp",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            },
            "neuralNetFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "validBandName": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "aot470Name": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "angName": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "angValue": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "ReplaceMetadata": {
        "alias": "ReplaceMetadata",
        "description": "Replace the metadata of the first product with that of the second",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.raster.gpf.ReplaceMetadataOp",
        "version": "1.0",
        "params": {
            "note": {
                "description": null,
                "default_values": "Replace the metadata of the first product with that of the second",
                "values_set": []
            }
        }
    },
    "DeburstWSS": {
        "alias": "DeburstWSS",
        "description": "Debursts an ASAR WSS product",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.DeburstWSSOp",
        "version": "1.0",
        "params": {
            "subSwath": {
                "description": null,
                "default_values": "SS1",
                "values_set": [
                    "SS1",
                    "SS2",
                    "SS3",
                    "SS4",
                    "SS5"
                ]
            },
            "produceIntensitiesOnly": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "average": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Meris.AerosolMerger": {
        "alias": "Meris.AerosolMerger",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.aerosol.AerosolMergerOp",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "GRD-Post": {
        "alias": "GRD-Post",
        "description": "Applies GRD post-processing",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sentinel1.gpf.GRDPostProcessOp",
        "version": "1.0",
        "params": {}
    },
    "WdviOp": {
        "alias": "WdviOp",
        "description": "Weighted Difference Vegetation Index retrieves the Isovegetation lines parallel to soil line. Soil line has an arbitrary slope and passes through origin",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.WdviOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "slopeSoilLine": {
                "description": "Soil line has an arbitrary slope and passes through origin",
                "default_values": "1.5F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the WDVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the WDVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "AddElevation": {
        "alias": "AddElevation",
        "description": "Creates a DEM band",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.dem.gpf.AddElevationOp",
        "version": "1.0",
        "params": {
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "demResamplingMethod": {
                "description": null,
                "default_values": "BICUBIC_INTERPOLATION",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "elevationBandName": {
                "description": "The elevation band name.",
                "default_values": "elevation",
                "values_set": []
            }
        }
    },
    "GLCM": {
        "alias": "GLCM",
        "description": "Extract Texture Features",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.raster.gpf.texture.GLCMOp",
        "version": "1.0",
        "params": {
            "sourceBands": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "windowSizeStr": {
                "description": null,
                "default_values": "9x9",
                "values_set": [
                    "5x5",
                    "7x7",
                    "9x9",
                    "11x11"
                ]
            },
            "angleStr": {
                "description": null,
                "default_values": "ALL",
                "values_set": [
                    "0",
                    "45",
                    "90",
                    "135",
                    "ALL"
                ]
            },
            "quantizerStr": {
                "description": null,
                "default_values": "Probabilistic Quantizer",
                "values_set": [
                    "Equal Distance Quantizer",
                    "Probabilistic Quantizer"
                ]
            },
            "quantizationLevelsStr": {
                "description": null,
                "default_values": "32",
                "values_set": [
                    "8",
                    "16",
                    "32",
                    "64",
                    "128"
                ]
            },
            "displacement": {
                "description": "Pixel displacement",
                "default_values": "4",
                "values_set": []
            },
            "noDataValue": {
                "description": "Target product no data value",
                "default_values": "-9999.0",
                "values_set": []
            },
            "outputContrast": {
                "description": "Output Contrast",
                "default_values": "true",
                "values_set": []
            },
            "outputDissimilarity": {
                "description": "Output Dissimilarity",
                "default_values": "true",
                "values_set": []
            },
            "outputHomogeneity": {
                "description": "Output Homogeneity",
                "default_values": "true",
                "values_set": []
            },
            "outputASM": {
                "description": "Output Angular Second Moment",
                "default_values": "true",
                "values_set": []
            },
            "outputEnergy": {
                "description": "Output Energy",
                "default_values": "true",
                "values_set": []
            },
            "outputMAX": {
                "description": "Output Maximum Probability",
                "default_values": "true",
                "values_set": []
            },
            "outputEntropy": {
                "description": "Output Entropy",
                "default_values": "true",
                "values_set": []
            },
            "outputMean": {
                "description": "Output GLCM Mean",
                "default_values": "true",
                "values_set": []
            },
            "outputVariance": {
                "description": "Output GLCM Variance",
                "default_values": "true",
                "values_set": []
            },
            "outputCorrelation": {
                "description": "Output GLCM Correlation",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "AATSR.Ungrid": {
        "alias": "AATSR.Ungrid",
        "description": "Ungrids (A)ATSR L1B products and extracts geolocation and pixel field of view data.",
        "authors": "Alasdhair Beaton, Philip Beavis",
        "name": "org.esa.s3tbx.aatsr.regrid.AatsrUngriddingOp",
        "version": "1.0",
        "params": {
            "L1BCharacterisationFile": {
                "description": "L1B characterisation file is needed to specify first forward pixel and first nadir pixel",
                "default_values": null,
                "values_set": []
            },
            "cornerReferenceFlag": {
                "description": "Choose the pixel coordinate reference point for use in the output file. \nCheck for Corner (default), un-check for Centre.",
                "default_values": "true",
                "values_set": []
            },
            "topographicFlag": {
                "description": "Option to apply topographic corrections to tie points",
                "default_values": "false",
                "values_set": []
            },
            "topographyHomogenity": {
                "description": "Distance (image coordinates) pixel can be from tie-point to have topo correction applied",
                "default_values": "0.05",
                "values_set": []
            }
        }
    },
    "Random-Forest-Classifier": {
        "alias": "Random-Forest-Classifier",
        "description": "Random Forest based classifier",
        "authors": "Cecilia Wong, Luis Veci",
        "name": "org.esa.snap.classification.gpf.randomForest.RandomForestClassifierOp",
        "version": null,
        "params": {
            "treeCount": {
                "description": "The number of trees",
                "default_values": "10",
                "values_set": []
            },
            "numTrainSamples": {
                "description": "The number of training samples",
                "default_values": "50000",
                "values_set": []
            },
            "savedClassifierName": {
                "description": "The saved classifier name",
                "default_values": null,
                "values_set": []
            },
            "doLoadClassifier": {
                "description": "Choose to save or load classifier",
                "default_values": "false",
                "values_set": []
            },
            "doClassValQuantization": {
                "description": "Quantization for raster traiing",
                "default_values": "true",
                "values_set": []
            },
            "minClassValue": {
                "description": "Quantization min class value for raster traiing",
                "default_values": "0.0",
                "values_set": []
            },
            "classValStepSize": {
                "description": "Quantization step size for raster traiing",
                "default_values": "5.0",
                "values_set": []
            },
            "classLevels": {
                "description": "Quantization class levels for raster traiing",
                "default_values": "101",
                "values_set": []
            },
            "trainOnRaster": {
                "description": "Train on raster or vector data",
                "default_values": "false",
                "values_set": []
            },
            "trainingBands": {
                "description": "Raster bands to train on",
                "default_values": null,
                "values_set": []
            },
            "trainingVectors": {
                "description": "Vectors to train on",
                "default_values": null,
                "values_set": []
            },
            "featureBands": {
                "description": "Names of bands to be used as features",
                "default_values": null,
                "values_set": []
            },
            "labelSource": {
                "description": "'VectorNodeName' or specific Attribute name",
                "default_values": null,
                "values_set": []
            },
            "evaluateClassifier": {
                "description": "Evaluate classifier and features",
                "default_values": "false",
                "values_set": []
            },
            "evaluateFeaturePowerSet": {
                "description": "Evaluate the power set of features",
                "default_values": "false",
                "values_set": []
            },
            "minPowerSetSize": {
                "description": "Minimum size of the power set of features",
                "default_values": "2",
                "values_set": []
            },
            "maxPowerSetSize": {
                "description": "Maximum size of the power set of features",
                "default_values": "7",
                "values_set": []
            }
        }
    },
    "Polarimetric-Classification": {
        "alias": "Polarimetric-Classification",
        "description": "Perform Polarimetric classification of a given product",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.classification.gpf.PolarimetricClassificationOp",
        "version": "1.0",
        "params": {
            "classification": {
                "description": null,
                "default_values": "H Alpha Wishart",
                "values_set": [
                    "Cloude-Pottier",
                    "Cloude-Pottier Dual Pol",
                    "H Alpha Wishart",
                    "H Alpha Wishart Dual Pol",
                    "Freeman-Durden Wishart",
                    "General Wishart"
                ]
            },
            "windowSize": {
                "description": "The sliding window size",
                "default_values": "5",
                "values_set": []
            },
            "maxIterations": {
                "description": "The maximum number of iterations",
                "default_values": "3",
                "values_set": []
            },
            "numInitialClasses": {
                "description": "The initial number of classes",
                "default_values": "90",
                "values_set": []
            },
            "numFinalClasses": {
                "description": "The desired number of classes",
                "default_values": "15",
                "values_set": []
            },
            "mixedCategoryThreshold": {
                "description": "The threshold for classifying pixels to mixed category",
                "default_values": "0.5",
                "values_set": []
            },
            "decomposition": {
                "description": null,
                "default_values": "Sinclair Decomposition",
                "values_set": [
                    "Sinclair Decomposition",
                    "Pauli Decomposition",
                    "Freeman-Durden Decomposition",
                    "Generalized Freeman-Durden Decomposition",
                    "Yamaguchi Decomposition",
                    "van Zyl Decomposition",
                    "H-A-Alpha Quad Pol Decomposition",
                    "Cloude Decomposition",
                    "Touzi Decomposition"
                ]
            }
        }
    },
    "IpviOp": {
        "alias": "IpviOp",
        "description": "Infrared Percentage Vegetation Index retrieves the Isovegetation lines converge at origin",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.IpviOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the IPVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the IPVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "ArviOp": {
        "alias": "ArviOp",
        "description": "Atmospherically Resistant Vegetation Index belongs to a family of indices with built-in atmospheric corrections.",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.ArviOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the RED source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "blueFactor": {
                "description": "The value of the BLUE source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "gammaParameter": {
                "description": "The gamma parameter is like a weighting function that depends on the aerosol type",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the ARVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "blueSourceBand": {
                "description": "The blue band for the ARVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the ARVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "DEM-Assisted-Coregistration": {
        "alias": "DEM-Assisted-Coregistration",
        "description": "Orbit and DEM based co-registration",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.insar.gpf.coregistration.DEMAssistedCoregistrationOp",
        "version": "1.0",
        "params": {
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "demResamplingMethod": {
                "description": null,
                "default_values": "BICUBIC_INTERPOLATION",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "resamplingType": {
                "description": "The method to be used when resampling the slave grid onto the master grid.",
                "default_values": "BISINC_5_POINT_INTERPOLATION",
                "values_set": []
            },
            "tileExtensionPercent": {
                "description": "Define tile extension percentage.",
                "default_values": "50",
                "values_set": []
            },
            "maskOutAreaWithoutElevation": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRangeAzimuthOffset": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "FlhMci": {
        "alias": "FlhMci",
        "description": "Computes fluorescence line height (FLH) or maximum chlorophyll index (MCI).",
        "authors": "Tom Block, Ralf Quast, Marco Peters",
        "name": "org.esa.s3tbx.processor.flh_mci.FlhMciOp",
        "version": "3.1",
        "params": {
            "preset": {
                "description": "Sets default values according to the selected preset. The specific parameters have precedence and override the ones from the preset",
                "default_values": "NONE",
                "values_set": []
            },
            "lowerBaselineBandName": {
                "description": "The name for the lower wavelength band defining the baseline",
                "default_values": null,
                "values_set": []
            },
            "upperBaselineBandName": {
                "description": "The name of the upper wavelength band defining the baseline",
                "default_values": null,
                "values_set": []
            },
            "signalBandName": {
                "description": " The name of the signal band, i.e. the band for which the baseline height is calculated",
                "default_values": null,
                "values_set": []
            },
            "lineHeightBandName": {
                "description": "The name of the line height band in the target product",
                "default_values": null,
                "values_set": []
            },
            "slope": {
                "description": "Activates or deactivates calculating the slope parameter",
                "default_values": "true",
                "values_set": []
            },
            "slopeBandName": {
                "description": "The name of the slope band in the target product",
                "default_values": null,
                "values_set": []
            },
            "maskExpression": {
                "description": "A ROI-mask expression used to identify pixels of interest",
                "default_values": null,
                "values_set": []
            },
            "cloudCorrectionFactor": {
                "description": "The cloud correction factor used during calculation",
                "default_values": "1.005",
                "values_set": []
            },
            "invalidFlhMciValue": {
                "description": "Value used to fill invalid FLH/MCI pixels",
                "default_values": "NaN",
                "values_set": []
            }
        }
    },
    "BiOp": {
        "alias": "BiOp",
        "description": "The Brightness index represents the average of the brightness of a satellite image.",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.BiOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "greenFactor": {
                "description": "The value of the green source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the BI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "greenSourceBand": {
                "description": "The green band for the BI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "BandsExtractorOp": {
        "alias": "BandsExtractorOp",
        "description": "Creates a new product out of the source product containing only the indexes bands given",
        "authors": "Razvan Dumitrascu",
        "name": "org.esa.s2tbx.fcc.common.BandsExtractorOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The source bands for the computation.",
                "default_values": null,
                "values_set": []
            },
            "sourceMaskNames": {
                "description": "The source masks for the computation.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "GemiOp": {
        "alias": "GemiOp",
        "description": "This retrieves the Global Environmental Monitoring Index (GEMI).",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.GemiOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the RED source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the GEMI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the GEMI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "TileWriter": {
        "alias": "TileWriter",
        "description": "Writes a data product to a tiles.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.utilities.gpf.TileWriterOp",
        "version": "1.0",
        "params": {
            "file": {
                "description": "The output file to which the data product is written.",
                "default_values": null,
                "values_set": []
            },
            "formatName": {
                "description": "The name of the output file format.",
                "default_values": "BEAM-DIMAP",
                "values_set": []
            },
            "divisionBy": {
                "description": "How to divide the tiles",
                "default_values": "Tiles",
                "values_set": [
                    "Tiles",
                    "Pixels"
                ]
            },
            "numberOfTiles": {
                "description": "The number of output tiles",
                "default_values": "4",
                "values_set": [
                    "2",
                    "4",
                    "9",
                    "16",
                    "36",
                    "64",
                    "100",
                    "256"
                ]
            },
            "pixelSizeX": {
                "description": "Tile pixel width",
                "default_values": "200",
                "values_set": []
            },
            "pixelSizeY": {
                "description": "Tile pixel height",
                "default_values": "200",
                "values_set": []
            },
            "overlap": {
                "description": "Tile overlap",
                "default_values": "0",
                "values_set": []
            }
        }
    },
    "Warp": {
        "alias": "Warp",
        "description": "Create Warp Function And Get Co-registrated Images",
        "authors": "Jun Lu, Luis Veci, Petar Marinkovic",
        "name": "org.esa.s1tbx.insar.gpf.coregistration.WarpOp",
        "version": "1.0",
        "params": {
            "rmsThreshold": {
                "description": "Confidence level for outlier detection procedure, lower value accepts more outliers",
                "default_values": "0.05",
                "values_set": [
                    "0.001",
                    "0.05",
                    "0.1",
                    "0.5",
                    "1.0"
                ]
            },
            "warpPolynomialOrder": {
                "description": "The order of WARP polynomial function",
                "default_values": "2",
                "values_set": [
                    "1",
                    "2",
                    "3"
                ]
            },
            "interpolationMethod": {
                "description": null,
                "default_values": "Cubic convolution (6 points)",
                "values_set": [
                    "Nearest-neighbor interpolation",
                    "Bilinear interpolation",
                    "Bicubic interpolation",
                    "Bicubic2 interpolation",
                    "Linear interpolation",
                    "Cubic convolution (4 points)",
                    "Cubic convolution (6 points)",
                    "Truncated sinc (6 points)",
                    "Truncated sinc (8 points)",
                    "Truncated sinc (16 points)"
                ]
            },
            "demRefinement": {
                "description": "Refine estimated offsets using a-priori DEM",
                "default_values": "false",
                "values_set": []
            },
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "excludeMaster": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "openResidualsFile": {
                "description": "Show the Residuals file in a text viewer",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Stack-Split": {
        "alias": "Stack-Split",
        "description": "Writes all bands to files.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.insar.gpf.StackSplitWriter",
        "version": "1.0",
        "params": {
            "targetFolder": {
                "description": "The output folder to which the data product is written.",
                "default_values": "target",
                "values_set": []
            },
            "formatName": {
                "description": "The name of the output file format.",
                "default_values": "BEAM-DIMAP",
                "values_set": []
            }
        }
    },
    "S2repOp": {
        "alias": "S2repOp",
        "description": "Sentinel-2 red-edge position index",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.S2repOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redB4Factor": {
                "description": "The value of the red source band (B4) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redB5Factor": {
                "description": "The value of the red source band (B5) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redB6Factor": {
                "description": "The value of the red source band (B6) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand4": {
                "description": "The red band (B4) for the S2REP computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "redSourceBand5": {
                "description": "The red band (B5) for the S2REP computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "redSourceBand6": {
                "description": "The red band (B6) for the S2REP computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the S2REP computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "PpeFiltering": {
        "alias": "PpeFiltering",
        "description": "Performs Prompt Particle Event (PPE) filtering on OLCI L1B",
        "authors": "Juancho Gossn, Roman Shevchuk, Marco Peters",
        "name": "org.esa.s3tbx.ppe.PpeOp",
        "version": "1.1",
        "params": {
            "cutOff": {
                "description": "Minimum threshold to differentiate with the neighboring pixels.",
                "default_values": "0.7",
                "values_set": []
            },
            "numberOfMAD": {
                "description": "Multiplier of MAD (Median Absolute Deviation) used for the threshold.",
                "default_values": "10",
                "values_set": []
            },
            "validExpression": {
                "description": "An expression to filter which pixel are considered.",
                "default_values": "not quality_flags_land",
                "values_set": []
            }
        }
    },
    "Fill-DEM-Hole": {
        "alias": "Fill-DEM-Hole",
        "description": "Fill holes in given DEM product file.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.dem.gpf.FillDEMHoleOp",
        "version": "1.0",
        "params": {
            "sourceBands": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "NoDataValue": {
                "description": null,
                "default_values": "0.0",
                "values_set": []
            }
        }
    },
    "c2rcc.landsat8": {
        "alias": "c2rcc.landsat8",
        "description": "Performs atmospheric correction and IOP retrieval with uncertainties on Landsat-8 L1 data products.",
        "authors": "Roland Doerffer, Marco Peters (Brockmann Consult)",
        "name": "org.esa.s3tbx.c2rcc.landsat.C2rccLandsat8Operator",
        "version": "1.2",
        "params": {
            "validPixelExpression": {
                "description": "Defines the pixels which are valid for processing.",
                "default_values": null,
                "values_set": []
            },
            "salinity": {
                "description": "The value used as salinity for the scene.",
                "default_values": "35.0",
                "values_set": []
            },
            "temperature": {
                "description": "The value used as temperature for the scene.",
                "default_values": "15.0",
                "values_set": []
            },
            "ozone": {
                "description": "The value used as ozone if not provided by auxiliary data.",
                "default_values": "330",
                "values_set": []
            },
            "press": {
                "description": "The surface air pressure at sea level if not provided by auxiliary data.",
                "default_values": "1000",
                "values_set": []
            },
            "elevation": {
                "description": "Used as fallback if elevation could not be taken from GETASSE30 DEM.",
                "default_values": "0",
                "values_set": []
            },
            "TSMfakBpart": {
                "description": "TSM factor (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "1.72",
                "values_set": []
            },
            "TSMfakBwit": {
                "description": "TSM exponent (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "3.1",
                "values_set": []
            },
            "CHLexp": {
                "description": "Chlorophyll exponent ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "1.04",
                "values_set": []
            },
            "CHLfak": {
                "description": "Chlorophyll factor ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "21.0",
                "values_set": []
            },
            "thresholdRtosaOOS": {
                "description": "Threshold for out of scope of nn training dataset flag for gas corrected top-of-atmosphere reflectances.",
                "default_values": "0.05",
                "values_set": []
            },
            "thresholdAcReflecOos": {
                "description": "Threshold for out of scope of nn training dataset flag for atmospherically corrected reflectances",
                "default_values": "0.1",
                "values_set": []
            },
            "thresholdCloudTDown865": {
                "description": "Threshold for cloud test based on downwelling transmittance @865",
                "default_values": "0.955",
                "values_set": []
            },
            "atmosphericAuxDataPath": {
                "description": "Path to the atmospheric auxiliary data directory. Use either this or the specified products on the I/O Parameters tab. If the auxiliary data is not available at this path, the data will automatically be downloaded.",
                "default_values": null,
                "values_set": []
            },
            "alternativeNNPath": {
                "description": "Path to an alternative set of neuronal nets. Use this to replace the standard set of neuronal nets.",
                "default_values": null,
                "values_set": []
            },
            "netSet": {
                "description": "Set of neuronal nets for algorithm.",
                "default_values": "C2RCC-Nets",
                "values_set": [
                    "C2RCC-Nets",
                    "C2X-Nets"
                ]
            },
            "outputAsRrs": {
                "description": "Write remote sensing reflectances instead of water leaving reflectances.",
                "default_values": "false",
                "values_set": []
            },
            "deriveRwFromPathAndTransmittance": {
                "description": "Alternative way of calculating water reflectance. Still experimental.",
                "default_values": "false",
                "values_set": []
            },
            "outputRtoa": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRtosaGc": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRtosaGcAann": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRpath": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTdown": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTup": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputAcReflectance": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRhown": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputOos": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputKd": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputUncertainties": {
                "description": null,
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "Meris.CloudProbability": {
        "alias": "Meris.CloudProbability",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.cloud.CloudProbabilityOp",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            },
            "configFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "validLandExpression": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "validOceanExpression": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Resample": {
        "alias": "Resample",
        "description": "Resampling of a multi-size source product to a single-size target product.",
        "authors": "Tonio Fincke",
        "name": "org.esa.snap.core.gpf.common.resample.ResamplingOp",
        "version": "2.0",
        "params": {
            "referenceBandName": {
                "description": "The name of the reference band. All other bands will be re-sampled to match its size and resolution. Either this or targetResolutionor targetWidth and targetHeight must be set.",
                "default_values": null,
                "values_set": []
            },
            "targetWidth": {
                "description": "The width that all bands of the target product shall have. If this is set, targetHeight must be set, too. Either this and targetHeight or referenceBand or targetResolution must be set.",
                "default_values": null,
                "values_set": []
            },
            "targetHeight": {
                "description": "The height that all bands of the target product shall have. If this is set, targetWidth must be set, too. Either this and targetWidth or referenceBand or targetResolution must be set.",
                "default_values": null,
                "values_set": []
            },
            "targetResolution": {
                "description": "The resolution that all bands of the target product shall have. The same value will be applied to scale image widths and heights. Either this or referenceBand or targetwidth and targetHeight must be set.",
                "default_values": null,
                "values_set": []
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "flagDownsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution) of flags.",
                "default_values": "First",
                "values_set": [
                    "First",
                    "FlagAnd",
                    "FlagOr",
                    "FlagMedianAnd",
                    "FlagMedianOr"
                ]
            },
            "resamplingPreset": {
                "description": "The resampling preset. This will over rules the settings for upsampling, downsampling and flagDownsampling.",
                "default_values": null,
                "values_set": []
            },
            "bandResamplings": {
                "description": "The band resamplings. This will over rules the settings for resamplingPreset.",
                "default_values": null,
                "values_set": []
            },
            "resampleOnPyramidLevels": {
                "description": "This setting will increase performance when viewing the image, but accurate resamplings are only retrieved when zooming in on a pixel.",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "FUB.Water": {
        "alias": "FUB.Water",
        "description": "FUB/WeW WATER Processor to retrieve case II water properties and atmospheric properties",
        "authors": "Thomas Schroeder, Michael Schaale",
        "name": "org.esa.s3tbx.fub.wew.WaterProcessorOp",
        "version": "4.0.1",
        "params": {
            "computeCHL": {
                "description": "Whether chlorophyll-a concentration band shall be computed",
                "default_values": "true",
                "values_set": []
            },
            "computeYS": {
                "description": "Whether yellow substances band shall be computed",
                "default_values": "true",
                "values_set": []
            },
            "computeTSM": {
                "description": "Whether total suspended matter band shall be computed",
                "default_values": "true",
                "values_set": []
            },
            "computeAtmCorr": {
                "description": "Whether atmospheric correction bands shall be computed",
                "default_values": "true",
                "values_set": []
            },
            "checkWhetherSuspectIsValid": {
                "description": "Expert parameter. Performs a check whether the 'l1_flags.SUSPECT' shall be considered in an expression.This parameter is only considered when the expression contains the term 'and not l1_flags.SUSPECT'",
                "default_values": "true",
                "values_set": []
            },
            "expression": {
                "description": "Band maths expression which defines valid pixels. If the expression is empty,all pixels will be considered.",
                "default_values": "not l1_flags.GLINT_RISK and not l1_flags.BRIGHT and not l1_flags.INVALID and not l1_flags.SUSPECT",
                "values_set": []
            }
        }
    },
    "PCA": {
        "alias": "PCA",
        "description": "Performs a Principal Component Analysis.",
        "authors": "Norman Fomferra",
        "name": "org.esa.snap.cluster.PrincipalComponentAnalysisOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The names of the bands being used for the cluster analysis.",
                "default_values": null,
                "values_set": []
            },
            "componentCount": {
                "description": "The maximum number of principal components to compute.",
                "default_values": "-1",
                "values_set": []
            },
            "roiMaskName": {
                "description": "The name of the ROI mask that should be used.",
                "default_values": null,
                "values_set": []
            },
            "removeNonRoiPixels": {
                "description": "Removes all non-ROI pixels in the target product.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "ToolAdapterOp": {
        "alias": "ToolAdapterOp",
        "description": "Tool Adapter Operator",
        "authors": null,
        "name": "org.esa.snap.core.gpf.operators.tooladapter.ToolAdapterOp",
        "version": "1.0",
        "params": {}
    },
    "CP-Stokes-Parameters": {
        "alias": "CP-Stokes-Parameters",
        "description": "Generates compact polarimetric Stokes child parameters",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.polarimetric.gpf.CompactPolStokesParametersOp",
        "version": null,
        "params": {
            "windowSizeXStr": {
                "description": null,
                "default_values": "5",
                "values_set": [
                    "3",
                    "5",
                    "7",
                    "9",
                    "11",
                    "13",
                    "15",
                    "17",
                    "19"
                ]
            },
            "windowSizeYStr": {
                "description": null,
                "default_values": "5",
                "values_set": [
                    "3",
                    "5",
                    "7",
                    "9",
                    "11",
                    "13",
                    "15",
                    "17",
                    "19"
                ]
            },
            "outputStokesVector": {
                "description": "Output Stokes vector",
                "default_values": "false",
                "values_set": []
            },
            "outputDegreeOfPolarization": {
                "description": "Output degree of polarization",
                "default_values": "true",
                "values_set": []
            },
            "outputDegreeOfDepolarization": {
                "description": "Output degree of depolarization",
                "default_values": "true",
                "values_set": []
            },
            "outputDegreeOfCircularity": {
                "description": "Output degree of circularity",
                "default_values": "true",
                "values_set": []
            },
            "outputDegreeOfEllipticity": {
                "description": "Output degree of ellipticity",
                "default_values": "true",
                "values_set": []
            },
            "outputCPR": {
                "description": "Output circular polarization ratio",
                "default_values": "true",
                "values_set": []
            },
            "outputLPR": {
                "description": "Output linear polarization ratio",
                "default_values": "true",
                "values_set": []
            },
            "outputRelativePhase": {
                "description": "Output relative phase",
                "default_values": "true",
                "values_set": []
            },
            "outputAlphas": {
                "description": "Output alphas",
                "default_values": "true",
                "values_set": []
            },
            "outputConformity": {
                "description": "Output conformity coefficient",
                "default_values": "true",
                "values_set": []
            },
            "outputPhasePhi": {
                "description": "Output phase phi",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "Polarimetric-Decomposition": {
        "alias": "Polarimetric-Decomposition",
        "description": "Perform Polarimetric decomposition of a given product",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.polarimetric.gpf.PolarimetricDecompositionOp",
        "version": "1.0",
        "params": {
            "decomposition": {
                "description": null,
                "default_values": "Sinclair Decomposition",
                "values_set": [
                    "Sinclair Decomposition",
                    "Pauli Decomposition",
                    "Freeman-Durden Decomposition",
                    "Generalized Freeman-Durden Decomposition",
                    "Yamaguchi Decomposition",
                    "van Zyl Decomposition",
                    "H-A-Alpha Quad Pol Decomposition",
                    "H-Alpha Dual Pol Decomposition",
                    "Cloude Decomposition",
                    "Touzi Decomposition",
                    "Huynen Decomposition",
                    "Yang Decomposition",
                    "Krogager Decomposition",
                    "Cameron Decomposition",
                    "Model-free 3-component Decomposition",
                    "Model-free 4-component Decomposition"
                ]
            },
            "windowSize": {
                "description": "The sliding window size",
                "default_values": "5",
                "values_set": []
            },
            "outputHAAlpha": {
                "description": "Output entropy, anisotropy, alpha",
                "default_values": "false",
                "values_set": []
            },
            "outputBetaDeltaGammaLambda": {
                "description": "Output beta, delta, gamma, lambda",
                "default_values": "false",
                "values_set": []
            },
            "outputAlpha123": {
                "description": "Output alpha 1, 2, 3",
                "default_values": "false",
                "values_set": []
            },
            "outputLambda123": {
                "description": "Output lambda 1, 2, 3",
                "default_values": "false",
                "values_set": []
            },
            "outputTouziParamSet0": {
                "description": "Output psi, tau, alpha, phi",
                "default_values": "false",
                "values_set": []
            },
            "outputTouziParamSet1": {
                "description": "Output psi1, tau1, alpha1, phi1",
                "default_values": "false",
                "values_set": []
            },
            "outputTouziParamSet2": {
                "description": "Output psi2, tau2, alpha2, phi2",
                "default_values": "false",
                "values_set": []
            },
            "outputTouziParamSet3": {
                "description": "Output psi3, tau3, alpha3, phi3",
                "default_values": "false",
                "values_set": []
            },
            "outputHuynenParamSet0": {
                "description": "Output 2A0_b, B0_plus_B, B0_minus_B",
                "default_values": "true",
                "values_set": []
            },
            "outputHuynenParamSet1": {
                "description": "Output A0, B0, B, C, D, E, F, G, H",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "NdtiOp": {
        "alias": "NdtiOp",
        "description": "Normalized difference turbidity index, allowing for the measurement of water turbidity",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.NdtiOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "greenFactor": {
                "description": "The value of the green source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the NDTI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "greenSourceBand": {
                "description": "The green band for the NDTI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Reproject": {
        "alias": "Reproject",
        "description": "Reprojection of a source product to a target Coordinate Reference System.",
        "authors": "Marco Z\u00fchlke, Marco Peters, Ralf Quast, Norman Fomferra",
        "name": "org.esa.snap.core.gpf.common.reproject.ReprojectionOp",
        "version": "1.0",
        "params": {
            "wktFile": {
                "description": "A file which contains the target Coordinate Reference System in WKT format.",
                "default_values": null,
                "values_set": []
            },
            "crs": {
                "description": "A text specifying the target Coordinate Reference System, either in WKT or as an authority code. For appropriate EPSG authority codes see (www.epsg-registry.org). AUTO authority can be used with code 42001 (UTM), and 42002 (Transverse Mercator) where the scene center is used as reference. Examples: EPSG:4326, AUTO:42001",
                "default_values": null,
                "values_set": []
            },
            "resamplingName": {
                "description": "The method used for resampling of floating-point raster data.",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "referencePixelX": {
                "description": "The X-position of the reference pixel.",
                "default_values": null,
                "values_set": []
            },
            "referencePixelY": {
                "description": "The Y-position of the reference pixel.",
                "default_values": null,
                "values_set": []
            },
            "easting": {
                "description": "The easting of the reference pixel.",
                "default_values": null,
                "values_set": []
            },
            "northing": {
                "description": "The northing of the reference pixel.",
                "default_values": null,
                "values_set": []
            },
            "orientation": {
                "description": "The orientation of the output product (in degree).",
                "default_values": "0",
                "values_set": []
            },
            "pixelSizeX": {
                "description": "The pixel size in X direction given in CRS units.",
                "default_values": null,
                "values_set": []
            },
            "pixelSizeY": {
                "description": "The pixel size in Y direction given in CRS units.",
                "default_values": null,
                "values_set": []
            },
            "width": {
                "description": "The width of the target product.",
                "default_values": null,
                "values_set": []
            },
            "height": {
                "description": "The height of the target product.",
                "default_values": null,
                "values_set": []
            },
            "tileSizeX": {
                "description": "The tile size in X direction.",
                "default_values": null,
                "values_set": []
            },
            "tileSizeY": {
                "description": "The tile size in Y direction.",
                "default_values": null,
                "values_set": []
            },
            "orthorectify": {
                "description": "Whether the source product should be orthorectified. (Not applicable to all products)",
                "default_values": "false",
                "values_set": []
            },
            "elevationModelName": {
                "description": "The name of the elevation model for the orthorectification. If not given tie-point data is used.",
                "default_values": null,
                "values_set": []
            },
            "noDataValue": {
                "description": "The value used to indicate no-data.",
                "default_values": null,
                "values_set": []
            },
            "includeTiePointGrids": {
                "description": "Whether tie-point grids should be included in the output product.",
                "default_values": "true",
                "values_set": []
            },
            "addDeltaBands": {
                "description": "Whether to add delta longitude and latitude bands.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "ALOS-Deskewing": {
        "alias": "ALOS-Deskewing",
        "description": "Deskewing ALOS product",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.geometric.ALOSDeskewingOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            }
        }
    },
    "Remodulate": {
        "alias": "Remodulate",
        "description": "Remodulation and reramping of SLC data",
        "authors": "Carlos Hernandez, Esteban Aguilera, Reinier Oost, David A. Monge",
        "name": "org.esa.s1tbx.utilities.gpf.RemodulateOp",
        "version": "1.0",
        "params": {}
    },
    "SetNoDataValue": {
        "alias": "SetNoDataValue",
        "description": "Set NoDataValueUsed flag and NoDataValue for all bands",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.utilities.gpf.SetNoDataValueOp",
        "version": "1.0",
        "params": {
            "noDataValueUsed": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "noDataValue": {
                "description": null,
                "default_values": "0.0",
                "values_set": []
            }
        }
    },
    "Remove-GRD-Border-Noise": {
        "alias": "Remove-GRD-Border-Noise",
        "description": "Mask no-value pixels for GRD product",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.calibration.gpf.RemoveGRDBorderNoiseOp",
        "version": "1.0",
        "params": {
            "selectedPolarisations": {
                "description": "The list of polarisations",
                "default_values": null,
                "values_set": []
            },
            "borderLimit": {
                "description": "The border margin limit",
                "default_values": "500",
                "values_set": []
            },
            "trimThreshold": {
                "description": "The trim threshold",
                "default_values": "0.5",
                "values_set": []
            }
        }
    },
    "Polarimetric-Matrices": {
        "alias": "Polarimetric-Matrices",
        "description": "Generates covariance or coherency matrix for given product",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.polarimetric.gpf.PolarimetricMatricesOp",
        "version": "1.0",
        "params": {
            "matrix": {
                "description": "The covariance or coherency matrix",
                "default_values": "T3",
                "values_set": [
                    "C2",
                    "C3",
                    "C4",
                    "T3",
                    "T4"
                ]
            }
        }
    },
    "Land-Sea-Mask": {
        "alias": "Land-Sea-Mask",
        "description": "Creates a bitmask defining land vs ocean.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.raster.gpf.masks.CreateLandMaskOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "landMask": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "useSRTM": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "geometry": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "invertGeometry": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "shorelineExtension": {
                "description": null,
                "default_values": "0",
                "values_set": []
            }
        }
    },
    "MoreThenAnIntegerOp": {
        "alias": "MoreThenAnIntegerOp",
        "description": "just for testing",
        "authors": null,
        "name": "org.esa.snap.core.gpf.internal.MoreThenAnIntegerOp",
        "version": null,
        "params": {}
    },
    "Cross-Channel-SNR-Correction": {
        "alias": "Cross-Channel-SNR-Correction",
        "description": "Compute general polarimetric parameters",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.polarimetric.gpf.CrossChannelSNRCorrectionOp",
        "version": "1.0",
        "params": {
            "windowSize": {
                "description": "The sliding window size",
                "default_values": "5",
                "values_set": []
            }
        }
    },
    "Calibration": {
        "alias": "Calibration",
        "description": "Calibration of products",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.calibration.gpf.CalibrationOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "auxFile": {
                "description": "The auxiliary file",
                "default_values": "Latest Auxiliary File",
                "values_set": [
                    "Latest Auxiliary File",
                    "Product Auxiliary File",
                    "External Auxiliary File"
                ]
            },
            "externalAuxFile": {
                "description": "The antenna elevation pattern gain auxiliary data file.",
                "default_values": null,
                "values_set": []
            },
            "outputImageInComplex": {
                "description": "Output image in complex",
                "default_values": "false",
                "values_set": []
            },
            "outputImageScaleInDb": {
                "description": "Output image scale",
                "default_values": "false",
                "values_set": []
            },
            "createGammaBand": {
                "description": "Create gamma0 virtual band",
                "default_values": "false",
                "values_set": []
            },
            "createBetaBand": {
                "description": "Create beta0 virtual band",
                "default_values": "false",
                "values_set": []
            },
            "selectedPolarisations": {
                "description": "The list of polarisations",
                "default_values": null,
                "values_set": []
            },
            "outputSigmaBand": {
                "description": "Output sigma0 band",
                "default_values": "true",
                "values_set": []
            },
            "outputGammaBand": {
                "description": "Output gamma0 band",
                "default_values": "false",
                "values_set": []
            },
            "outputBetaBand": {
                "description": "Output beta0 band",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "c2rcc.msi": {
        "alias": "c2rcc.msi",
        "description": "Performs atmospheric correction and IOP retrieval with uncertainties on Sentinel-2 MSI L1C data products.",
        "authors": "Roland Doerffer, Marco Peters, Sabine Embacher (Brockmann Consult)",
        "name": "org.esa.s3tbx.c2rcc.msi.C2rccMsiOperator",
        "version": "1.1",
        "params": {
            "validPixelExpression": {
                "description": "Defines the pixels which are valid for processing.",
                "default_values": "B8 > 0 && B8 < 0.1",
                "values_set": []
            },
            "salinity": {
                "description": "The value used as salinity for the scene.",
                "default_values": "35.0",
                "values_set": []
            },
            "temperature": {
                "description": "The value used as temperature for the scene.",
                "default_values": "15.0",
                "values_set": []
            },
            "ozone": {
                "description": "The value used as ozone if not provided by auxiliary data.",
                "default_values": "330",
                "values_set": []
            },
            "press": {
                "description": "The surface air pressure at sea level if not provided by auxiliary data.",
                "default_values": "1000",
                "values_set": []
            },
            "elevation": {
                "description": "Used as fallback if elevation could not be taken from GETASSE30 DEM.",
                "default_values": "0",
                "values_set": []
            },
            "TSMfakBpart": {
                "description": "TSM factor (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "1.06",
                "values_set": []
            },
            "TSMfakBwit": {
                "description": "TSM exponent (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "0.942",
                "values_set": []
            },
            "CHLexp": {
                "description": "Chlorophyll exponent ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "1.04",
                "values_set": []
            },
            "CHLfak": {
                "description": "Chlorophyll factor ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "21.0",
                "values_set": []
            },
            "thresholdRtosaOOS": {
                "description": "Threshold for out of scope of nn training dataset flag for gas corrected top-of-atmosphere reflectances",
                "default_values": "0.05",
                "values_set": []
            },
            "thresholdAcReflecOos": {
                "description": "Threshold for out of scope of nn training dataset flag for atmospherically corrected reflectances",
                "default_values": "0.1",
                "values_set": []
            },
            "thresholdCloudTDown865": {
                "description": "Threshold for cloud test based on downwelling transmittance @865",
                "default_values": "0.955",
                "values_set": []
            },
            "atmosphericAuxDataPath": {
                "description": "Path to the atmospheric auxiliary data directory. Use either this or the specified products on the I/O Parameters tab. If the auxiliary data is not available at this path, the data will automatically be downloaded.",
                "default_values": null,
                "values_set": []
            },
            "alternativeNNPath": {
                "description": "Path to an alternative set of neuronal nets. Use this to replace the standard set of neuronal nets.",
                "default_values": null,
                "values_set": []
            },
            "netSet": {
                "description": "Set of neuronal nets for algorithm.",
                "default_values": "C2RCC-Nets",
                "values_set": [
                    "C2RCC-Nets",
                    "C2X-Nets",
                    "C2X-COMPLEX-Nets"
                ]
            },
            "outputAsRrs": {
                "description": "Write remote sensing reflectances instead of water leaving reflectances.",
                "default_values": "false",
                "values_set": []
            },
            "deriveRwFromPathAndTransmittance": {
                "description": "Alternative way of calculating water reflectance. Still experimental.",
                "default_values": "false",
                "values_set": []
            },
            "outputRtoa": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRtosaGc": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRtosaGcAann": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRpath": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTdown": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTup": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputAcReflectance": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRhown": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputOos": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputKd": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputUncertainties": {
                "description": null,
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "IreciOp": {
        "alias": "IreciOp",
        "description": "Inverted red-edge chlorophyll index",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.IreciOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redB4Factor": {
                "description": "The value of the red source band (B4) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redB5Factor": {
                "description": "The value of the red source band (B5) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redB6Factor": {
                "description": "The value of the red source band (B6) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand4": {
                "description": "The red band (B4) for the IRECI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "redSourceBand5": {
                "description": "The red band (B5) for the IRECI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "redSourceBand6": {
                "description": "The red band (B6) for the IRECI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the IRECI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Meris.CombinedCloud": {
        "alias": "Meris.CombinedCloud",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.cloud.CombinedCloudOp",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "OWTClassification": {
        "alias": "OWTClassification",
        "description": "Performs an optical water type classification based on atmospherically corrected reflectances.",
        "authors": "Timothy Moore (University of New Hampshire); Marco Peters, Thomas Storm (Brockmann Consult)",
        "name": "org.esa.s3tbx.owt.OWTClassificationOp",
        "version": "2.1",
        "params": {
            "owtType": {
                "description": null,
                "default_values": "COASTAL",
                "values_set": []
            },
            "reflectancesPrefix": {
                "description": null,
                "default_values": "reflec",
                "values_set": []
            },
            "inputReflectanceIs": {
                "description": null,
                "default_values": "RADIANCE_REFLECTANCES",
                "values_set": []
            },
            "writeInputReflectances": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Arc.SST": {
        "alias": "Arc.SST",
        "description": "Computes sea surface temperature (SST) from (A)ATSR and SLSTR products.",
        "authors": "Owen Embury, Marco Peters",
        "name": "org.esa.s3tbx.arc.ArcSstOp",
        "version": "1.0",
        "params": {
            "tcwvExpression": {
                "description": "TCWV value to use in SST retrieval",
                "default_values": "30.0",
                "values_set": []
            },
            "asdi": {
                "description": "Enables/disables generation of ATSR Saharan Dust Index",
                "default_values": "true",
                "values_set": []
            },
            "asdiCoefficientsFile": {
                "description": "Coefficient file for ASDI",
                "default_values": "ASDI_AATSR",
                "values_set": [
                    "ASDI_ATSR1",
                    "ASDI_ATSR2",
                    "ASDI_AATSR"
                ]
            },
            "asdiMaskExpression": {
                "description": "ROI-mask used for the ASDI",
                "default_values": null,
                "values_set": []
            },
            "dual": {
                "description": "Enables/disables generation of the dual-view SST",
                "default_values": "true",
                "values_set": []
            },
            "dualCoefficientsFile": {
                "description": "Coefficient file for the dual-view SST",
                "default_values": "ARC_D2_AATSR",
                "values_set": [
                    "ARC_D2_ATSR1",
                    "ARC_D2_ATSR2",
                    "ARC_D2_AATSR",
                    "ARC_D2_SLSTR",
                    "ARC_D3_ATSR1",
                    "ARC_D3_ATSR2",
                    "ARC_D3_AATSR",
                    "ARC_D3_SLSTR"
                ]
            },
            "dualMaskExpression": {
                "description": "ROI-mask used for the dual-view SST",
                "default_values": null,
                "values_set": []
            },
            "nadir": {
                "description": "Enables/disables generation of the nadir-view SST",
                "default_values": "true",
                "values_set": []
            },
            "nadirCoefficientsFile": {
                "description": "Coefficient file for the nadir-view SST",
                "default_values": "ARC_N2_AATSR",
                "values_set": [
                    "ARC_N2_ATSR1",
                    "ARC_N2_ATSR2",
                    "ARC_N2_AATSR",
                    "ARC_N2_SLSTR",
                    "ARC_N3_ATSR1",
                    "ARC_N3_ATSR2",
                    "ARC_N3_AATSR",
                    "ARC_N3_SLSTR"
                ]
            },
            "nadirMaskExpression": {
                "description": "ROI-mask used for the nadir-view SST",
                "default_values": null,
                "values_set": []
            },
            "invalidSstValue": {
                "description": "Value used to fill invalid SST pixels",
                "default_values": "-999.0f",
                "values_set": []
            }
        }
    },
    "IEM-Multi-Angle-Inversion": {
        "alias": "IEM-Multi-Angle-Inversion",
        "description": "Performs IEM inversion using Multi-angle approach",
        "authors": null,
        "name": "org.csa.rstb.soilmoisture.gpf.IEMMultiAngleInverOp",
        "version": null,
        "params": {
            "N": {
                "description": "# closest sigma match from LUT search",
                "default_values": "5",
                "values_set": []
            },
            "M": {
                "description": "Length (pixels) of side of square neighbourhood (M)",
                "default_values": "5",
                "values_set": []
            },
            "doRemainingOutliersFilter": {
                "description": "Replace remaining outlier with neighbours's average",
                "default_values": "true",
                "values_set": []
            },
            "lutFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "sigmaPol": {
                "description": "Multi-Angle Polarizations",
                "default_values": "HH1-HH2",
                "values_set": [
                    "HH1-HH2",
                    "HH1-VV2",
                    "VV1-VV2",
                    "VV1-HH2"
                ]
            },
            "outputRMS": {
                "description": "Optional rms in output",
                "default_values": "false",
                "values_set": []
            },
            "thresholdRDC": {
                "description": "RDC deviation threshold",
                "default_values": "0.5",
                "values_set": []
            }
        }
    },
    "DecisionTree": {
        "alias": "DecisionTree",
        "description": "Perform decision tree classification",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.decisiontree.DecisionTreeOp",
        "version": null,
        "params": {
            "decisionTree": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "TOPSAR-Deburst": {
        "alias": "TOPSAR-Deburst",
        "description": "Debursts a Sentinel-1 TOPSAR product",
        "authors": "Jun Lu, Luis Veci, Reinier Oost, Esteban Aguilera, David A. Monge",
        "name": "org.esa.s1tbx.sentinel1.gpf.TOPSARDeburstOp",
        "version": "1.0",
        "params": {
            "selectedPolarisations": {
                "description": "The list of polarisations",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Meris.GapLessSdr": {
        "alias": "Meris.GapLessSdr",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.GapLessSdrOp",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Radar-Vegetation-Index": {
        "alias": "Radar-Vegetation-Index",
        "description": "Dual-pol Radar Vegetation Indices generation",
        "authors": "Dipankar Mandal et al.",
        "name": "org.csa.rstb.polarimetric.gpf.RVIOp",
        "version": "1.0",
        "params": {
            "windowSize": {
                "description": "The sliding window size",
                "default_values": "5",
                "values_set": []
            }
        }
    },
    "IEM-Hybrid-Inversion": {
        "alias": "IEM-Hybrid-Inversion",
        "description": "Performs IEM inversion using Hybrid approach",
        "authors": null,
        "name": "org.csa.rstb.soilmoisture.gpf.IEMHybridInverOp",
        "version": null,
        "params": {
            "N": {
                "description": "# closest sigma match from LUT search",
                "default_values": "5",
                "values_set": []
            },
            "M": {
                "description": "Length (pixels) of side of square neighbourhood (M)",
                "default_values": "5",
                "values_set": []
            },
            "doRemainingOutliersFilter": {
                "description": "Replace remaining outlier with neighbours's average",
                "default_values": "true",
                "values_set": []
            },
            "lutFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "outputRMS": {
                "description": "Optional rms in output",
                "default_values": "false",
                "values_set": []
            },
            "outputCL": {
                "description": "Optional cl in output",
                "default_values": "false",
                "values_set": []
            },
            "thresholdRDC": {
                "description": "RDC deviation threshold",
                "default_values": "0.5",
                "values_set": []
            }
        }
    },
    "Demodulate": {
        "alias": "Demodulate",
        "description": "Demodulation and deramping of SLC data",
        "authors": "Carlos Hernandez, Esteban Aguilera, Reinier Oost, David A. Monge",
        "name": "org.esa.s1tbx.utilities.gpf.DemodulateOp",
        "version": "1.0",
        "params": {}
    },
    "MphChlOlci": {
        "alias": "MphChlOlci",
        "description": "Computes maximum peak height of chlorophyll for OLCI. Implements OLCI-specific parts.",
        "authors": "Mark William Matthews, Daniel Odermatt, Tom Block, Olaf Danne",
        "name": "org.esa.s3tbx.mphchl.MphChlOlciOp",
        "version": "1.0",
        "params": {
            "validPixelExpression": {
                "description": "Expression defining pixels considered for processing.",
                "default_values": null,
                "values_set": []
            },
            "cyanoMaxValue": {
                "description": "Maximum chlorophyll, arithmetically higher values are capped.",
                "default_values": "1000.0",
                "values_set": []
            },
            "chlThreshForFloatFlag": {
                "description": "Chlorophyll threshold, above which all cyanobacteria dominated waters are 'float.",
                "default_values": "350.0",
                "values_set": []
            },
            "exportMph": {
                "description": "Switch to true to write 'mph' band.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Forest-Area-Detection": {
        "alias": "Forest-Area-Detection",
        "description": "Detect forest area.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.forest.ForestAreaDetectionOp",
        "version": "1.0",
        "params": {
            "nominatorBandName": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "denominatorBandName": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "windowSizeStr": {
                "description": null,
                "default_values": "3x3",
                "values_set": [
                    "3x3",
                    "5x5",
                    "7x7",
                    "9x9"
                ]
            },
            "T_Ratio_Low": {
                "description": "The lower bound for ratio image",
                "default_values": "3.76",
                "values_set": []
            },
            "T_Ratio_High": {
                "description": "The upper bound for ratio image",
                "default_values": "6.55",
                "values_set": []
            }
        }
    },
    "LandWaterMask": {
        "alias": "LandWaterMask",
        "description": "Operator creating a target product with a single band containing a land/water-mask.",
        "authors": "Thomas Storm",
        "name": "org.esa.snap.watermask.operator.WatermaskOp",
        "version": "1.3",
        "params": {
            "resolution": {
                "description": "Specifies on which resolution the water mask shall be based.",
                "default_values": "50",
                "values_set": [
                    "50",
                    "150",
                    "1000"
                ]
            },
            "subSamplingFactorX": {
                "description": "Specifies the factor between the resolution of the source product and the watermask in x direction. A value of '1' means no subsampling at all.",
                "default_values": "1",
                "values_set": []
            },
            "subSamplingFactorY": {
                "description": "Specifies the factor between the resolution of the source product and the watermask iny direction. A value of '1' means no subsampling at all.",
                "default_values": "1",
                "values_set": []
            }
        }
    },
    "Cross-Correlation": {
        "alias": "Cross-Correlation",
        "description": "Automatic Selection of Ground Control Points",
        "authors": "Jun Lu, Luis Veci, Petar Marinkovic",
        "name": "org.esa.s1tbx.insar.gpf.coregistration.CrossCorrelationOp",
        "version": "1.0",
        "params": {
            "numGCPtoGenerate": {
                "description": "The number of GCPs to use in a grid",
                "default_values": "2000",
                "values_set": []
            },
            "coarseRegistrationWindowWidth": {
                "description": null,
                "default_values": "128",
                "values_set": [
                    "32",
                    "64",
                    "128",
                    "256",
                    "512",
                    "1024",
                    "2048"
                ]
            },
            "coarseRegistrationWindowHeight": {
                "description": null,
                "default_values": "128",
                "values_set": [
                    "32",
                    "64",
                    "128",
                    "256",
                    "512",
                    "1024",
                    "2048"
                ]
            },
            "rowInterpFactor": {
                "description": null,
                "default_values": "2",
                "values_set": [
                    "2",
                    "4",
                    "8",
                    "16"
                ]
            },
            "columnInterpFactor": {
                "description": null,
                "default_values": "2",
                "values_set": [
                    "2",
                    "4",
                    "8",
                    "16"
                ]
            },
            "maxIteration": {
                "description": "The maximum number of iterations",
                "default_values": "10",
                "values_set": []
            },
            "gcpTolerance": {
                "description": "Tolerance in slave GCP validation check",
                "default_values": "0.5",
                "values_set": []
            },
            "applyFineRegistration": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "inSAROptimized": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "fineRegistrationWindowWidth": {
                "description": null,
                "default_values": "32",
                "values_set": [
                    "8",
                    "16",
                    "32",
                    "64",
                    "128",
                    "256",
                    "512"
                ]
            },
            "fineRegistrationWindowHeight": {
                "description": null,
                "default_values": "32",
                "values_set": [
                    "8",
                    "16",
                    "32",
                    "64",
                    "128",
                    "256",
                    "512"
                ]
            },
            "fineRegistrationWindowAccAzimuth": {
                "description": null,
                "default_values": "16",
                "values_set": [
                    "2",
                    "4",
                    "8",
                    "16",
                    "32",
                    "64"
                ]
            },
            "fineRegistrationWindowAccRange": {
                "description": null,
                "default_values": "16",
                "values_set": [
                    "2",
                    "4",
                    "8",
                    "16",
                    "32",
                    "64"
                ]
            },
            "fineRegistrationOversampling": {
                "description": null,
                "default_values": "16",
                "values_set": [
                    "2",
                    "4",
                    "8",
                    "16",
                    "32",
                    "64"
                ]
            },
            "coherenceWindowSize": {
                "description": "The coherence window size",
                "default_values": "3",
                "values_set": []
            },
            "coherenceThreshold": {
                "description": "The coherence threshold",
                "default_values": "0.6",
                "values_set": []
            },
            "useSlidingWindow": {
                "description": "Use sliding window for coherence calculation",
                "default_values": "false",
                "values_set": []
            },
            "computeOffset": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "onlyGCPsOnLand": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Meris.RayleighCorrection": {
        "alias": "Meris.RayleighCorrection",
        "description": "MERIS L2 rayleigh correction.",
        "authors": "Marco Z\u00fchlke",
        "name": "org.esa.s3tbx.meris.brr.RayleighCorrectionOp",
        "version": "2.3.4",
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            },
            "correctWater": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "exportRayCoeffs": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "exportRhoR": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "IntegerInterferogram": {
        "alias": "IntegerInterferogram",
        "description": "Create integer interferogram",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.insar.gpf.IntegerInterferogramOp",
        "version": null,
        "params": {}
    },
    "PhaseToElevation": {
        "alias": "PhaseToElevation",
        "description": "DEM Generation",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.insar.gpf.PhaseToElevationOp",
        "version": "1.0",
        "params": {
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "demResamplingMethod": {
                "description": null,
                "default_values": "BILINEAR_INTERPOLATION",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            }
        }
    },
    "Oil-Spill-Clustering": {
        "alias": "Oil-Spill-Clustering",
        "description": "Remove small clusters from detected area.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.oceantools.OilSpillClusteringOp",
        "version": "1.0",
        "params": {
            "minClusterSizeInKm2": {
                "description": "Minimum cluster size",
                "default_values": "0.1",
                "values_set": []
            }
        }
    },
    "EMClusterAnalysis": {
        "alias": "EMClusterAnalysis",
        "description": "Performs an expectation-maximization (EM) cluster analysis.",
        "authors": "Ralf Quast",
        "name": "org.esa.snap.cluster.EMClusterOp",
        "version": "1.0",
        "params": {
            "clusterCount": {
                "description": "Number of clusters",
                "default_values": "14",
                "values_set": []
            },
            "iterationCount": {
                "description": "Number of iterations",
                "default_values": "30",
                "values_set": []
            },
            "randomSeed": {
                "description": "Seed for the random generator, used for initialising the algorithm.",
                "default_values": "31415",
                "values_set": []
            },
            "sourceBandNames": {
                "description": "The names of the bands being used for the cluster analysis.",
                "default_values": null,
                "values_set": []
            },
            "roiMaskName": {
                "description": "The name of the ROI-Mask that should be used.",
                "default_values": null,
                "values_set": []
            },
            "includeProbabilityBands": {
                "description": "Determines whether the posterior probabilities are included as band data.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Object-Discrimination": {
        "alias": "Object-Discrimination",
        "description": "Remove false alarms from the detected objects.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.oceantools.ObjectDiscriminationOp",
        "version": "1.0",
        "params": {
            "minTargetSizeInMeter": {
                "description": "Minimum target size",
                "default_values": "50.0",
                "values_set": []
            },
            "maxTargetSizeInMeter": {
                "description": "Maximum target size",
                "default_values": "600.0",
                "values_set": []
            }
        }
    },
    "SliceAssembly": {
        "alias": "SliceAssembly",
        "description": "Merges Sentinel-1 slice products",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sentinel1.gpf.SliceAssemblyOp",
        "version": "1.0",
        "params": {
            "selectedPolarisations": {
                "description": "The list of polarisations",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "TileCache": {
        "alias": "TileCache",
        "description": "Experimental Operator which provides a dedicated cache for its source product.\nA guide on how this operator is used is provided at https://senbox.atlassian.net/wiki/x/VQCTLw.",
        "authors": "Marco Peters, Martin B\u00f6ttcher",
        "name": "org.esa.snap.core.gpf.internal.TileCacheOp",
        "version": "0.1",
        "params": {
            "cacheSize": {
                "description": "The cache size in MB. Set it to 0 to use default tile cache.",
                "default_values": "1000",
                "values_set": []
            }
        }
    },
    "IEM-Multi-Pol-Inversion": {
        "alias": "IEM-Multi-Pol-Inversion",
        "description": "Performs IEM inversion using Multi-polarization approach",
        "authors": null,
        "name": "org.csa.rstb.soilmoisture.gpf.IEMMultiPolInverOp",
        "version": null,
        "params": {
            "N": {
                "description": "# closest sigma match from LUT search",
                "default_values": "5",
                "values_set": []
            },
            "M": {
                "description": "Length (pixels) of side of square neighbourhood (M)",
                "default_values": "5",
                "values_set": []
            },
            "doRemainingOutliersFilter": {
                "description": "Replace remaining outlier with neighbours's average",
                "default_values": "true",
                "values_set": []
            },
            "lutFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "outputRMS": {
                "description": "Optional rms in output",
                "default_values": "false",
                "values_set": []
            },
            "thresholdRDC": {
                "description": "RDC deviation threshold",
                "default_values": "0.5",
                "values_set": []
            }
        }
    },
    "Offset-Tracking": {
        "alias": "Offset-Tracking",
        "description": "Create velocity vectors from offset tracking",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.insar.gpf.OffsetTrackingOp",
        "version": "1.0",
        "params": {
            "gridAzimuthSpacing": {
                "description": "The output grid azimuth spacing in pixels",
                "default_values": "40",
                "values_set": []
            },
            "gridRangeSpacing": {
                "description": "The output grid range spacing in pixels",
                "default_values": "40",
                "values_set": []
            },
            "registrationWindowWidth": {
                "description": null,
                "default_values": "128",
                "values_set": [
                    "32",
                    "64",
                    "128",
                    "256",
                    "512",
                    "1024",
                    "2048"
                ]
            },
            "registrationWindowHeight": {
                "description": null,
                "default_values": "128",
                "values_set": [
                    "32",
                    "64",
                    "128",
                    "256",
                    "512",
                    "1024",
                    "2048"
                ]
            },
            "xCorrThreshold": {
                "description": "The cross-correlation threshold",
                "default_values": "0.1",
                "values_set": []
            },
            "registrationOversampling": {
                "description": null,
                "default_values": "16",
                "values_set": [
                    "2",
                    "4",
                    "8",
                    "16",
                    "32",
                    "64",
                    "128",
                    "256",
                    "512"
                ]
            },
            "averageBoxSize": {
                "description": null,
                "default_values": "5",
                "values_set": [
                    "3",
                    "5",
                    "9",
                    "11"
                ]
            },
            "maxVelocity": {
                "description": "The threshold for eliminating invalid GCPs",
                "default_values": "5.0",
                "values_set": []
            },
            "radius": {
                "description": "Radius for Hole-Filling",
                "default_values": "4",
                "values_set": []
            },
            "resamplingType": {
                "description": "Methods for velocity interpolation.",
                "default_values": "BICUBIC_INTERPOLATION",
                "values_set": [
                    "NEAREST_NEIGHBOUR",
                    "BILINEAR_INTERPOLATION",
                    "BICUBIC_INTERPOLATION",
                    "BISINC_5_POINT_INTERPOLATION",
                    "CUBIC_CONVOLUTION"
                ]
            },
            "spatialAverage": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "fillHoles": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "roiVector": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "ReipOp": {
        "alias": "ReipOp",
        "description": "The red edge inflection point index",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.ReipOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redB4Factor": {
                "description": "The value of the red source band (B4) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redB5Factor": {
                "description": "The value of the red source band (B5) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redB6Factor": {
                "description": "The value of the red source band (B6) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand4": {
                "description": "The red band (B4) for the REIP computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "redSourceBand5": {
                "description": "The red band (B5) for the REIP computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "redSourceBand6": {
                "description": "The red band (B6) for the REIP computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the REIP computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "KNN-Classifier": {
        "alias": "KNN-Classifier",
        "description": "K-Nearest Neighbour classifier",
        "authors": "Cecilia Wong, Luis Veci",
        "name": "org.esa.snap.classification.gpf.knn.KNNClassifierOp",
        "version": null,
        "params": {
            "numNeighbours": {
                "description": "The number of neighbours",
                "default_values": "5",
                "values_set": []
            },
            "numTrainSamples": {
                "description": "The number of training samples",
                "default_values": "5000",
                "values_set": []
            },
            "savedClassifierName": {
                "description": "The saved classifier name",
                "default_values": null,
                "values_set": []
            },
            "doLoadClassifier": {
                "description": "Choose to save or load classifier",
                "default_values": "false",
                "values_set": []
            },
            "doClassValQuantization": {
                "description": "Quantization for raster traiing",
                "default_values": "true",
                "values_set": []
            },
            "minClassValue": {
                "description": "Quantization min class value for raster traiing",
                "default_values": "0.0",
                "values_set": []
            },
            "classValStepSize": {
                "description": "Quantization step size for raster traiing",
                "default_values": "5.0",
                "values_set": []
            },
            "classLevels": {
                "description": "Quantization class levels for raster traiing",
                "default_values": "101",
                "values_set": []
            },
            "trainOnRaster": {
                "description": "Train on raster or vector data",
                "default_values": "true",
                "values_set": []
            },
            "trainingBands": {
                "description": "Raster bands to train on",
                "default_values": null,
                "values_set": []
            },
            "trainingVectors": {
                "description": "Vectors to train on",
                "default_values": null,
                "values_set": []
            },
            "featureBands": {
                "description": "Names of bands to be used as features",
                "default_values": null,
                "values_set": []
            },
            "labelSource": {
                "description": "'VectorNodeName' or specific Attribute name",
                "default_values": null,
                "values_set": []
            },
            "evaluateClassifier": {
                "description": "Evaluate classifier and features",
                "default_values": null,
                "values_set": []
            },
            "evaluateFeaturePowerSet": {
                "description": "Evaluate the power set of features",
                "default_values": "false",
                "values_set": []
            },
            "minPowerSetSize": {
                "description": "Minimum size of the power set of features",
                "default_values": "2",
                "values_set": []
            },
            "maxPowerSetSize": {
                "description": "Maximum size of the power set of features",
                "default_values": "7",
                "values_set": []
            }
        }
    },
    "StampsExport": {
        "alias": "StampsExport",
        "description": "Export data for StaMPS processing",
        "authors": "Cecilia Wong, Luis Veci",
        "name": "org.esa.s1tbx.insar.gpf.StampsExportOp",
        "version": "1.0",
        "params": {
            "targetFolder": {
                "description": "The output folder to which the data product is written.",
                "default_values": null,
                "values_set": []
            },
            "psiFormat": {
                "description": "Format for PSI or SBAS",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "Bi2Op": {
        "alias": "Bi2Op",
        "description": "The Brightness index represents the average of the brightness of a satellite image.\nThis index is sensitive to the brightness of soils which is highly correlated with the humidity and the presence of salts in surface",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.Bi2Op",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the RED source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "greenFactor": {
                "description": "The value of the GREEN source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the BI2 computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "greenSourceBand": {
                "description": "The green band for the BI2 computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the BI2 computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "CoregistrationOp": {
        "alias": "CoregistrationOp",
        "description": "Coregisters two rasters, not considering their location",
        "authors": "Ramona M",
        "name": "org.esa.s2tbx.coregistration.CoregistrationOp",
        "version": "1.0",
        "params": {
            "masterSourceBand": {
                "description": "The master product band",
                "default_values": null,
                "values_set": []
            },
            "slaveSourceBand": {
                "description": "The slave product band",
                "default_values": null,
                "values_set": []
            },
            "levels": {
                "description": "The number of levels to process the images.",
                "default_values": "6",
                "values_set": []
            },
            "rank": {
                "description": "Value used to compute the rank.",
                "default_values": "4",
                "values_set": []
            },
            "iterations": {
                "description": "The number of interations for each level and for each radius.",
                "default_values": "2",
                "values_set": []
            },
            "radius": {
                "description": "The radius integer values splitted by comma.",
                "default_values": "32, 28, 24, 20, 16, 12, 8",
                "values_set": []
            }
        }
    },
    "Minimum-Distance-Classifier": {
        "alias": "Minimum-Distance-Classifier",
        "description": "Minimum Distance classifier",
        "authors": "Cecilia Wong, Luis Veci",
        "name": "org.esa.snap.classification.gpf.minimumdistance.MinimumDistanceClassifierOp",
        "version": null,
        "params": {
            "numTrainSamples": {
                "description": "The number of training samples",
                "default_values": "5000",
                "values_set": []
            },
            "savedClassifierName": {
                "description": "The saved classifier name",
                "default_values": null,
                "values_set": []
            },
            "doLoadClassifier": {
                "description": "Choose to save or load classifier",
                "default_values": "false",
                "values_set": []
            },
            "doClassValQuantization": {
                "description": "Quantization for raster traiing",
                "default_values": "true",
                "values_set": []
            },
            "minClassValue": {
                "description": "Quantization min class value for raster traiing",
                "default_values": "0.0",
                "values_set": []
            },
            "classValStepSize": {
                "description": "Quantization step size for raster traiing",
                "default_values": "5.0",
                "values_set": []
            },
            "classLevels": {
                "description": "Quantization class levels for raster traiing",
                "default_values": "101",
                "values_set": []
            },
            "trainingBands": {
                "description": "Raster bands to train on",
                "default_values": null,
                "values_set": []
            },
            "trainOnRaster": {
                "description": "Train on raster or vector data",
                "default_values": "true",
                "values_set": []
            },
            "trainingVectors": {
                "description": "Vectors to train on",
                "default_values": null,
                "values_set": []
            },
            "featureBands": {
                "description": "Names of bands to be used as features",
                "default_values": null,
                "values_set": []
            },
            "labelSource": {
                "description": "'VectorNodeName' or specific Attribute name",
                "default_values": null,
                "values_set": []
            },
            "evaluateClassifier": {
                "description": "Evaluate classifier and features",
                "default_values": null,
                "values_set": []
            },
            "evaluateFeaturePowerSet": {
                "description": "Evaluate the power set of features",
                "default_values": "false",
                "values_set": []
            },
            "minPowerSetSize": {
                "description": "Minimum size of the power set of features",
                "default_values": "2",
                "values_set": []
            },
            "maxPowerSetSize": {
                "description": "Maximum size of the power set of features",
                "default_values": "7",
                "values_set": []
            }
        }
    },
    "BandMaths": {
        "alias": "BandMaths",
        "description": "Create a product with one or more bands using mathematical expressions.",
        "authors": "Marco Zuehlke, Norman Fomferra, Marco Peters",
        "name": "org.esa.snap.core.gpf.common.BandMathsOp",
        "version": "1.1",
        "params": {
            "targetBandDescriptors": {
                "description": "List of descriptors defining the target bands.",
                "default_values": null,
                "values_set": []
            },
            "variables": {
                "description": "List of variables which can be used within the expressions.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Stack-Averaging": {
        "alias": "Stack-Averaging",
        "description": "Averaging multi-temporal images",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.insar.gpf.StackAveragingOp",
        "version": "1.0",
        "params": {
            "statistic": {
                "description": null,
                "default_values": "Mean Average",
                "values_set": [
                    "Mean Average",
                    "Minimum",
                    "Maximum",
                    "Standard Deviation",
                    "Coefficient of Variation"
                ]
            }
        }
    },
    "CreateStack": {
        "alias": "CreateStack",
        "description": "Collocates two or more products based on their geo-codings.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.insar.gpf.coregistration.CreateStackOp",
        "version": "1.0",
        "params": {
            "masterBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "slaveBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "resamplingType": {
                "description": "The method to be used when resampling the slave grid onto the master grid.",
                "default_values": "NONE",
                "values_set": []
            },
            "extent": {
                "description": "The output image extents.",
                "default_values": "Master",
                "values_set": [
                    "Master",
                    "Minimum",
                    "Maximum"
                ]
            },
            "initialOffsetMethod": {
                "description": "Method for computing initial offset between master and slave",
                "default_values": "Orbit",
                "values_set": [
                    "Orbit",
                    "Product Geolocation"
                ]
            }
        }
    },
    "Unmix": {
        "alias": "Unmix",
        "description": "Performs a linear spectral unmixing.",
        "authors": "Tom Block, Norman Fomferra, Helmut Schiller",
        "name": "org.esa.snap.unmixing.SpectralUnmixingOp",
        "version": "1.1",
        "params": {
            "sourceBandNames": {
                "description": "The list of spectral bands providing the source spectrum.",
                "default_values": null,
                "values_set": []
            },
            "endmembers": {
                "description": "The list of endmember spectra. Wavelengths must be given in nanometers.",
                "default_values": null,
                "values_set": []
            },
            "endmemberFile": {
                "description": "A text file containing (additional) endmembers in a table. Wavelengths must be given in nanometers.",
                "default_values": null,
                "values_set": []
            },
            "unmixingModelName": {
                "description": "The unmixing model.",
                "default_values": "Constrained LSU",
                "values_set": [
                    "Unconstrained LSU",
                    "Constrained LSU",
                    "Fully Constrained LSU"
                ]
            },
            "abundanceBandNameSuffix": {
                "description": "The suffix for the generated abundance band names (name = endmember + suffix).",
                "default_values": "_abundance",
                "values_set": []
            },
            "errorBandNameSuffix": {
                "description": "The suffix for the generated error band names (name = source + suffix).",
                "default_values": "_error",
                "values_set": []
            },
            "computeErrorBands": {
                "description": "If 'true', error bands for all source bands will be generated.",
                "default_values": "false",
                "values_set": []
            },
            "minBandwidth": {
                "description": "Minimum spectral bandwidth used for endmember wavelength matching.",
                "default_values": "10.0",
                "values_set": []
            }
        }
    },
    "Write": {
        "alias": "Write",
        "description": "Writes a data product to a file.",
        "authors": "Marco Zuehlke, Norman Fomferra",
        "name": "org.esa.snap.core.gpf.common.WriteOp",
        "version": "1.3",
        "params": {
            "file": {
                "description": "The output file to which the data product is written.",
                "default_values": null,
                "values_set": []
            },
            "formatName": {
                "description": "The name of the output file format.",
                "default_values": "BEAM-DIMAP",
                "values_set": [
                    "ENVI",
                    "GDAL-GSBG-WRITER",
                    "GDAL-GTiff-WRITER",
                    "GDAL-BMP-WRITER",
                    "Gamma for PyRate",
                    "GDAL-RMF-WRITER",
                    "Gamma",
                    "GDAL-BT-WRITER",
                    "GeoTIFF",
                    "GDAL-GTX-WRITER",
                    "NetCDF4-BEAM",
                    "GDAL-PCIDSK-WRITER",
                    "GDAL-RST-WRITER",
                    "BEAM-DIMAP",
                    "GDAL-HFA-WRITER",
                    "GDAL-KRO-WRITER",
                    "GDAL-GS7BG-WRITER",
                    "GDAL-PNM-WRITER",
                    "JPEG2000",
                    "GDAL-SGI-WRITER",
                    "GDAL-ILWIS-WRITER",
                    "HDF5",
                    "Snaphu",
                    "CSV",
                    "GDAL-MFF-WRITER",
                    "NetCDF4-CF",
                    "PolSARPro",
                    "GeoTIFF+XML",
                    "JP2",
                    "Generic Binary BSQ",
                    "GDAL-SAGA-WRITER",
                    "GeoTIFF-BigTIFF",
                    "GDAL-NITF-WRITER"
                ]
            },
            "deleteOutputOnFailure": {
                "description": "If true, all output files are deleted after a failed write operation.",
                "default_values": "true",
                "values_set": []
            },
            "writeEntireTileRows": {
                "description": "If true, the write operation waits until an entire tile row is computed.",
                "default_values": "false",
                "values_set": []
            },
            "clearCacheAfterRowWrite": {
                "description": "If true, the internal tile cache is cleared after a tile row has been written. Ignored if writeEntireTileRows=false.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Principle-Components": {
        "alias": "Principle-Components",
        "description": "Principle Component Analysis",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.insar.gpf.PCAOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "selectEigenvaluesBy": {
                "description": null,
                "default_values": "Eigenvalue Threshold",
                "values_set": [
                    "Eigenvalue Threshold",
                    "Number of Eigenvalues"
                ]
            },
            "eigenvalueThreshold": {
                "description": "The threshold for selecting eigenvalues",
                "default_values": "100",
                "values_set": []
            },
            "numPCA": {
                "description": "The number of PCA images output",
                "default_values": "1",
                "values_set": []
            },
            "showEigenvalues": {
                "description": "Show the eigenvalues",
                "default_values": "1",
                "values_set": []
            },
            "subtractMeanImage": {
                "description": "Subtract mean image",
                "default_values": "1",
                "values_set": []
            }
        }
    },
    "c2rcc.seawifs": {
        "alias": "c2rcc.seawifs",
        "description": "Performs atmospheric correction and IOP retrieval on SeaWifs L1C data products.",
        "authors": "Roland Doerffer, Sabine Embacher, Norman Fomferra (Brockmann Consult)",
        "name": "org.esa.s3tbx.c2rcc.seawifs.C2rccSeaWiFSOperator",
        "version": "1.0",
        "params": {
            "validPixelExpression": {
                "description": "Defines the pixels which are valid for processing",
                "default_values": "!(l2_flags.LAND || rhot_865 > 0.25)",
                "values_set": []
            },
            "salinity": {
                "description": "The value used as salinity for the scene",
                "default_values": "35.0",
                "values_set": []
            },
            "temperature": {
                "description": "The value used as temperature for the scene",
                "default_values": "15.0",
                "values_set": []
            },
            "ozone": {
                "description": "The value used as ozone if not provided by auxiliary data",
                "default_values": "330",
                "values_set": []
            },
            "press": {
                "description": "The surface air pressure at sea level if not provided by auxiliary data",
                "default_values": "1000",
                "values_set": []
            },
            "atmosphericAuxDataPath": {
                "description": "Path to the atmospheric auxiliary data directory. Use either this or tomsomiStartProduct, tomsomiEndProduct, ncepStartProduct and ncepEndProduct to use ozone and air pressure aux data for calculations. If the auxiliary data needed for interpolation not available in this path, the data will automatically downloaded.",
                "default_values": null,
                "values_set": []
            },
            "outputRtosa": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputAsRrs": {
                "description": "Reflectance values in the target product shall be either written as remote sensing or water leaving reflectances",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "FuClassification": {
        "alias": "FuClassification",
        "description": "Colour classification based on the discrete Forel-Ule scale",
        "authors": " H.J van der Woerd (IVM), M.R. Wernand (NIOZ), Muhammad Bala (BC), Marco Peters (BC)",
        "name": "org.esa.s3tbx.fu.FuOp",
        "version": "1.2",
        "params": {
            "copyAllSourceBands": {
                "description": "Weather or not to copy all the bands to the target product from the source product.",
                "default_values": "false",
                "values_set": []
            },
            "inputIsIrradianceReflectance": {
                "description": "If enabled, the source reflectances will be converted to radiance reflectances by dividing it by PI before passing to the algorithm.",
                "default_values": "false",
                "values_set": []
            },
            "validExpression": {
                "description": "An expression to filter which pixel are considered.",
                "default_values": null,
                "values_set": []
            },
            "reflectanceNamePattern": {
                "description": "The used reflectance band names must match the given pattern. Useful, if there is more then one spectrum in the product.",
                "default_values": null,
                "values_set": []
            },
            "instrument": {
                "description": "The instrument to compute FU for.",
                "default_values": "AUTO_DETECT",
                "values_set": []
            },
            "includeDominantLambda": {
                "description": "Whether or not the dominant wavelength shall be derived from the hue angle",
                "default_values": "false",
                "values_set": []
            },
            "includeIntermediateResults": {
                "description": "Whether or not the intermediate results shall be written to the target output",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "CloudProb": {
        "alias": "CloudProb",
        "description": "Applies a clear sky conservative cloud detection algorithm.",
        "authors": "Rene Preusker (Algorithm), Tom Block (BEAM Implementation), Thomas Storm (GPF conversion)",
        "name": "org.esa.s3tbx.operator.cloud.CloudOperator",
        "version": "1.7",
        "params": {}
    },
    "NdpiOp": {
        "alias": "NdpiOp",
        "description": "The normalized differential pond index, combines the short-wave infrared band-I and the green band",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.NdpiOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "greenFactor": {
                "description": "The value of the green source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "mirFactor": {
                "description": "The value of the MIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "greenSourceBand": {
                "description": "The green band for the NDPI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "mirSourceBand": {
                "description": "The mid-infrared band for the NDPI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Collocate": {
        "alias": "Collocate",
        "description": "Collocates two products based on their geo-codings.",
        "authors": "Ralf Quast, Norman Fomferra",
        "name": "org.esa.snap.collocation.CollocateOp",
        "version": "1.2",
        "params": {
            "sourceProductPaths": {
                "description": "A comma-separated list of file paths specifying the source products",
                "default_values": null,
                "values_set": []
            },
            "masterProductName": {
                "description": "The name of the master product.",
                "default_values": null,
                "values_set": []
            },
            "targetProductName": {
                "description": "The name of the target product",
                "default_values": "_collocated",
                "values_set": []
            },
            "targetProductType": {
                "description": "The product type string for the target product (informal)",
                "default_values": "COLLOCATED",
                "values_set": []
            },
            "renameMasterComponents": {
                "description": "Whether or not components of the master product shall be renamed in the target product.",
                "default_values": "true",
                "values_set": []
            },
            "renameSlaveComponents": {
                "description": "Whether or not components of the slave product shall be renamed in the target product.",
                "default_values": "true",
                "values_set": []
            },
            "masterComponentPattern": {
                "description": "The text pattern to be used when renaming master components.",
                "default_values": "${ORIGINAL_NAME}_M",
                "values_set": []
            },
            "slaveComponentPattern": {
                "description": "The text pattern to be used when renaming slave components.",
                "default_values": "${ORIGINAL_NAME}_S${SLAVE_NUMBER_ID}",
                "values_set": []
            },
            "resamplingType": {
                "description": "The method to be used when resampling the slave grid onto the master grid.",
                "default_values": "NEAREST_NEIGHBOUR",
                "values_set": []
            }
        }
    },
    "SpectralAngleMapperOp": {
        "alias": "SpectralAngleMapperOp",
        "description": "Classifies a product using the spectral angle mapper algorithm",
        "authors": "Dumitrascu Razvan",
        "name": "org.esa.s2tbx.mapper.SpectralAngleMapperOp",
        "version": "1.0",
        "params": {
            "referenceBands": {
                "description": "The reference bands to be used for the Spectral Angle Mapper Processor ",
                "default_values": null,
                "values_set": []
            },
            "thresholds": {
                "description": "thresholds",
                "default_values": "0.0",
                "values_set": []
            },
            "spectra": {
                "description": "The list of spectra.",
                "default_values": null,
                "values_set": []
            },
            "hiddenSpectra": {
                "description": "The list of spectra.",
                "default_values": null,
                "values_set": []
            },
            "resampleType": {
                "description": "If selected bands differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            }
        }
    },
    "Meris.N1Patcher": {
        "alias": "Meris.N1Patcher",
        "description": "Copies an existing N1 file and replaces the data for the radiance bands",
        "authors": "Marco Zuehlke, Olaf Danne, Marco Peters",
        "name": "org.esa.s3tbx.meris.N1PatcherOp",
        "version": "1.1",
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            },
            "patchedFile": {
                "description": "The file to which the patched L1b product is written.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Meris.CloudTopPressureOp": {
        "alias": "Meris.CloudTopPressureOp",
        "description": "Computes cloud top pressure with FUB NN.",
        "authors": "Marco Z\u00fchlke",
        "name": "org.esa.s3tbx.meris.cloud.CloudTopPressureOp",
        "version": "2.3.4",
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            },
            "straylightCorr": {
                "description": "If 'true' the algorithm will apply straylight correction.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "McariOp": {
        "alias": "McariOp",
        "description": "Modified Chlorophyll Absorption Ratio Index, developed to be responsive to chlorophyll variation",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.McariOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "red1Factor": {
                "description": "The value of the red source band (B4) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "red2Factor": {
                "description": "The value of the red source band (B5) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "greenFactor": {
                "description": "The value of the green source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "red1SourceBand": {
                "description": "The first red band for the MCARI computation. Choose B4 for Sentinel-2. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "red2SourceBand": {
                "description": "The second red band for the MCARI computation. Choose B5 for Sentinel-2. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "greenSourceBand": {
                "description": "The green band for the MCARI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Convert-Datatype": {
        "alias": "Convert-Datatype",
        "description": "Convert product data type",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.raster.gpf.ConvertDataTypeOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "targetDataType": {
                "description": null,
                "default_values": "uint8",
                "values_set": [
                    "int8",
                    "int16",
                    "int32",
                    "uint8",
                    "uint16",
                    "uint32",
                    "float32",
                    "float64"
                ]
            },
            "targetScalingStr": {
                "description": null,
                "default_values": "Linear (between 95% clipped histogram)",
                "values_set": [
                    "Truncate",
                    "Linear (slope and intercept)",
                    "Linear (between 95% clipped histogram)",
                    "Linear (peak clipped histogram)",
                    "Logarithmic"
                ]
            },
            "targetNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            }
        }
    },
    "RiOp": {
        "alias": "RiOp",
        "description": "The Redness Index was developed to identify soil colour variations.",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.RiOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "greenFactor": {
                "description": "The value of the green source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the RI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "greenSourceBand": {
                "description": "The green band for the RI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "CP-Decomposition": {
        "alias": "CP-Decomposition",
        "description": "Perform Compact Polarimetric decomposition of a given product",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.polarimetric.gpf.CompactPolDecompositionOp",
        "version": null,
        "params": {
            "decomposition": {
                "description": null,
                "default_values": "M-Chi Decomposition",
                "values_set": [
                    "M-Chi Decomposition",
                    "M-Delta Decomposition",
                    "H-Alpha Decomposition",
                    "2 Layer RVOG Model Based Decomposition",
                    "Model-free 3-component decomposition"
                ]
            },
            "windowSizeXStr": {
                "description": null,
                "default_values": "5",
                "values_set": [
                    "3",
                    "5",
                    "7",
                    "9",
                    "11",
                    "13",
                    "15",
                    "17",
                    "19"
                ]
            },
            "windowSizeYStr": {
                "description": null,
                "default_values": "5",
                "values_set": [
                    "3",
                    "5",
                    "7",
                    "9",
                    "11",
                    "13",
                    "15",
                    "17",
                    "19"
                ]
            },
            "computeAlphaByT3": {
                "description": "Compute alpha by coherency matrix T3",
                "default_values": "true",
                "values_set": []
            },
            "outputRVOG": {
                "description": "Output RVOG parameters mv, ms, alphaS and phi",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "Meris.GaseousCorrection": {
        "alias": "Meris.GaseousCorrection",
        "description": "MERIS L2 gaseous absorbtion correction.",
        "authors": "Marco Z\u00fchlke",
        "name": "org.esa.s3tbx.meris.brr.GaseousCorrectionOp",
        "version": "2.3.4",
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            },
            "correctWater": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "exportTg": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "LinearToFromdB": {
        "alias": "LinearToFromdB",
        "description": "Converts bands to/from dB",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.raster.gpf.LinearTodBOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "c2rcc.meris": {
        "alias": "c2rcc.meris",
        "description": "Performs atmospheric correction and IOP retrieval with uncertainties on MERIS L1b data products.",
        "authors": "Roland Doerffer, Sabine Embacher, Norman Fomferra (Brockmann Consult)",
        "name": "org.esa.s3tbx.c2rcc.meris.C2rccMerisOperator",
        "version": "1.0",
        "params": {
            "validPixelExpression": {
                "description": "Defines the pixels which are valid for processing.",
                "default_values": "!l1_flags.INVALID && !l1_flags.LAND_OCEAN",
                "values_set": []
            },
            "salinity": {
                "description": "The value used as salinity for the scene.",
                "default_values": "35.0",
                "values_set": []
            },
            "temperature": {
                "description": "The value used as temperature for the scene.",
                "default_values": "15.0",
                "values_set": []
            },
            "ozone": {
                "description": "The value used as ozone if not provided by auxiliary data.",
                "default_values": "330",
                "values_set": []
            },
            "press": {
                "description": "The surface air pressure at sea level if not provided by auxiliary data.",
                "default_values": "1000",
                "values_set": []
            },
            "TSMfakBpart": {
                "description": "TSM factor (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "1.72",
                "values_set": []
            },
            "TSMfakBwit": {
                "description": "TSM exponent (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "3.1",
                "values_set": []
            },
            "CHLexp": {
                "description": "Chlorophyll exponent ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "1.04",
                "values_set": []
            },
            "CHLfak": {
                "description": "Chlorophyll factor ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "21.0",
                "values_set": []
            },
            "thresholdRtosaOOS": {
                "description": "Threshold for out of scope of nn training dataset flag for gas corrected top-of-atmosphere reflectances.",
                "default_values": "0.003",
                "values_set": []
            },
            "thresholdAcReflecOos": {
                "description": "Threshold for out of scope of nn training dataset flag for atmospherically corrected reflectances.",
                "default_values": "0.1",
                "values_set": []
            },
            "thresholdCloudTDown865": {
                "description": "Threshold for cloud test based on downwelling transmittance @865.",
                "default_values": "0.955",
                "values_set": []
            },
            "atmosphericAuxDataPath": {
                "description": "Path to the atmospheric auxiliary data directory. Use either this or the specified products on the I/O Parameters tab. If the auxiliary data is not available at this path, the data will automatically be downloaded.",
                "default_values": null,
                "values_set": []
            },
            "alternativeNNPath": {
                "description": "Path to an alternative set of neuronal nets. Use this to replace the standard set of neuronal nets.",
                "default_values": null,
                "values_set": []
            },
            "netSet": {
                "description": "Set of neuronal nets for algorithm.",
                "default_values": "C2RCC-Nets",
                "values_set": [
                    "C2RCC-Nets",
                    "C2X-Nets"
                ]
            },
            "outputAsRrs": {
                "description": "Write remote sensing reflectances instead of water leaving reflectances.",
                "default_values": "false",
                "values_set": []
            },
            "deriveRwFromPathAndTransmittance": {
                "description": "Alternative way of calculating water reflectance. Still experimental.",
                "default_values": "false",
                "values_set": []
            },
            "useDefaultSolarFlux": {
                "description": "If 'false', use solar flux from source product",
                "default_values": "false",
                "values_set": []
            },
            "useEcmwfAuxData": {
                "description": "If selected, the ECMWF auxiliary data (ozon, air pressure) of the source product is used",
                "default_values": "true",
                "values_set": []
            },
            "outputRtoa": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRtosaGc": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRtosaGcAann": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRpath": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTdown": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTup": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputAcReflectance": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRhown": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputOos": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputKd": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputUncertainties": {
                "description": null,
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "KDTree-KNN-Classifier": {
        "alias": "KDTree-KNN-Classifier",
        "description": "KDTree KNN classifier",
        "authors": "Cecilia Wong, Luis Veci",
        "name": "org.esa.snap.classification.gpf.kdtknn.KDTreeKNNClassifierOp",
        "version": null,
        "params": {
            "numNeighbours": {
                "description": "The number of neighbours",
                "default_values": "5",
                "values_set": []
            },
            "numTrainSamples": {
                "description": "The number of training samples",
                "default_values": "5000",
                "values_set": []
            },
            "savedClassifierName": {
                "description": "The saved classifier name",
                "default_values": null,
                "values_set": []
            },
            "doLoadClassifier": {
                "description": "Choose to save or load classifier",
                "default_values": "false",
                "values_set": []
            },
            "doClassValQuantization": {
                "description": "Quantization for raster traiing",
                "default_values": "true",
                "values_set": []
            },
            "minClassValue": {
                "description": "Quantization min class value for raster traiing",
                "default_values": "0.0",
                "values_set": []
            },
            "classValStepSize": {
                "description": "Quantization step size for raster traiing",
                "default_values": "5.0",
                "values_set": []
            },
            "classLevels": {
                "description": "Quantization class levels for raster traiing",
                "default_values": "101",
                "values_set": []
            },
            "trainOnRaster": {
                "description": "Train on raster or vector data",
                "default_values": "true",
                "values_set": []
            },
            "trainingBands": {
                "description": "Raster bands to train on",
                "default_values": null,
                "values_set": []
            },
            "trainingVectors": {
                "description": "Vectors to train on",
                "default_values": null,
                "values_set": []
            },
            "featureBands": {
                "description": "Names of bands to be used as features",
                "default_values": null,
                "values_set": []
            },
            "labelSource": {
                "description": "'VectorNodeName' or specific Attribute name",
                "default_values": null,
                "values_set": []
            },
            "evaluateClassifier": {
                "description": "Evaluate classifier and features",
                "default_values": null,
                "values_set": []
            },
            "evaluateFeaturePowerSet": {
                "description": "Evaluate the power set of features",
                "default_values": "false",
                "values_set": []
            },
            "minPowerSetSize": {
                "description": "Minimum size of the power set of features",
                "default_values": "2",
                "values_set": []
            },
            "maxPowerSetSize": {
                "description": "Maximum size of the power set of features",
                "default_values": "7",
                "values_set": []
            }
        }
    },
    "Supervised-Wishart-Classification": {
        "alias": "Supervised-Wishart-Classification",
        "description": "Perform supervised Wishart classification",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.classification.gpf.SupervisedWishartClassificationOp",
        "version": "1.0",
        "params": {
            "trainingDataSet": {
                "description": "The training data set file",
                "default_values": null,
                "values_set": []
            },
            "windowSize": {
                "description": "The sliding window size",
                "default_values": "5",
                "values_set": []
            }
        }
    },
    "S2tbx-Reproject": {
        "alias": "S2tbx-Reproject",
        "description": "Reprojection of a source product to a target Coordinate Reference System.",
        "authors": "Marco Z\u00fchlke, Marco Peters, Ralf Quast, Norman Fomferra, Razvan Dumitrascu",
        "name": "org.esa.s2tbx.dataio.mosaic.reproject.S2tbxReprojectionOp",
        "version": "1.0",
        "params": {
            "wktFile": {
                "description": "A file which contains the target Coordinate Reference System in WKT format.",
                "default_values": null,
                "values_set": []
            },
            "crs": {
                "description": "A text specifying the target Coordinate Reference System, either in WKT or as an authority code. For appropriate EPSG authority codes see (www.epsg-registry.org). AUTO authority can be used with code 42001 (UTM), and 42002 (Transverse Mercator) where the scene center is used as reference. Examples: EPSG:4326, AUTO:42001",
                "default_values": null,
                "values_set": []
            },
            "resamplingName": {
                "description": "The method used for resampling of floating-point raster data.",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "referencePixelX": {
                "description": "The X-position of the reference pixel.",
                "default_values": null,
                "values_set": []
            },
            "referencePixelY": {
                "description": "The Y-position of the reference pixel.",
                "default_values": null,
                "values_set": []
            },
            "easting": {
                "description": "The easting of the reference pixel.",
                "default_values": null,
                "values_set": []
            },
            "northing": {
                "description": "The northing of the reference pixel.",
                "default_values": null,
                "values_set": []
            },
            "orientation": {
                "description": "The orientation of the output product (in degree).",
                "default_values": "0",
                "values_set": []
            },
            "pixelSizeX": {
                "description": "The pixel size in X direction given in CRS units.",
                "default_values": null,
                "values_set": []
            },
            "pixelSizeY": {
                "description": "The pixel size in Y direction given in CRS units.",
                "default_values": null,
                "values_set": []
            },
            "width": {
                "description": "The width of the target product.",
                "default_values": null,
                "values_set": []
            },
            "height": {
                "description": "The height of the target product.",
                "default_values": null,
                "values_set": []
            },
            "tileSizeX": {
                "description": "The tile size in X direction.",
                "default_values": null,
                "values_set": []
            },
            "tileSizeY": {
                "description": "The tile size in Y direction.",
                "default_values": null,
                "values_set": []
            },
            "orthorectify": {
                "description": "Whether the source product should be orthorectified. (Not applicable to all products)",
                "default_values": "false",
                "values_set": []
            },
            "elevationModelName": {
                "description": "The name of the elevation model for the orthorectification. If not given tie-point data is used.",
                "default_values": null,
                "values_set": []
            },
            "noDataValue": {
                "description": "The value used to indicate no-data.",
                "default_values": null,
                "values_set": []
            },
            "includeTiePointGrids": {
                "description": "Whether tie-point grids should be included in the output product.",
                "default_values": "true",
                "values_set": []
            },
            "addDeltaBands": {
                "description": "Whether to add delta longitude and latitude bands.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Back-Geocoding": {
        "alias": "Back-Geocoding",
        "description": "Bursts co-registration using orbit and DEM",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sentinel1.gpf.BackGeocodingOp",
        "version": "1.0",
        "params": {
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "demResamplingMethod": {
                "description": null,
                "default_values": "BICUBIC_INTERPOLATION",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "resamplingType": {
                "description": "The method to be used when resampling the slave grid onto the master grid.",
                "default_values": "BISINC_5_POINT_INTERPOLATION",
                "values_set": []
            },
            "maskOutAreaWithoutElevation": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRangeAzimuthOffset": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputDerampDemodPhase": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "disableReramp": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Merge": {
        "alias": "Merge",
        "description": "Allows merging of several source products by using specified 'master' as reference product.",
        "authors": "SNAP Team",
        "name": "org.esa.snap.core.gpf.common.MergeOp",
        "version": "1.3",
        "params": {
            "includes": {
                "description": "Defines nodes to be included in the master product. If no includes are provided, all nodes are copied.",
                "default_values": null,
                "values_set": []
            },
            "excludes": {
                "description": "Defines nodes to be excluded from the target product. Excludes have precedence above includes.",
                "default_values": null,
                "values_set": []
            },
            "geographicError": {
                "description": "Defines the maximum lat/lon error in degree between the products. If set to NaN no check for compatible geographic boundary is performed",
                "default_values": "1.0E-5f",
                "values_set": []
            }
        }
    },
    "Double-Difference-Interferogram": {
        "alias": "Double-Difference-Interferogram",
        "description": "Compute double difference interferogram",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sentinel1.gpf.DoubleDifferenceInterferogramOp",
        "version": "1.0",
        "params": {
            "outputCoherence": {
                "description": "Output coherence for overlapped area",
                "default_values": "false",
                "values_set": []
            },
            "cohWinSize": {
                "description": null,
                "default_values": "5",
                "values_set": [
                    "3",
                    "5",
                    "9",
                    "11"
                ]
            }
        }
    },
    "Meris.Mod08Aerosol": {
        "alias": "Meris.Mod08Aerosol",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.aerosol.ModisAerosolOp",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            },
            "auxdataDir": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "ForestCoverChangeOp": {
        "alias": "ForestCoverChangeOp",
        "description": "Creates forest change masks out of two source products",
        "authors": "Jean Coravu, Razvan Dumitrascu",
        "name": "org.esa.s2tbx.fcc.ForestCoverChangeOp",
        "version": "1.0",
        "params": {
            "forestCoverPercentage": {
                "description": "Specifies the percentage of forest cover per segment",
                "default_values": "95.0",
                "values_set": []
            },
            "landCoverName": {
                "description": null,
                "default_values": "CCILandCover-2015",
                "values_set": []
            },
            "landCoverMapIndices": {
                "description": "The indices of forest color from the new added land cover map",
                "default_values": "40, 50, 60, 61, 62, 70, 71, 72, 80, 81, 82, 90, 100, 110, 160, 170",
                "values_set": []
            },
            "mergingCostCriterion": {
                "description": "The method to compute the region merging.",
                "default_values": "Spring",
                "values_set": [
                    "Spring",
                    "Baatz & Schape",
                    "Full Lamda Schedule"
                ]
            },
            "regionMergingCriterion": {
                "description": "The method to check the region merging.",
                "default_values": "Local Mutual Best Fitting",
                "values_set": [
                    "Best Fitting",
                    "Local Mutual Best Fitting"
                ]
            },
            "totalIterationsForSecondSegmentation": {
                "description": "The total number of iterations.",
                "default_values": "10",
                "values_set": []
            },
            "threshold": {
                "description": "The threshold.",
                "default_values": "5.0",
                "values_set": []
            },
            "spectralWeight": {
                "description": "The spectral weight.",
                "default_values": "0.5",
                "values_set": []
            },
            "shapeWeight": {
                "description": "The shape weight.",
                "default_values": "0.5",
                "values_set": []
            },
            "degreesOfFreedom": {
                "description": "Degrees of freedom used for the Chi distribution trimming process",
                "default_values": "3.3",
                "values_set": []
            },
            "currentProductSourceMaskFile": {
                "description": "A binary raster file to be added as mask to the output product",
                "default_values": null,
                "values_set": []
            },
            "previousProductSourceMaskFile": {
                "description": "A binary raster file to be added as mask to the output product",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "TemporalPercentile": {
        "alias": "TemporalPercentile",
        "description": "Computes percentiles over a given time period.",
        "authors": "Sabine Embacher, Marco Peters, Tonio Fincke",
        "name": "org.esa.snap.statistics.percentile.interpolated.TemporalPercentileOp",
        "version": "1.0",
        "params": {
            "sourceProductPaths": {
                "description": "A comma-separated list of file paths specifying the source products.\nSource products to be considered for percentile computation. \nEach path may contain the wildcards '**' (matches recursively any directory),\n'*' (matches any character sequence in path names) and\n'?' (matches any single character).\nIf, for example, all NetCDF files under /eodata/ shall be considered, use '/eodata/**/*.nc'.",
                "default_values": null,
                "values_set": []
            },
            "startDate": {
                "description": "The start date. If not given, it is taken from the 'oldest' source product. Products that\nhave a start date earlier than the start date given by this parameter are not considered.",
                "default_values": null,
                "values_set": []
            },
            "endDate": {
                "description": "The end date. If not given, it is taken from the 'newest' source product. Products that\nhave an end date later than the end date given by this parameter are not considered.",
                "default_values": null,
                "values_set": []
            },
            "keepIntermediateTimeSeriesProduct": {
                "description": "Determines whether the time series product which is created during computation\nshould be written to disk.",
                "default_values": "true",
                "values_set": []
            },
            "timeSeriesOutputDir": {
                "description": "The output directory for the intermediate time series product. If not given, the time\nseries product will be written to the working directory.",
                "default_values": null,
                "values_set": []
            },
            "crs": {
                "description": "A text specifying the target Coordinate Reference System, either in WKT or as an\nauthority code. For appropriate EPSG authority codes see (www.epsg-registry.org).\nAUTO authority can be used with code 42001 (UTM), and 42002 (Transverse Mercator)\nwhere the scene center is used as reference. Examples: EPSG:4326, AUTO:42001",
                "default_values": "EPSG:4326",
                "values_set": []
            },
            "resamplingMethodName": {
                "description": "The method used for resampling of floating-point raster data, if source products must\nbe reprojected to the target CRS.",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "westBound": {
                "description": "The most-western longitude. All values west of this longitude will not be considered.",
                "default_values": "-15.0",
                "values_set": []
            },
            "northBound": {
                "description": "The most-northern latitude. All values north of this latitude will not be considered.",
                "default_values": "75.0",
                "values_set": []
            },
            "eastBound": {
                "description": "The most-eastern longitude. All values east of this longitude will not be considered.",
                "default_values": "30.0",
                "values_set": []
            },
            "southBound": {
                "description": "The most-southern latitude. All values south of this latitude will not be considered.",
                "default_values": "35.0",
                "values_set": []
            },
            "pixelSizeX": {
                "description": "Size of a pixel in X-direction in map units.",
                "default_values": "0.05",
                "values_set": []
            },
            "pixelSizeY": {
                "description": "Size of a pixel in Y-direction in map units.",
                "default_values": "0.05",
                "values_set": []
            },
            "sourceBandName": {
                "description": "The name of the band in the source products. Either this or 'bandMathsExpression' must be provided.",
                "default_values": null,
                "values_set": []
            },
            "bandMathsExpression": {
                "description": "A band maths expression serving as input band. Either this or 'sourceBandName' must be provided.",
                "default_values": null,
                "values_set": []
            },
            "percentileBandNamePrefix": {
                "description": "If given, this is the percentile band name prefix. If empty, the resulting percentile band\u2019s name\nprefix will be either the 'sourceBandName' or created from the 'bandMathsExpression'.",
                "default_values": null,
                "values_set": []
            },
            "validPixelExpression": {
                "description": "The valid pixel expression serving as criterion for whether to consider pixels for computation.",
                "default_values": "true",
                "values_set": []
            },
            "percentiles": {
                "description": "The percentiles.",
                "default_values": "90",
                "values_set": []
            },
            "gapFillingMethod": {
                "description": "The gap filling method for percentile calculation.",
                "default_values": "gapFillingLinearInterpolation",
                "values_set": [
                    "noGapFilling",
                    "gapFillingLinearInterpolation",
                    "gapFillingSplineInterpolation",
                    "gapFillingQuadraticInterpolation"
                ]
            },
            "startValueFallback": {
                "description": "The fallback value for the start of a pixel time series. It will be considered if\nthere is no valid value at the pixel of the oldest collocated mean band. This would be\nthe case, if, e.g., there is a cloudy day at the time period start.",
                "default_values": "0.0",
                "values_set": []
            },
            "endValueFallback": {
                "description": "The fallback value for the end of a pixel time series. It will be considered ifthere is no valid value at the pixel of the newest collocated mean band. This would be\nthe case, if, e.g., there is a cloudy day at the time period end.",
                "default_values": "0.0",
                "values_set": []
            }
        }
    },
    "Speckle-Divergence": {
        "alias": "Speckle-Divergence",
        "description": "Detect urban area.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.urban.SpeckleDivergenceOp",
        "version": "1.0",
        "params": {
            "sourceBands": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "windowSizeStr": {
                "description": null,
                "default_values": "15x15",
                "values_set": [
                    "3x3",
                    "5x5",
                    "7x7",
                    "9x9",
                    "11x11",
                    "13x13",
                    "15x15",
                    "17x17"
                ]
            }
        }
    },
    "BiophysicalOp": {
        "alias": "BiophysicalOp",
        "description": "The 'Biophysical Processor' operator retrieves LAI from atmospherically corrected Sentinel-2 products",
        "authors": "Julien Malik",
        "name": "org.esa.s2tbx.biophysical.BiophysicalOp",
        "version": "1.0",
        "params": {
            "sensor": {
                "description": "Sensor",
                "default_values": "S2A",
                "values_set": [
                    "S2A",
                    "S2B"
                ]
            },
            "computeLAI": {
                "description": "Compute LAI (Leaf Area Index)",
                "default_values": "true",
                "values_set": []
            },
            "computeFapar": {
                "description": "Compute FAPAR (Fraction of Absorbed Photosynthetically Active Radiation)",
                "default_values": "true",
                "values_set": []
            },
            "computeFcover": {
                "description": "Compute FVC (Fraction of Vegetation Cover)",
                "default_values": "true",
                "values_set": []
            },
            "computeCab": {
                "description": "Compute Cab (Chlorophyll content in the leaf)",
                "default_values": "true",
                "values_set": []
            },
            "computeCw": {
                "description": "Compute Cw (Canopy Water Content)",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "Polarimetric-Speckle-Filter": {
        "alias": "Polarimetric-Speckle-Filter",
        "description": "Polarimetric Speckle Reduction",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.polarimetric.gpf.PolarimetricSpeckleFilterOp",
        "version": "1.0",
        "params": {
            "filter": {
                "description": null,
                "default_values": "Refined Lee Filter",
                "values_set": [
                    "Box Car Filter",
                    "IDAN Filter",
                    "Refined Lee Filter",
                    "Improved Lee Sigma Filter"
                ]
            },
            "filterSize": {
                "description": "The filter size",
                "default_values": "5",
                "values_set": []
            },
            "numLooksStr": {
                "description": null,
                "default_values": "1",
                "values_set": [
                    "1",
                    "2",
                    "3",
                    "4"
                ]
            },
            "windowSize": {
                "description": null,
                "default_values": "7x7",
                "values_set": [
                    "5x5",
                    "7x7",
                    "9x9",
                    "11x11",
                    "13x13",
                    "15x15",
                    "17x17"
                ]
            },
            "targetWindowSizeStr": {
                "description": null,
                "default_values": "3x3",
                "values_set": [
                    "3x3",
                    "5x5"
                ]
            },
            "anSize": {
                "description": "The Adaptive Neighbourhood size",
                "default_values": "50",
                "values_set": []
            },
            "sigmaStr": {
                "description": null,
                "default_values": "0.9",
                "values_set": [
                    "0.5",
                    "0.6",
                    "0.7",
                    "0.8",
                    "0.9"
                ]
            },
            "searchWindowSizeStr": {
                "description": "The search window size",
                "default_values": "15",
                "values_set": [
                    "3",
                    "5",
                    "7",
                    "9",
                    "11",
                    "13",
                    "15",
                    "17",
                    "19",
                    "21",
                    "23",
                    "25"
                ]
            },
            "patchSizeStr": {
                "description": "The patch size",
                "default_values": "5",
                "values_set": [
                    "3",
                    "5",
                    "7",
                    "9",
                    "11"
                ]
            },
            "scaleSizeStr": {
                "description": "The scale size",
                "default_values": "1",
                "values_set": [
                    "0",
                    "1",
                    "2"
                ]
            }
        }
    },
    "SubGraph": {
        "alias": "SubGraph",
        "description": "Encapsulates a graph within a graph.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.SubGraphOp",
        "version": "1.0",
        "params": {
            "graphFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "c2rcc.landsat7": {
        "alias": "c2rcc.landsat7",
        "description": "Performs atmospheric correction and IOP retrieval with uncertainties on Landsat-7 L1 data products.",
        "authors": "Roland Doerffer, Marco Peters (Brockmann Consult)",
        "name": "org.esa.s3tbx.c2rcc.landsat.C2rccLandsat7Operator",
        "version": "1.1",
        "params": {
            "validPixelExpression": {
                "description": "Defines the pixels which are valid for processing.",
                "default_values": null,
                "values_set": []
            },
            "salinity": {
                "description": "The value used as salinity for the scene.",
                "default_values": "35.0",
                "values_set": []
            },
            "temperature": {
                "description": "The value used as temperature for the scene.",
                "default_values": "15.0",
                "values_set": []
            },
            "ozone": {
                "description": "The value used as ozone if not provided by auxiliary data.",
                "default_values": "330",
                "values_set": []
            },
            "press": {
                "description": "The surface air pressure at sea level if not provided by auxiliary data.",
                "default_values": "1000",
                "values_set": []
            },
            "elevation": {
                "description": "Used as fallback if elevation could not be taken from GETASSE30 DEM.",
                "default_values": "0",
                "values_set": []
            },
            "TSMfakBpart": {
                "description": "TSM factor (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "1.72",
                "values_set": []
            },
            "TSMfakBwit": {
                "description": "TSM exponent (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "3.1",
                "values_set": []
            },
            "CHLexp": {
                "description": "Chlorophyll exponent ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "1.04",
                "values_set": []
            },
            "CHLfak": {
                "description": "Chlorophyll factor ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "21.0",
                "values_set": []
            },
            "thresholdRtosaOOS": {
                "description": "Threshold for out of scope of nn training dataset flag for gas corrected top-of-atmosphere reflectances.",
                "default_values": "0.05",
                "values_set": []
            },
            "thresholdAcReflecOos": {
                "description": "Threshold for out of scope of nn training dataset flag for atmospherically corrected reflectances.",
                "default_values": "0.1",
                "values_set": []
            },
            "thresholdCloudTDown835": {
                "description": "Threshold for cloud test based on downwelling transmittance @835.",
                "default_values": "0.955",
                "values_set": []
            },
            "atmosphericAuxDataPath": {
                "description": "Path to the atmospheric auxiliary data directory. Use either this or the specified products on the I/O Parameters tab. If the auxiliary data is not available at this path, the data will automatically be downloaded.",
                "default_values": null,
                "values_set": []
            },
            "alternativeNNPath": {
                "description": "Path to an alternative set of neuronal nets. Use this to replace the standard set of neuronal nets.",
                "default_values": null,
                "values_set": []
            },
            "outputAsRrs": {
                "description": "Write remote sensing reflectances instead of water leaving reflectances.",
                "default_values": "false",
                "values_set": []
            },
            "deriveRwFromPathAndTransmittance": {
                "description": "Alternative way of calculating water reflectance. Still experimental.",
                "default_values": "false",
                "values_set": []
            },
            "outputRtoa": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRtosaGc": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRtosaGcAann": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRpath": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTdown": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTup": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputAcReflectance": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRhown": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputOos": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputKd": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputUncertainties": {
                "description": null,
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "Three-passDInSAR": {
        "alias": "Three-passDInSAR",
        "description": "Differential Interferometry",
        "authors": "Petar Marinkovic",
        "name": "org.jlinda.nest.gpf.DInSAROp",
        "version": "1.0",
        "params": {
            "orbitDegree": {
                "description": "Degree of orbit interpolation polynomial",
                "default_values": "3",
                "values_set": []
            }
        }
    },
    "WriteRGB": {
        "alias": "WriteRGB",
        "description": "Creates an RGB image from three source bands.",
        "authors": null,
        "name": "org.esa.snap.core.gpf.common.WriteRGBOp",
        "version": null,
        "params": {
            "red": {
                "description": "The zero-based index of the red band.",
                "default_values": null,
                "values_set": []
            },
            "green": {
                "description": "The zero-based index of the green band.",
                "default_values": null,
                "values_set": []
            },
            "blue": {
                "description": "The zero-based index of the blue band.",
                "default_values": null,
                "values_set": []
            },
            "formatName": {
                "description": null,
                "default_values": "png",
                "values_set": []
            },
            "file": {
                "description": "The file to which the image is written.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Terrain-Flattening": {
        "alias": "Terrain-Flattening",
        "description": "Terrain Flattening",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.geometric.TerrainFlatteningOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 1Sec HGT",
                "values_set": []
            },
            "demResamplingMethod": {
                "description": null,
                "default_values": "BILINEAR_INTERPOLATION",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "externalDEMApplyEGM": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputSimulatedImage": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputSigma0": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "additionalOverlap": {
                "description": "The additional overlap percentage",
                "default_values": "0.1",
                "values_set": []
            },
            "oversamplingMultiple": {
                "description": "The oversampling factor",
                "default_values": "1.0",
                "values_set": []
            }
        }
    },
    "NdwiOp": {
        "alias": "NdwiOp",
        "description": "The Normalized Difference Water Index was developed for the extraction of water features",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.NdwiOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "mirFactor": {
                "description": "The value of the MIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "mirSourceBand": {
                "description": "The mid-infrared band for the NDWI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the NDWI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Multi-size Mosaic": {
        "alias": "Multi-size Mosaic",
        "description": "Creates a multi-size mosaic out of a set of source products.",
        "authors": "Razvan Dumitrascu",
        "name": "org.esa.s2tbx.dataio.mosaic.S2tbxMosaicOp",
        "version": "1.0",
        "params": {
            "variables": {
                "description": "Specifies the bands in the target product.",
                "default_values": null,
                "values_set": []
            },
            "conditions": {
                "description": "Specifies valid pixels considered in the target product.",
                "default_values": null,
                "values_set": []
            },
            "combine": {
                "description": "Specifies the way how conditions are combined.",
                "default_values": "OR",
                "values_set": [
                    "OR",
                    "AND"
                ]
            },
            "crs": {
                "description": "The CRS of the target product, represented as WKT or authority code.",
                "default_values": "EPSG:4326",
                "values_set": []
            },
            "orthorectify": {
                "description": "Whether the source product should be orthorectified.",
                "default_values": "false",
                "values_set": []
            },
            "elevationModelName": {
                "description": "The name of the elevation model for the orthorectification.",
                "default_values": null,
                "values_set": []
            },
            "westBound": {
                "description": "The western longitude.",
                "default_values": "-15.0",
                "values_set": []
            },
            "northBound": {
                "description": "The northern latitude.",
                "default_values": "75.0",
                "values_set": []
            },
            "eastBound": {
                "description": "The eastern longitude.",
                "default_values": "30.0",
                "values_set": []
            },
            "southBound": {
                "description": "The southern latitude.",
                "default_values": "35.0",
                "values_set": []
            },
            "pixelSizeX": {
                "description": "Size of a pixel in X-direction in map units.",
                "default_values": "0.005",
                "values_set": []
            },
            "pixelSizeY": {
                "description": "Size of a pixel in Y-direction in map units.",
                "default_values": "0.005",
                "values_set": []
            },
            "resamplingName": {
                "description": "The method used for resampling.",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "nativeResolution": {
                "description": "Whether the resulting mosaic product should use the native resolutions of the source products.",
                "default_values": "true",
                "values_set": []
            },
            "overlappingMethod": {
                "description": "The method used for overlapping pixels.",
                "default_values": "MOSAIC_TYPE_OVERLAY",
                "values_set": [
                    "MOSAIC_TYPE_BLEND",
                    "MOSAIC_TYPE_OVERLAY"
                ]
            }
        }
    },
    "SAR-Mosaic": {
        "alias": "SAR-Mosaic",
        "description": "Mosaics two or more products based on their geo-codings.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.geometric.MosaicOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "resamplingMethod": {
                "description": "The method to be used when resampling the slave grid onto the master grid.",
                "default_values": "NEAREST_NEIGHBOUR",
                "values_set": [
                    "NEAREST_NEIGHBOUR",
                    "BILINEAR_INTERPOLATION",
                    "CUBIC_CONVOLUTION"
                ]
            },
            "average": {
                "description": "Average the overlapping areas",
                "default_values": "true",
                "values_set": []
            },
            "normalizeByMean": {
                "description": "Normalize by Mean",
                "default_values": "true",
                "values_set": []
            },
            "gradientDomainMosaic": {
                "description": "Gradient Domain Mosaic",
                "default_values": "false",
                "values_set": []
            },
            "pixelSize": {
                "description": "Pixel Size (m)",
                "default_values": "0",
                "values_set": []
            },
            "sceneWidth": {
                "description": "Target width",
                "default_values": "0",
                "values_set": []
            },
            "sceneHeight": {
                "description": "Target height",
                "default_values": "0",
                "values_set": []
            },
            "feather": {
                "description": "Feather amount around source image",
                "default_values": "0",
                "values_set": []
            },
            "maxIterations": {
                "description": "Maximum number of iterations",
                "default_values": "5000",
                "values_set": []
            },
            "convergenceThreshold": {
                "description": "Convergence threshold for Relaxed Gauss-Seidel method",
                "default_values": "1e-4",
                "values_set": []
            }
        }
    },
    "Coherence": {
        "alias": "Coherence",
        "description": "Estimate coherence from stack of coregistered images",
        "authors": "Petar Marinkovic, Jun Lu",
        "name": "org.esa.s1tbx.insar.gpf.CoherenceOp",
        "version": "1.0",
        "params": {
            "cohWinAz": {
                "description": "Size of coherence estimation window in Azimuth direction",
                "default_values": "10",
                "values_set": []
            },
            "cohWinRg": {
                "description": "Size of coherence estimation window in Range direction",
                "default_values": "10",
                "values_set": []
            },
            "subtractFlatEarthPhase": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "srpPolynomialDegree": {
                "description": "Order of 'Flat earth phase' polynomial",
                "default_values": "5",
                "values_set": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8"
                ]
            },
            "srpNumberPoints": {
                "description": "Number of points for the 'flat earth phase' polynomial estimation",
                "default_values": "501",
                "values_set": [
                    "301",
                    "401",
                    "501",
                    "601",
                    "701",
                    "801",
                    "901",
                    "1001"
                ]
            },
            "orbitDegree": {
                "description": "Degree of orbit (polynomial) interpolator",
                "default_values": "3",
                "values_set": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                ]
            },
            "squarePixel": {
                "description": "Use ground square pixel",
                "default_values": "true",
                "values_set": []
            },
            "subtractTopographicPhase": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "externalDEMApplyEGM": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "tileExtensionPercent": {
                "description": "Define extension of tile for DEM simulation (optimization parameter).",
                "default_values": "100",
                "values_set": []
            },
            "singleMaster": {
                "description": null,
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "MsaviOp": {
        "alias": "MsaviOp",
        "description": "This retrieves the Modified Soil Adjusted Vegetation Index (MSAVI).",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.MsaviOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the RED source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "slope": {
                "description": "The soil line slope.",
                "default_values": "0.5F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the MSAVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the MSAVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "AddLandCover": {
        "alias": "AddLandCover",
        "description": "Creates a land cover band",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.landcover.gpf.AddLandCoverOp",
        "version": "1.0",
        "params": {
            "landCoverNames": {
                "description": "The land cover model.",
                "default_values": "AAFC Canada Sand Pct",
                "values_set": []
            },
            "externalFiles": {
                "description": "The external landcover files.",
                "default_values": null,
                "values_set": []
            },
            "resamplingMethod": {
                "description": null,
                "default_values": "NEAREST_NEIGHBOUR",
                "values_set": []
            }
        }
    },
    "SmileCorrection.Olci": {
        "alias": "SmileCorrection.Olci",
        "description": "Performs radiometric corrections on OLCI L1b data products.",
        "authors": " Marco Peters, Muhammad Bala (Brockmann Consult)",
        "name": "org.esa.s3tbx.olci.radiometry.smilecorr.SmileCorrectionOp",
        "version": "1.2.2",
        "params": {}
    },
    "PhaseToDisplacement": {
        "alias": "PhaseToDisplacement",
        "description": "Phase To Displacement Conversion along LOS",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.insar.gpf.PhaseToDisplacementOp",
        "version": "1.0",
        "params": {}
    },
    "KMeansClusterAnalysis": {
        "alias": "KMeansClusterAnalysis",
        "description": "Performs a K-Means cluster analysis.",
        "authors": "Ralf Quast, Marco Zuehlke",
        "name": "org.esa.snap.cluster.KMeansClusterOp",
        "version": "1.0",
        "params": {
            "clusterCount": {
                "description": "Number of clusters",
                "default_values": "14",
                "values_set": []
            },
            "iterationCount": {
                "description": "Number of iterations",
                "default_values": "30",
                "values_set": []
            },
            "randomSeed": {
                "description": "Seed for the random generator, used for initialising the algorithm.",
                "default_values": "31415",
                "values_set": []
            },
            "sourceBandNames": {
                "description": "The names of the bands being used for the cluster analysis.",
                "default_values": null,
                "values_set": []
            },
            "roiMaskName": {
                "description": "The name of the ROI-Mask that should be used.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "SmacOp": {
        "alias": "SmacOp",
        "description": "Applies the Simplified Method for Atmospheric Corrections of Envisat MERIS/(A)ATSR measurements.",
        "authors": "H. Rahman, G. Dedieu (Algorithm); T. Block, T. Storm (Implementation)",
        "name": "org.esa.s3tbx.smac.SmacOperator",
        "version": "1.5.205",
        "params": {
            "tauAero550": {
                "description": "Aerosol optical depth",
                "default_values": "0.2",
                "values_set": []
            },
            "uH2o": {
                "description": "Relative humidity",
                "default_values": "3.0",
                "values_set": []
            },
            "uO3": {
                "description": "Ozone content",
                "default_values": "0.15",
                "values_set": []
            },
            "surfPress": {
                "description": "Surface pressure",
                "default_values": "1013.0",
                "values_set": []
            },
            "useMerisADS": {
                "description": "Use ECMWF data in the MERIS ADS",
                "default_values": "false",
                "values_set": []
            },
            "aerosolType": {
                "description": "Aerosol type",
                "default_values": "CONTINENTAL",
                "values_set": []
            },
            "invalidPixel": {
                "description": "Default reflectance for invalid pixel",
                "default_values": "0.0",
                "values_set": []
            },
            "maskExpression": {
                "description": "Mask expression for the whole view (MERIS) or the nadir view (AATSR)",
                "default_values": null,
                "values_set": []
            },
            "maskExpressionForward": {
                "description": "Mask expression for the forward view (AATSR only)",
                "default_values": null,
                "values_set": []
            },
            "bandNames": {
                "description": "Bands to process",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "MtciOp": {
        "alias": "MtciOp",
        "description": "The Meris Terrestrial Chlorophyll Index,  aims at estimating the Red Edge Position (REP).\nThis is the maximum slant point in the red and near-infrared region of the vegetal spectral reflectance.\nIt is useful for observing the chlorophyll contents, vegetation senescence, and stress for water and nutritional deficiencies, but it is less suitable for land classification",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.MtciOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redB4Factor": {
                "description": "The value of the red source band (B4) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redB5Factor": {
                "description": "The value of the red source band (B5) is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand4": {
                "description": "The red band (B4) for the MTCI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "redSourceBand5": {
                "description": "The red band (B5) for the MTCI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the MTCI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "MndwiOp": {
        "alias": "MndwiOp",
        "description": "Modified Normalized Difference Water Index, allowing for the measurement of surface water extent",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.MndwiOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "greenFactor": {
                "description": "The value of the green source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "mirFactor": {
                "description": "The value of the MIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "greenSourceBand": {
                "description": "The green band for the MNDWI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "mirSourceBand": {
                "description": "The mid-infrared band for the MNDWI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Ellipsoid-Correction-GG": {
        "alias": "Ellipsoid-Correction-GG",
        "description": "GG method for orthorectification",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.geometric.GeolocationGridGeocodingOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "imgResamplingMethod": {
                "description": null,
                "default_values": "BILINEAR_INTERPOLATION",
                "values_set": [
                    "NEAREST_NEIGHBOUR",
                    "BILINEAR_INTERPOLATION",
                    "CUBIC_CONVOLUTION"
                ]
            },
            "mapProjection": {
                "description": "The coordinate reference system in well known text format",
                "default_values": "WGS84(DD)",
                "values_set": []
            }
        }
    },
    "AdaptiveThresholding": {
        "alias": "AdaptiveThresholding",
        "description": "Detect ships using Constant False Alarm Rate detector.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.oceantools.AdaptiveThresholdingOp",
        "version": "1.0",
        "params": {
            "targetWindowSizeInMeter": {
                "description": "Target window size",
                "default_values": "50",
                "values_set": []
            },
            "guardWindowSizeInMeter": {
                "description": "Guard window size",
                "default_values": "500.0",
                "values_set": []
            },
            "backgroundWindowSizeInMeter": {
                "description": "Background window size",
                "default_values": "800.0",
                "values_set": []
            },
            "pfa": {
                "description": "Probability of false alarm",
                "default_values": "6.5",
                "values_set": []
            },
            "estimateBackground": {
                "description": "Rough estimation of background threshold for quicker processing",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Interferogram": {
        "alias": "Interferogram",
        "description": "Compute interferograms from stack of coregistered S-1 images",
        "authors": "Petar Marinkovic, Jun Lu",
        "name": "org.esa.s1tbx.insar.gpf.InterferogramOp",
        "version": "1.0",
        "params": {
            "subtractFlatEarthPhase": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "srpPolynomialDegree": {
                "description": "Order of 'Flat earth phase' polynomial",
                "default_values": "5",
                "values_set": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8"
                ]
            },
            "srpNumberPoints": {
                "description": "Number of points for the 'flat earth phase' polynomial estimation",
                "default_values": "501",
                "values_set": [
                    "301",
                    "401",
                    "501",
                    "601",
                    "701",
                    "801",
                    "901",
                    "1001"
                ]
            },
            "orbitDegree": {
                "description": "Degree of orbit (polynomial) interpolator",
                "default_values": "3",
                "values_set": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                ]
            },
            "includeCoherence": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "cohWinAz": {
                "description": "Size of coherence estimation window in Azimuth direction",
                "default_values": "10",
                "values_set": []
            },
            "cohWinRg": {
                "description": "Size of coherence estimation window in Range direction",
                "default_values": "10",
                "values_set": []
            },
            "squarePixel": {
                "description": "Use ground square pixel",
                "default_values": "true",
                "values_set": []
            },
            "subtractTopographicPhase": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "externalDEMApplyEGM": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "tileExtensionPercent": {
                "description": "Define extension of tile for DEM simulation (optimization parameter).",
                "default_values": "100",
                "values_set": []
            },
            "outputElevation": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputLatLon": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "GenericRegionMergingOp": {
        "alias": "GenericRegionMergingOp",
        "description": "The 'Generic Region Merging' operator computes the distinct regions from a product",
        "authors": "Jean Coravu",
        "name": "org.esa.s2tbx.grm.GenericRegionMergingOp",
        "version": "1.0",
        "params": {
            "mergingCostCriterion": {
                "description": "The method to compute the region merging.",
                "default_values": "Baatz & Schape",
                "values_set": [
                    "Spring",
                    "Baatz & Schape",
                    "Full Lamda Schedule"
                ]
            },
            "regionMergingCriterion": {
                "description": "The method to check the region merging.",
                "default_values": "Local Mutual Best Fitting",
                "values_set": [
                    "Best Fitting",
                    "Local Mutual Best Fitting"
                ]
            },
            "totalIterationsForSecondSegmentation": {
                "description": "The total number of iterations.",
                "default_values": "50",
                "values_set": []
            },
            "threshold": {
                "description": "The threshold.",
                "default_values": "100.0",
                "values_set": []
            },
            "spectralWeight": {
                "description": "The spectral weight.",
                "default_values": "0.5",
                "values_set": []
            },
            "shapeWeight": {
                "description": "The shape weight.",
                "default_values": "0.5",
                "values_set": []
            },
            "sourceBandNames": {
                "description": "The source bands for the computation.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Maximum-Likelihood-Classifier": {
        "alias": "Maximum-Likelihood-Classifier",
        "description": "Maximum Likelihood classifier",
        "authors": "Cecilia Wong, Luis Veci",
        "name": "org.esa.snap.classification.gpf.maximumlikelihood.MaximumLikelihoodClassifierOp",
        "version": null,
        "params": {
            "numTrainSamples": {
                "description": "The number of training samples",
                "default_values": "5000",
                "values_set": []
            },
            "savedClassifierName": {
                "description": "The saved classifier name",
                "default_values": null,
                "values_set": []
            },
            "doLoadClassifier": {
                "description": "Choose to save or load classifier",
                "default_values": "false",
                "values_set": []
            },
            "doClassValQuantization": {
                "description": "Quantization for raster training",
                "default_values": "true",
                "values_set": []
            },
            "minClassValue": {
                "description": "Quantization min class value for raster training",
                "default_values": "0.0",
                "values_set": []
            },
            "classValStepSize": {
                "description": "Quantization step size for raster training",
                "default_values": "5.0",
                "values_set": []
            },
            "classLevels": {
                "description": "Quantization class levels for raster training",
                "default_values": "101",
                "values_set": []
            },
            "trainOnRaster": {
                "description": "Train on raster or vector data",
                "default_values": "true",
                "values_set": []
            },
            "trainingBands": {
                "description": "Raster bands to train on",
                "default_values": null,
                "values_set": []
            },
            "trainingVectors": {
                "description": "Vectors to train on",
                "default_values": null,
                "values_set": []
            },
            "featureBands": {
                "description": "Names of bands to be used as features",
                "default_values": null,
                "values_set": []
            },
            "labelSource": {
                "description": "'VectorNodeName' or specific Attribute name",
                "default_values": null,
                "values_set": []
            },
            "evaluateClassifier": {
                "description": "Evaluate classifier and features",
                "default_values": null,
                "values_set": []
            },
            "evaluateFeaturePowerSet": {
                "description": "Evaluate the power set of features",
                "default_values": "false",
                "values_set": []
            },
            "minPowerSetSize": {
                "description": "Minimum size of the power set of features",
                "default_values": "2",
                "values_set": []
            },
            "maxPowerSetSize": {
                "description": "Maximum size of the power set of features",
                "default_values": "7",
                "values_set": []
            }
        }
    },
    "OlciO2aHarmonisation": {
        "alias": "OlciO2aHarmonisation",
        "description": "Performs O2A band harmonisation on OLCI L1b product. Implements update v4 of R.Preusker, June 2020.",
        "authors": "R.Preusker, O.Danne, M.Peters",
        "name": "org.esa.s3tbx.olci.harmonisation.OlciO2aHarmonisationOp",
        "version": "1.2",
        "params": {
            "alternativeAltitudeBandName": {
                "description": "Name of alternative altitude band in source product (i.e. introduced from an external DEM). Altitude is expected in meters.",
                "default_values": null,
                "values_set": []
            },
            "processOnlyBand13": {
                "description": "If set to true, only band 13 needed for cloud detection will be processed, otherwise bands 13-15.",
                "default_values": "true",
                "values_set": []
            },
            "writeHarmonisedRadiances": {
                "description": "If set to true, harmonised radiances of processed band(s) will be written to target product.",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "RangeFilter": {
        "alias": "RangeFilter",
        "description": "Range Filter",
        "authors": "Petar Marinkovic",
        "name": "org.jlinda.nest.gpf.RangeFilterOp",
        "version": "1.0",
        "params": {
            "fftLength": {
                "description": "Length of filtering window",
                "default_values": "8",
                "values_set": [
                    "8",
                    "16",
                    "32",
                    "64",
                    "128",
                    "256",
                    "512",
                    "1024"
                ]
            },
            "alphaHamming": {
                "description": "Weight for Hamming filter (1 is rectangular window)",
                "default_values": "0.75",
                "values_set": [
                    "0.5",
                    "0.75",
                    "0.8",
                    "0.9",
                    "1"
                ]
            },
            "nlMean": {
                "description": "Input value for (walking) mean averaging to reduce noise.",
                "default_values": "15",
                "values_set": [
                    "5",
                    "10",
                    "15",
                    "20",
                    "25"
                ]
            },
            "snrThresh": {
                "description": "Threshold on SNR for peak estimation",
                "default_values": "5",
                "values_set": [
                    "3",
                    "4",
                    "5",
                    "6",
                    "7"
                ]
            },
            "ovsmpFactor": {
                "description": "Oversampling factor (in range only).",
                "default_values": "1",
                "values_set": [
                    "1",
                    "2",
                    "4"
                ]
            },
            "doWeightCorrel": {
                "description": "Use weight values to bias higher frequencies",
                "default_values": "off",
                "values_set": [
                    "true",
                    "false"
                ]
            }
        }
    },
    "MultiMasterStackGenerator": {
        "alias": "MultiMasterStackGenerator",
        "description": "Generates a set of master-slave pairs from a coregistered stack for use in SBAS processing",
        "authors": "Alex McVittie",
        "name": "org.esa.s1tbx.insar.gpf.MultiMasterOp",
        "version": "1.0",
        "params": {
            "outputFolder": {
                "description": "Output folder",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Apply-Orbit-File": {
        "alias": "Apply-Orbit-File",
        "description": "Apply orbit file",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.orbits.gpf.ApplyOrbitFileOp",
        "version": "1.0",
        "params": {
            "orbitType": {
                "description": null,
                "default_values": "Sentinel Precise (Auto Download)",
                "values_set": [
                    "Sentinel Precise (Auto Download)",
                    "Sentinel Restituted (Auto Download)",
                    "DORIS Preliminary POR (ENVISAT)",
                    "DORIS Precise VOR (ENVISAT) (Auto Download)",
                    "DELFT Precise (ENVISAT, ERS1&2) (Auto Download)",
                    "PRARE Precise (ERS1&2) (Auto Download)",
                    "Kompsat5 Precise"
                ]
            },
            "polyDegree": {
                "description": null,
                "default_values": "3",
                "values_set": []
            },
            "continueOnFail": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "c2rcc.olci": {
        "alias": "c2rcc.olci",
        "description": "Performs atmospheric correction and IOP retrieval with uncertainties on SENTINEL-3 OLCI L1B data products.",
        "authors": "Roland Doerffer, Sabine Embacher (Brockmann Consult)",
        "name": "org.esa.s3tbx.c2rcc.olci.C2rccOlciOperator",
        "version": "2.1",
        "params": {
            "validPixelExpression": {
                "description": "Defines the pixels which are valid for processing.",
                "default_values": "!quality_flags.invalid && (!quality_flags.land || quality_flags.fresh_inland_water)",
                "values_set": []
            },
            "salinity": {
                "description": "The value used as salinity for the scene.",
                "default_values": "35.0",
                "values_set": []
            },
            "temperature": {
                "description": "The value used as temperature for the scene.",
                "default_values": "15.0",
                "values_set": []
            },
            "ozone": {
                "description": "The value used as ozone if not provided by auxiliary data.",
                "default_values": "330",
                "values_set": []
            },
            "press": {
                "description": "The surface air pressure at sea level if not provided by auxiliary data.",
                "default_values": "1000",
                "values_set": []
            },
            "TSMfakBpart": {
                "description": "TSM factor (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "1.06",
                "values_set": []
            },
            "TSMfakBwit": {
                "description": "TSM exponent (TSM = TSMfac * iop_btot^TSMexp).",
                "default_values": "0.942",
                "values_set": []
            },
            "CHLexp": {
                "description": "Chlorophyll exponent ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "1.04",
                "values_set": []
            },
            "CHLfak": {
                "description": "Chlorophyll factor ( CHL = iop_apig^CHLexp * CHLfac).",
                "default_values": "21.0",
                "values_set": []
            },
            "thresholdRtosaOOS": {
                "description": "Threshold for nn training dataset out of scope flag for gas corrected top-of-atmosphere reflectances.",
                "default_values": "0.01",
                "values_set": []
            },
            "thresholdAcReflecOos": {
                "description": "Threshold for nn training dataset out of scope flag for atmospherically corrected reflectances.",
                "default_values": "0.15",
                "values_set": []
            },
            "thresholdCloudTDown865": {
                "description": "Threshold for cloud test based on downwelling transmittance @865.",
                "default_values": "0.955",
                "values_set": []
            },
            "atmosphericAuxDataPath": {
                "description": "Path to the atmospheric auxiliary data directory. Use either this or the specified products on the I/O Parameters tab. If the auxiliary data is not available at this path, the data will automatically be downloaded.",
                "default_values": null,
                "values_set": []
            },
            "alternativeNNPath": {
                "description": "Path to an alternative set of neuronal nets. Use this to replace the standard set of neuronal nets.",
                "default_values": null,
                "values_set": []
            },
            "outputAsRrs": {
                "description": "Write remote sensing reflectances instead of water leaving reflectances.",
                "default_values": "false",
                "values_set": []
            },
            "deriveRwFromPathAndTransmittance": {
                "description": "Alternative way of calculating water reflectance. Still experimental.",
                "default_values": "false",
                "values_set": []
            },
            "useEcmwfAuxData": {
                "description": "Use ECMWF auxiliary data (total_ozone, sea_level_pressure) from the source product.",
                "default_values": "true",
                "values_set": []
            },
            "outputRtoa": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRtosaGc": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRtosaGcAann": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputRpath": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTdown": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputTup": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputAcReflectance": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputRhown": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputOos": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputKd": {
                "description": null,
                "default_values": "true",
                "values_set": []
            },
            "outputUncertainties": {
                "description": null,
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "Meris.CloudClassification": {
        "alias": "Meris.CloudClassification",
        "description": "MERIS L2 cloud classification.",
        "authors": "Marco Z\u00fchlke",
        "name": "org.esa.s3tbx.meris.brr.CloudClassificationOp",
        "version": "2.3.4",
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            },
            "l2Pressures": {
                "description": "If 'true' the algorithm will compute L2 Pressures.",
                "default_values": "true",
                "values_set": []
            },
            "l2CloudDetection": {
                "description": "If 'true' the algorithm will compute L2 Cloud detection flags.",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "TOPSAR-Merge": {
        "alias": "TOPSAR-Merge",
        "description": "Merge subswaths of a Sentinel-1 TOPSAR product",
        "authors": "Jun Lu, Luis Veci, Reinier Oost, Esteban Aguilera, David A. Monge",
        "name": "org.esa.s1tbx.sentinel1.gpf.TOPSARMergeOp",
        "version": "1.0",
        "params": {
            "selectedPolarisations": {
                "description": "The list of polarisations",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "BandsDifferenceOp": {
        "alias": "BandsDifferenceOp",
        "description": null,
        "authors": "Jean Coravu",
        "name": "org.esa.s2tbx.fcc.common.BandsDifferenceOp",
        "version": "1.0",
        "params": {}
    },
    "ProductSet-Reader": {
        "alias": "ProductSet-Reader",
        "description": "Adds a list of sources",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.core.gpf.common.ProductSetReaderOp",
        "version": "1.0",
        "params": {
            "fileList": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "c2rcc.modis": {
        "alias": "c2rcc.modis",
        "description": "Performs atmospheric correction and IOP retrieval on MODIS L1C_LAC data products.",
        "authors": "Wolfgang Schoenfeld (HZG), Sabine Embacher, Norman Fomferra (Brockmann Consult)",
        "name": "org.esa.s3tbx.c2rcc.modis.C2rccModisOperator",
        "version": "1.0",
        "params": {
            "validPixelExpression": {
                "description": "Defines the pixels which are valid for processing",
                "default_values": "!(l2_flags.LAND ||  max(rhot_412,max(rhot_443,max(rhot_488,max(rhot_531,max(rhot_547,max(rhot_555,max(rhot_667,max(rhot_678,max(rhot_748,rhot_869)))))))))>0.25)",
                "values_set": []
            },
            "salinity": {
                "description": "The value used as salinity for the scene",
                "default_values": "35.0",
                "values_set": []
            },
            "temperature": {
                "description": "The value used as temperature for the scene",
                "default_values": "15.0",
                "values_set": []
            },
            "ozone": {
                "description": "The value used as ozone if not provided by auxiliary data",
                "default_values": "330",
                "values_set": []
            },
            "press": {
                "description": "The surface air pressure at sea level if not provided by auxiliary data",
                "default_values": "1000",
                "values_set": []
            },
            "atmosphericAuxDataPath": {
                "description": "Path to the atmospheric auxiliary data directory. Use either this or the specific products. If the auxiliary data needed for interpolation is not available in this path, the data will automatically downloaded.",
                "default_values": null,
                "values_set": []
            },
            "outputRtosa": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputAsRrs": {
                "description": "Reflectance values in the target product shall be either written as remote sensing or water leaving reflectances",
                "default_values": "false",
                "values_set": []
            },
            "outputAngles": {
                "description": null,
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Meris.LandClassification": {
        "alias": "Meris.LandClassification",
        "description": "MERIS L2 land/water reclassification.",
        "authors": "Marco Z\u00fchlke",
        "name": "org.esa.s3tbx.meris.brr.LandClassificationOp",
        "version": "2.3.4",
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "FillBand": {
        "alias": "FillBand",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.FillBandOp",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "PixEx": {
        "alias": "PixEx",
        "description": "Extracts pixels from given locations and source products.",
        "authors": "Marco Peters, Thomas Storm, Norman Fomferra",
        "name": "org.esa.snap.pixex.PixExOp",
        "version": "1.3",
        "params": {
            "sourceProductPaths": {
                "description": "A comma-separated list of file paths specifying the source products.\nEach path may contain the wildcards '**' (matches recursively any directory),\n'*' (matches any character sequence in path names) and\n'?' (matches any single character).",
                "default_values": null,
                "values_set": []
            },
            "exportBands": {
                "description": "Specifies if bands are to be exported",
                "default_values": "true",
                "values_set": []
            },
            "exportTiePoints": {
                "description": "Specifies if tie-points are to be exported",
                "default_values": "true",
                "values_set": []
            },
            "exportMasks": {
                "description": "Specifies if masks are to be exported",
                "default_values": "true",
                "values_set": []
            },
            "coordinates": {
                "description": "The geo-coordinates",
                "default_values": null,
                "values_set": []
            },
            "timeDifference": {
                "description": "The acceptable time difference compared to the time given for a coordinate.\nThe format is a number followed by (D)ay, (H)our or (M)inute. If no time difference is provided, all input products are considered regardless of their time.",
                "default_values": null,
                "values_set": []
            },
            "coordinatesFile": {
                "description": "Path to a file containing geo-coordinates. BEAM's placemark files can be used.",
                "default_values": null,
                "values_set": []
            },
            "matchupFile": {
                "description": "Path to a CSV-file containing geo-coordinates associated with measurements accordingto BEAM CSV format specification",
                "default_values": null,
                "values_set": []
            },
            "windowSize": {
                "description": "Side length of surrounding window (uneven)",
                "default_values": "1",
                "values_set": []
            },
            "outputDir": {
                "description": "The output directory.",
                "default_values": null,
                "values_set": []
            },
            "outputFilePrefix": {
                "description": "The prefix is used to name the output files.",
                "default_values": "pixEx",
                "values_set": []
            },
            "expression": {
                "description": "Band maths expression (optional). Defines valid pixels.",
                "default_values": null,
                "values_set": []
            },
            "exportExpressionResult": {
                "description": "If true, the expression result is exported per pixel, otherwise the expression \nis used as filter (all pixels in given window must be valid).",
                "default_values": "true",
                "values_set": []
            },
            "aggregatorStrategyType": {
                "description": "If the window size is larger than 1, this parameter describes by which method a single \nvalue shall be derived from the pixels.",
                "default_values": "no aggregation",
                "values_set": [
                    "no aggregation",
                    "mean",
                    "min",
                    "max",
                    "median"
                ]
            },
            "exportSubScenes": {
                "description": "If set to true, sub-scenes of the regions, where pixels are found, are exported.",
                "default_values": "false",
                "values_set": []
            },
            "subSceneBorderSize": {
                "description": "An additional border around the region where pixels are found.",
                "default_values": "0",
                "values_set": []
            },
            "exportKmz": {
                "description": "If set to true, a Google KMZ file will be created, which contains the coordinates where pixels are found.",
                "default_values": "false",
                "values_set": []
            },
            "extractTimeFromFilename": {
                "description": "If set to true, the sensing start and sensing stop should be extracted from the filename of each input product.",
                "default_values": "false",
                "values_set": []
            },
            "dateInterpretationPattern": {
                "description": "Describes how a date/time section inside a product filename should be interpreted. E.G. yyyyMMdd_HHmmss",
                "default_values": "yyyyMMdd",
                "values_set": []
            },
            "filenameInterpretationPattern": {
                "description": "Describes how the filename of a product should be interpreted.",
                "default_values": "*${startDate}*${endDate}*",
                "values_set": []
            },
            "includeOriginalInput": {
                "description": "Determines if the original input measurements shall be included in the output.",
                "default_values": "false",
                "values_set": []
            },
            "scatterPlotVariableCombinations": {
                "description": "Array of 2-tuples of variable names; for each of these tuples a scatter plot will be exported.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Read": {
        "alias": "Read",
        "description": "Reads a data product from a given file location.",
        "authors": "Marco Zuehlke, Norman Fomferra",
        "name": "org.esa.snap.core.gpf.common.ReadOp",
        "version": "1.2",
        "params": {
            "file": {
                "description": "The file from which the data product is read.",
                "default_values": null,
                "values_set": []
            },
            "formatName": {
                "description": "An (optional) format name.",
                "default_values": null,
                "values_set": [
                    "MUSCATE",
                    "GDAL-HFA-READER",
                    "SENTINEL-2-MSI-MultiRes-UTM37S",
                    "SeaDAS-L1",
                    "ATSR",
                    "Sen3_SLSTRL1B_1km",
                    "WorldViewGeoTIFF",
                    "SENTINEL-2-MSI-MultiRes-UTM21N",
                    "SeaDAS-L3",
                    "SENTINEL-2-MSI-MultiRes-UTM20S",
                    "SENTINEL-2-MSI-MultiRes-UTM28N",
                    "GDAL-RST-READER",
                    "SENTINEL-2-MSI-MultiRes-UTM31S",
                    "NetCDF-CF",
                    "AVNIR-2",
                    "HGT",
                    "HICO",
                    "SENTINEL-2-MSI-MultiRes-UTM52S",
                    "SENTINEL-2-MSI-MultiRes-UTM32N",
                    "SENTINEL-2-MSI-MultiRes-UTM31N",
                    "SENTINEL-2-MSI-MultiRes-UTM55N",
                    "SENTINEL-2-MSI-MultiRes-UTM02S",
                    "SENTINEL-2-MSI-MultiRes-UTM19S",
                    "SENTINEL-2-MSI-MultiRes-UTM10N",
                    "SENTINEL-2-MSI-MultiRes-UTM15N",
                    "SENTINEL-2-MSI-MultiRes-UTM49S",
                    "MODIS",
                    "GETASSE30",
                    "Kompsat5",
                    "SeaDAS-ANC",
                    "SENTINEL-2-MSI-MultiRes-UTM35S",
                    "SENTINEL-2-MSI-MultiRes-UTM13N",
                    "SENTINEL-2-MSI-MultiRes-UTM50S",
                    "RADARSAT-2",
                    "SENTINEL-2-MSI-MultiRes-UTM43N",
                    "SENTINEL-2-MSI-MultiRes-UTM42N",
                    "SENTINEL-2-MSI-MultiRes-UTM40S",
                    "SENTINEL-2-MSI-MultiRes-UTM58S",
                    "GOCI-L1B",
                    "SENTINEL-2-MSI-MultiRes-UTM01S",
                    "SENTINEL-2-MSI-MultiRes-UTM29N",
                    "Matlab",
                    "SENTINEL-2-MSI-MultiRes-UTM45S",
                    "SENTINEL-2-MSI-MultiRes-UTM09S",
                    "SENTINEL-2-MSI-MultiRes-UTM14S",
                    "SENTINEL-2-MSI-MultiRes-UTM25N",
                    "SENTINEL-2-MSI-MultiRes-UTM02N",
                    "SENTINEL-2-MSI-MultiRes-UTM16S",
                    "SENTINEL-2-MSI-MultiRes-UTM26S",
                    "SENTINEL-2-MSI-MultiRes-UTM01N",
                    "RISAT-1",
                    "SENTINEL-2-MSI-MultiRes-UTM40N",
                    "PACE-L1B",
                    "SPOTDimap",
                    "SENTINEL-2-MSI-MultiRes-UTM14N",
                    "GDAL-NITF-READER",
                    "CSV",
                    "GDAL-ILWIS-READER",
                    "SENTINEL-2-MSI-MultiRes-UTM39S",
                    "SENTINEL-2-MSI-MultiRes-UTM41N",
                    "PolSARPro",
                    "SENTINEL-2-MSI-MultiRes-UTM41S",
                    "SENTINEL-2-MSI-MultiRes-UTM48S",
                    "NOAA_POD_AVHRR_HRPT",
                    "SENTINEL-2-MSI-MultiRes-UTM23N",
                    "SENTINEL-2-MSI-MultiRes-UTM51S",
                    "SENTINEL-2-MSI-MultiRes-UTM18N",
                    "RAT",
                    "SENTINEL-2-MSI-MultiRes-UTM27S",
                    "PGX",
                    "SENTINEL-2-MSI-MultiRes-UTM28S",
                    "VIIRS",
                    "SENTINEL-2-MSI-MultiRes-UTM36N",
                    "FAST L5",
                    "SENTINEL-2-MSI-MultiRes-UTM43S",
                    "JERS CEOS",
                    "SENTINEL-2-MSI-MultiRes-UTM38N",
                    "SPOT5Take5",
                    "WorldView2GeoTIFF",
                    "SENTINEL-2-MSI-MultiRes-UTM58N",
                    "RapidEyeGeoTIFF",
                    "SENTINEL-2-MSI-MultiRes-UTM06N",
                    "SENTINEL-2-MSI-MultiRes-UTM11S",
                    "SPOT4Take5",
                    "SENTINEL-2-MSI-MultiRes-UTM11N",
                    "SENTINEL-2-MSI-MultiRes-UTM35N",
                    "Gaofen3",
                    "SENTINEL-2-MSI-MultiRes-UTM55S",
                    "SENTINEL-2-MSI-MultiRes-UTM05N",
                    "SENTINEL-2-MSI-MultiRes-UTM29S",
                    "SENTINEL-2-MSI-L1B-MultiRes",
                    "SENTINEL-2-MSI-MultiRes-UTM04N",
                    "SENTINEL-2-MSI-MultiRes-UTM08S",
                    "ERS CEOS",
                    "SENTINEL-2-MSI-MultiRes-UTM23S",
                    "RCM",
                    "SENTINEL-1",
                    "DEIMOSDimap",
                    "SENTINEL-2-MSI-MultiRes-UTM59S",
                    "GDAL-GSBG-READER",
                    "TerraSarX",
                    "SENTINEL-2-MSI-MultiRes-UTM30N",
                    "GDAL-GS7BG-READER",
                    "Gamma",
                    "IceyeProduct",
                    "SENTINEL-2-MSI-MultiRes-UTM17S",
                    "SPOT-VGT",
                    "SENTINEL-2-MSI-MultiRes-UTM50N",
                    "SENTINEL-2-MSI-MultiRes-UTM20N",
                    "SENTINEL-2-MSI-MultiRes-UTM05S",
                    "ACE",
                    "SENTINEL-2-MSI-MultiRes-UTM34S",
                    "LandsatC2L2GeoTIFF",
                    "SNAPHU",
                    "GDAL-GTX-READER",
                    "GeoTIFF",
                    "SENTINEL-2-MSI-10M",
                    "SENTINEL-2-MSI-MultiRes-UTM56S",
                    "Kompsat2GeoTIFF",
                    "SENTINEL-2-MSI-MultiRes-UTM12S",
                    "IMAGE",
                    "SENTINEL-2-MSI-MultiRes-UTM56N",
                    "GDAL-ERS-READER",
                    "SAOCOM",
                    "Landsat8GeoTIFF30m",
                    "SENTINEL-2-MSI-20M",
                    "Generic Binary",
                    "GeoTIFF-BigTIFF",
                    "SENTINEL-2-MSI-MultiRes-UTM26N",
                    "MODIS-L1B",
                    "SeaDAS-Browse",
                    "SENTINEL-2-MSI-MultiRes-UTM52N",
                    "SENTINEL-2-MSI-MultiRes-UTM34N",
                    "SENTINEL-2-MSI-MultiRes-UTM18S",
                    "SENTINEL-2-MSI-MultiRes-UTM08N",
                    "Aquarius",
                    "SENTINEL-2-MSI-MultiRes-UTM04S",
                    "SENTINEL-2-MSI-MultiRes-UTM27N",
                    "SENTINEL-2-MSI-MultiRes-UTM21S",
                    "SENTINEL-2-MSI-MultiRes-UTM07S",
                    "SENTINEL-2-MSI-MultiRes-UTM47N",
                    "SENTINEL-2-MSI-MultiRes-UTM57N",
                    "GDAL-SAGA-READER",
                    "GDAL-SGI-READER",
                    "SENTINEL-2-MSI-MultiRes-UTM03S",
                    "SENTINEL-2-MSI-MultiRes-UTM33S",
                    "SENTINEL-2-MSI-MultiRes-UTM25S",
                    "ENVI",
                    "Complex Binary",
                    "Binned_data_product",
                    "RapidEyeNITF",
                    "ENVISAT",
                    "METOP_AVHRR_3_L1B",
                    "SENTINEL-2-MSI-MultiRes-UTM39N",
                    "SENTINEL-2-MSI-MultiRes-UTM47S",
                    "HICO-L1B",
                    "MER_L1_S3",
                    "Sen3_SLSTRL1B_500m",
                    "SENTINEL-2-MSI-MultiRes-UTM45N",
                    "GDAL-GTiff-READER",
                    "MER_L2_S3",
                    "SENTINEL-2-MSI-MultiRes-UTM30S",
                    "Capella",
                    "ALOS-2 GeoTIFF",
                    "SeaDAS-L2",
                    "AlosAV2Dimap",
                    "SENTINEL-2-MSI-MultiRes-UTM51N",
                    "CosmoSkymed",
                    "BEAM-DIMAP",
                    "DSCOVER-L2",
                    "PleiadesDimap",
                    "RADARSAT-1",
                    "PRISM",
                    "OCM2-L1B",
                    "IkonosGeoTIFF",
                    "ARC_INFO_BIN_GRID",
                    "ALOS-2 CEOS",
                    "ACE2",
                    "SENTINEL-2-MSI-MultiRes-UTM53N",
                    "SENTINEL-2-MSI-MultiRes-UTM44S",
                    "SENTINEL-2-MSI-MultiRes-UTM57S",
                    "GDAL-BT-READER",
                    "SENTINEL-2-MSI-MultiRes-UTM46S",
                    "SENTINEL-2-MSI-MultiRes-UTM54N",
                    "SENTINEL-2-MSI-MultiRes-UTM59N",
                    "SENTINEL-2-MSI-MultiRes-UTM44N",
                    "VIIRS-L1B",
                    "Spacety",
                    "ALOS PALSAR CEOS",
                    "LandsatGeoTIFF",
                    "L3_ENV_MER",
                    "SENTINEL-2-MSI-MultiRes-UTM60S",
                    "HDF-EOS",
                    "SENTINEL-2-MSI-MultiRes-UTM09N",
                    "SENTINEL-2-MSI-MultiRes-UTM16N",
                    "SENTINEL-2-MSI-MultiRes-UTM17N",
                    "SENTINEL-2-MSI-MultiRes-UTM49N",
                    "SENTINEL-2-MSI-MultiRes-UTM38S",
                    "PAZ",
                    "SPOT6Dimap",
                    "SENTINEL-2-MSI-MultiRes-UTM42S",
                    "SENTINEL-2-MSI-MultiRes-UTM22N",
                    "GDAL-RMF-READER",
                    "Landsat8GeoTIFF15m",
                    "NetCDF-BEAM",
                    "SENTINEL-2-MSI-MultiRes-UTM32S",
                    "ATS_L1_S3",
                    "GDAL-KRO-READER",
                    "SENTINEL-2-MSI-MultiRes-UTM12N",
                    "SPOTView",
                    "SENTINEL-2-MSI-MultiRes-UTM46N",
                    "SENTINEL-2-MSI-MultiRes-UTM06S",
                    "SeaSat",
                    "SENTINEL-2-MSI-MultiRes-UTM60N",
                    "JPEG2000",
                    "SENTINEL-2-MSI-MultiRes-UTM13S",
                    "GTOPO30",
                    "SENTINEL-2-MSI-MultiRes-UTM10S",
                    "SENTINEL-2-MSI-MultiRes-UTM24N",
                    "LandsatL2GeoTIFF",
                    "Basic CEOS",
                    "SENTINEL-2-MSI-MultiRes-UTM37N",
                    "SENTINEL-2-MSI-MultiRes-UTM19N",
                    "AlosPRIDimap",
                    "NOAA_AVHRR_3_L1B",
                    "SENTINEL-2-MSI-MultiRes-UTM36S",
                    "SENTINEL-2-MSI-MultiRes-UTM48N",
                    "SENTINEL-2-MSI-MultiRes-UTM53S",
                    "SENTINEL-2-MSI-MultiRes-UTM07N",
                    "GDAL-PCIDSK-READER",
                    "SENTINEL-2-MSI-MultiRes-UTM24S",
                    "NetCDF",
                    "SENTINEL-2-MSI-MultiRes-UTM33N",
                    "GDAL-MFF-READER",
                    "SENTINEL-2-MSI-60M",
                    "SENTINEL-2-MSI-MultiRes-UTM03N",
                    "Sen3",
                    "SENTINEL-2-MSI-MultiRes-UTM22S",
                    "SENTINEL-2-MSI-MultiRes-UTM15S",
                    "SENTINEL-2-MSI-MultiRes-UTM54S"
                ]
            },
            "bandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "maskNames": {
                "description": "The list of source masks.",
                "default_values": null,
                "values_set": []
            },
            "pixelRegion": {
                "description": "The subset region in pixel coordinates.\nUse the following format: <x>,<y>,<width>,<height>\nIf not given, the entire scene is used. The 'geoRegion' parameter has precedence over this parameter.",
                "default_values": null,
                "values_set": []
            },
            "geometryRegion": {
                "description": "The subset region in geographical coordinates using WKT-format,\ne.g. POLYGON((<lon1> <lat1>, <lon2> <lat2>, ..., <lon1> <lat1>))\n(make sure to quote the option due to spaces in <geometry>).\nIf not given, the entire scene is used.",
                "default_values": null,
                "values_set": []
            },
            "copyMetadata": {
                "description": "Whether to copy the metadata of the source product.",
                "default_values": "true",
                "values_set": []
            }
        }
    },
    "Polarimetric-Parameters": {
        "alias": "Polarimetric-Parameters",
        "description": "Compute general polarimetric parameters",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.csa.rstb.polarimetric.gpf.PolarimetricParametersOp",
        "version": "1.0",
        "params": {
            "useMeanMatrix": {
                "description": "Use mean coherency or covariance matrix",
                "default_values": "true",
                "values_set": []
            },
            "windowSizeXStr": {
                "description": null,
                "default_values": "5",
                "values_set": [
                    "3",
                    "5",
                    "7",
                    "9",
                    "11",
                    "13",
                    "15",
                    "17",
                    "19"
                ]
            },
            "windowSizeYStr": {
                "description": null,
                "default_values": "5",
                "values_set": [
                    "3",
                    "5",
                    "7",
                    "9",
                    "11",
                    "13",
                    "15",
                    "17",
                    "19"
                ]
            },
            "outputSpan": {
                "description": "Output Span",
                "default_values": "true",
                "values_set": []
            },
            "outputPedestalHeight": {
                "description": "Output pedestal height",
                "default_values": "false",
                "values_set": []
            },
            "outputRVI": {
                "description": "Output RVI",
                "default_values": "false",
                "values_set": []
            },
            "outputRFDI": {
                "description": "Output RFDI",
                "default_values": "false",
                "values_set": []
            },
            "outputCSI": {
                "description": "Output CSI",
                "default_values": "false",
                "values_set": []
            },
            "outputVSI": {
                "description": "Output VSI",
                "default_values": "false",
                "values_set": []
            },
            "outputBMI": {
                "description": "Output BMI",
                "default_values": "false",
                "values_set": []
            },
            "outputITI": {
                "description": "Output ITI",
                "default_values": "false",
                "values_set": []
            },
            "outputHHVVRatio": {
                "description": "Output Co-Pol HH/VV",
                "default_values": "false",
                "values_set": []
            },
            "outputHHHVRatio": {
                "description": "Output Cross-Pol HH/HV",
                "default_values": "false",
                "values_set": []
            },
            "outputVVVHRatio": {
                "description": "Output Cross-Pol VV/VH",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Meris.SmileCorrection": {
        "alias": "Meris.SmileCorrection",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.brr.SmileCorrectionOp",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Compute-Slope-Aspect": {
        "alias": "Compute-Slope-Aspect",
        "description": "Compute Slope and Aspect from DEM",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.dem.gpf.ComputeSlopeAspectOp",
        "version": null,
        "params": {
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 1Sec HGT",
                "values_set": []
            },
            "demResamplingMethod": {
                "description": null,
                "default_values": "BILINEAR_INTERPOLATION",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "externalDEMApplyEGM": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "demBandName": {
                "description": null,
                "default_values": "elevation",
                "values_set": []
            }
        }
    },
    "BandMerge": {
        "alias": "BandMerge",
        "description": "Allows copying raster data from any number of source products to a specified 'master' product.",
        "authors": "SNAP team",
        "name": "org.esa.s1tbx.utilities.gpf.BandMergeOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "geographicError": {
                "description": "Defines the maximum lat/lon error in degree between the products.",
                "default_values": "1.0E-5f",
                "values_set": []
            }
        }
    },
    "PhaseToHeight": {
        "alias": "PhaseToHeight",
        "description": "Phase to Height conversion",
        "authors": "Petar Marinkovic",
        "name": "org.jlinda.nest.gpf.Slant2HeightOp",
        "version": "1.0",
        "params": {
            "nPoints": {
                "description": "Number of points for evaluation of flat earth phase at different altitudes",
                "default_values": "200",
                "values_set": [
                    "100",
                    "200",
                    "300",
                    "400",
                    "500"
                ]
            },
            "nHeights": {
                "description": "Number of height samples in range [0,5000)",
                "default_values": "3",
                "values_set": [
                    "2",
                    "3",
                    "4",
                    "5"
                ]
            },
            "degree1D": {
                "description": "Degree of the 1D polynomial to fit reference phase through.",
                "default_values": "2",
                "values_set": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                ]
            },
            "degree2D": {
                "description": "Degree of the 2D polynomial to fit reference phase through.",
                "default_values": "5",
                "values_set": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8"
                ]
            },
            "orbitDegree": {
                "description": "Degree of orbit (polynomial) interpolator",
                "default_values": "3",
                "values_set": [
                    "2",
                    "3",
                    "4",
                    "5"
                ]
            }
        }
    },
    "Flip": {
        "alias": "Flip",
        "description": "flips a product horizontal/vertical",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.raster.gpf.FlipOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "flipType": {
                "description": null,
                "default_values": "Vertical",
                "values_set": [
                    "Horizontal",
                    "Vertical",
                    "Horizontal and Vertical"
                ]
            }
        }
    },
    "Terrain-Mask": {
        "alias": "Terrain-Mask",
        "description": "Terrain Mask Generation",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.snap.raster.gpf.masks.TerrainMaskOp",
        "version": "1.0",
        "params": {
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": [
                    "ACE",
                    "ASTER 1sec GDEM",
                    "GETASSE30",
                    "SRTM 1Sec HGT",
                    "SRTM 3Sec"
                ]
            },
            "demResamplingMethod": {
                "description": null,
                "default_values": "NEAREST_NEIGHBOUR",
                "values_set": [
                    "NEAREST_NEIGHBOUR",
                    "BILINEAR_INTERPOLATION",
                    "CUBIC_CONVOLUTION",
                    "BICUBIC_INTERPOLATION",
                    "BISINC_5_POINT_INTERPOLATION"
                ]
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "windowSizeStr": {
                "description": null,
                "default_values": "15x15",
                "values_set": [
                    "5x5",
                    "7x7",
                    "9x9",
                    "11x11",
                    "13x13",
                    "15x15",
                    "17x17"
                ]
            },
            "thresholdInMeter": {
                "description": "Threshold for detection",
                "default_values": "40.0",
                "values_set": []
            }
        }
    },
    "SimulateAmplitude": {
        "alias": "SimulateAmplitude",
        "description": "Simulate amplitude based on DEM",
        "authors": "Petar Marinkovic",
        "name": "org.jlinda.nest.gpf.SimulateAmplitudeOp",
        "version": "1.0",
        "params": {
            "orbitDegree": {
                "description": "Degree of orbit interpolation polynomial",
                "default_values": "3",
                "values_set": []
            },
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "simAmpBandName": {
                "description": "Simulated amplitude band name.",
                "default_values": "sim_amp",
                "values_set": []
            }
        }
    },
    "GaborFilter": {
        "alias": "GaborFilter",
        "description": "Extract Texture Features",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.texture.GaborFilterOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "theta": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Change-Detection": {
        "alias": "Change-Detection",
        "description": "Change Detection.",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.ChangeDetectionOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "maskUpperThreshold": {
                "description": "Mask upper threshold",
                "default_values": "2.0",
                "values_set": []
            },
            "maskLowerThreshold": {
                "description": "Mask lower threshold",
                "default_values": "-2.0",
                "values_set": []
            },
            "includeSourceBands": {
                "description": "Include source bands",
                "default_values": "false",
                "values_set": []
            },
            "outputLogRatio": {
                "description": "Output Log Ratio",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "L3ToL1": {
        "alias": "L3ToL1",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.L3ToL1Op",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            },
            "maskBand": {
                "description": null,
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Wind-Field-Estimation": {
        "alias": "Wind-Field-Estimation",
        "description": "Estimate wind speed and direction",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.fex.gpf.oceantools.WindFieldEstimationOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "windowSizeInKm": {
                "description": "Window size",
                "default_values": "20.0",
                "values_set": []
            }
        }
    },
    "Rad2Refl": {
        "alias": "Rad2Refl",
        "description": "Provides conversion from radiances to reflectances or backwards.",
        "authors": "Olaf Danne, Marco Peters",
        "name": "org.esa.s3tbx.processor.rad2refl.Rad2ReflOp",
        "version": "2.0",
        "params": {
            "sensor": {
                "description": "The sensor",
                "default_values": "OLCI",
                "values_set": [
                    "MERIS",
                    "OLCI",
                    "SLSTR_500m"
                ]
            },
            "conversionMode": {
                "description": "Conversion mode: from rad to refl, or backwards",
                "default_values": "RAD_TO_REFL",
                "values_set": [
                    "RAD_TO_REFL",
                    "REFL_TO_RAD"
                ]
            },
            "copyTiePointGrids": {
                "description": "If set, all tie point grids from source product are written to target product",
                "default_values": "false",
                "values_set": []
            },
            "copyFlagBandsAndMasks": {
                "description": "If set, all flag bands and masks from source product are written to target product",
                "default_values": "false",
                "values_set": []
            },
            "copyNonSpectralBands": {
                "description": "If set, all other non-spectral bands from source product are written to target product",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Generalized-Radar-Vegetation-Index": {
        "alias": "Generalized-Radar-Vegetation-Index",
        "description": "Generalized Radar Vegetation Indices generation",
        "authors": "Dipankar Mandal at al.",
        "name": "org.csa.rstb.polarimetric.gpf.GRVIOp",
        "version": "1.0",
        "params": {
            "windowSize": {
                "description": "The sliding window size",
                "default_values": "5",
                "values_set": []
            }
        }
    },
    "PassThrough": {
        "alias": "PassThrough",
        "description": "Sets target product to source product.",
        "authors": null,
        "name": "org.esa.snap.core.gpf.common.PassThroughOp",
        "version": null,
        "params": {}
    },
    "RRToFRS": {
        "alias": "RRToFRS",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.RRToFRSOp",
        "version": null,
        "params": {}
    },
    "PviOp": {
        "alias": "PviOp",
        "description": "Perpendicular Vegetation Index retrieves the Isovegetation lines parallel to soil line. Soil line has an arbitrary slope and passes through origin",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.PviOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "angleSoilLineNIRAxis": {
                "description": "Soil line has an arbitrary slope and passes through origin.",
                "default_values": "45.0",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the PVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the PVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "EAP-Phase-Correction": {
        "alias": "EAP-Phase-Correction",
        "description": "EAP Phase Correction",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sentinel1.gpf.EAPPhaseCorrectionOp",
        "version": "1.0",
        "params": {}
    },
    "Binning": {
        "alias": "Binning",
        "description": "Performs spatial and temporal aggregation of pixel values into cells ('bins') of a planetary grid",
        "authors": "Norman Fomferra, Marco Z\u00fchlke, Thomas Storm",
        "name": "org.esa.snap.binning.operator.BinningOp",
        "version": "1.0",
        "params": {
            "sourceProductPaths": {
                "description": "A comma-separated list of file paths specifying the source products.\nEach path may contain the wildcards '**' (matches recursively any directory),\n'*' (matches any character sequence in path names) and\n'?' (matches any single character).",
                "default_values": null,
                "values_set": []
            },
            "sourceProductFormat": {
                "description": "The common product format of all source products.\nThis parameter is optional and may be used in conjunction with\nparameter 'sourceProductPaths'. Can be set if multiple reader are \navailable for the source files and a specific one shall be used.Try \"NetCDF-CF\", \"GeoTIFF\", \"BEAM-DIMAP\", or \"ENVISAT\", etc.",
                "default_values": null,
                "values_set": []
            },
            "sourceGraphPaths": {
                "description": "A comma-separated list of file paths specifying the source graphs.\nEach path may contain the wildcards '**' (matches recursively any directory),\n'*' (matches any character sequence in path names) and\n'?' (matches any single character).",
                "default_values": null,
                "values_set": []
            },
            "region": {
                "description": "The considered geographical region as a geometry in well-known text format (WKT).\nIf not given, the geographical region will be computed according to the extents of the input products.",
                "default_values": null,
                "values_set": []
            },
            "startDateTime": {
                "description": "The UTC start date of the binning period.\nThe format is either 'yyyy-MM-dd HH:mm:ss' or 'yyyy-MM-dd'.\n If only the date part is given, the time 00:00:00 is assumed.",
                "default_values": null,
                "values_set": []
            },
            "periodDuration": {
                "description": "Duration of the binning period in days.",
                "default_values": null,
                "values_set": []
            },
            "timeFilterMethod": {
                "description": "The method that is used to decide which source pixels are used with respect to their observation time.\n'NONE': ignore pixel observation time, use all source pixels.\n'TIME_RANGE': use all pixels that have been acquired in the given binning period.\n'SPATIOTEMPORAL_DATA_DAY': use a sensor-dependent, spatial \"data-day\" definition with the goal\nto minimise the time between the first and last observation contributing to the same bin in the given binning period.\nThe decision, whether a source pixel contributes to a bin or not, is a function of the pixel's observation longitude and time.\nRequires the parameter 'minDataHour'.",
                "default_values": "NONE",
                "values_set": []
            },
            "minDataHour": {
                "description": "A sensor-dependent constant given in hours of a day (0 to 24)\nat which a sensor has a minimum number of observations at the date line (the 180 degree meridian).\nOnly used if parameter 'dataDayMode' is set to 'SPATIOTEMPORAL_DATADAY'.",
                "default_values": null,
                "values_set": []
            },
            "numRows": {
                "description": "Number of rows in the (global) planetary grid. Must be even.",
                "default_values": "2160",
                "values_set": []
            },
            "superSampling": {
                "description": "The square of the number of pixels used for super-sampling an input pixel into multiple sub-pixels",
                "default_values": "1",
                "values_set": []
            },
            "maxDistanceOnEarth": {
                "description": "Skips binning of sub-pixel if distance on earth to the center of the main-pixel is larger as this value. A value <=0 disables this check",
                "default_values": "-1",
                "values_set": []
            },
            "maskExpr": {
                "description": "The band maths expression used to filter input pixels",
                "default_values": null,
                "values_set": []
            },
            "variableConfigs": {
                "description": "List of variables. A variable will generate a virtual band\nin each source data product, so that it can be used as input for the binning.",
                "default_values": null,
                "values_set": []
            },
            "aggregatorConfigs": {
                "description": "List of aggregators. Aggregators generate the bands in the binned output products",
                "default_values": null,
                "values_set": []
            },
            "postProcessorConfig": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "outputType": {
                "description": null,
                "default_values": "Product",
                "values_set": [
                    "Product",
                    "RGB",
                    "Grey"
                ]
            },
            "outputFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "outputFormat": {
                "description": null,
                "default_values": "BEAM-DIMAP",
                "values_set": []
            },
            "bandConfigurations": {
                "description": "Configures the target bands. Not needed if output type 'Product' is chosen.",
                "default_values": null,
                "values_set": []
            },
            "productCustomizerConfig": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "outputBinnedData": {
                "description": "If true, a SeaDAS-style, binned data NetCDF file is written in addition to the\ntarget product. The output file name will be <target>-bins.nc",
                "default_values": "false",
                "values_set": []
            },
            "outputTargetProduct": {
                "description": "If true, a mapped product is written. Set this to 'false' if only a binned product is needed.",
                "default_values": "true",
                "values_set": []
            },
            "metadataPropertiesFile": {
                "description": "The name of the file containing metadata key-value pairs (google \"Java Properties file format\").",
                "default_values": "./metadata.properties",
                "values_set": []
            },
            "metadataTemplateDir": {
                "description": "The name of the directory containing metadata templates (google \"Apache Velocity VTL format\").",
                "default_values": ".",
                "values_set": []
            },
            "metadataAggregatorName": {
                "description": "The type of metadata aggregation to be used. Possible values are:\n'NAME': aggregate the name of each input product\n'FIRST_HISTORY': aggregates all input product names and the processing history of the first product\n'ALL_HISTORIES': aggregates all input product names and processing histories",
                "default_values": "NAME",
                "values_set": []
            },
            "planetaryGridClass": {
                "description": null,
                "default_values": "org.esa.snap.binning.support.SEAGrid",
                "values_set": []
            }
        }
    },
    "RemoteExecutionOp": {
        "alias": "RemoteExecutionOp",
        "description": "The Remote Execution Processor executes on the remote machines a slave graph and then on the host machine it executes a master graph using the products created by the remote machines.",
        "authors": "Jean Coravu",
        "name": "org.esa.snap.remote.execution.RemoteExecutionOp",
        "version": "1.0",
        "params": {
            "remoteSharedFolderPath": {
                "description": "Specifies the shared folder path.",
                "default_values": null,
                "values_set": []
            },
            "remoteSharedFolderUsername": {
                "description": "Specifies the username account of the machine where the shared folder is created.",
                "default_values": null,
                "values_set": []
            },
            "remoteSharedFolderPassword": {
                "description": "Specifies the password account of the machine where the shared folder is created.",
                "default_values": null,
                "values_set": []
            },
            "localSharedFolderPath": {
                "description": "Specifies the local shared folder path used to connect to the remote shared folder.",
                "default_values": null,
                "values_set": []
            },
            "localPassword": {
                "description": "Specifies the password of the local machine.",
                "default_values": null,
                "values_set": []
            },
            "slaveGraphFilePath": {
                "description": "Specifies the slave graph file path to be executed on the remote machines.",
                "default_values": null,
                "values_set": []
            },
            "sourceProductFiles": {
                "description": "Specifies the product files.",
                "default_values": null,
                "values_set": []
            },
            "remoteMachines": {
                "description": "Specifies the remote machines credentials.",
                "default_values": null,
                "values_set": []
            },
            "masterGraphFilePath": {
                "description": "Specifies the master graph file path.",
                "default_values": null,
                "values_set": []
            },
            "continueOnFailure": {
                "description": "Specifies the flag to continue or not when a remote machine fails.",
                "default_values": null,
                "values_set": []
            },
            "masterProductFormatName": {
                "description": "Specifies the master product format name.",
                "default_values": null,
                "values_set": []
            },
            "masterProductFilePath": {
                "description": "Specifies the master product file path.",
                "default_values": null,
                "values_set": []
            },
            "waitingSecondsTimeout": {
                "description": "Specifies the waiting seconds to complete the output products on the remote machines.",
                "default_values": null,
                "values_set": []
            },
            "slaveProductsFolderNamePrefix": {
                "description": "Specifies the folder name prefix of the slave output products.",
                "default_values": null,
                "values_set": []
            },
            "slaveProductsName": {
                "description": "Specifies the name of the output products obtained using the slave graph.",
                "default_values": null,
                "values_set": []
            },
            "slaveProductsFormatName": {
                "description": "Specifies the format name of the output products obtained using the slave graph.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "StoredGraph": {
        "alias": "StoredGraph",
        "description": "Encapsulates an stored graph into an operator.",
        "authors": null,
        "name": "org.esa.snap.smart.configurator.StoredGraphOp",
        "version": null,
        "params": {
            "file": {
                "description": "The file from which the graph is read.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "Meris.BlueBand": {
        "alias": "Meris.BlueBand",
        "description": null,
        "authors": null,
        "name": "org.esa.s3tbx.meris.cloud.BlueBandOp",
        "version": null,
        "params": {
            "copyAllTiePoints": {
                "description": "If set to 'false' only the lat and lon tie-points will be copied to the target product",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "Undersample": {
        "alias": "Undersample",
        "description": "Undersample the datset",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.utilities.gpf.UndersamplingOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "method": {
                "description": null,
                "default_values": "LowPass Filtering",
                "values_set": [
                    "Sub-Sampling",
                    "LowPass Filtering"
                ]
            },
            "filterSize": {
                "description": null,
                "default_values": "3x3",
                "values_set": [
                    "3x3",
                    "5x5",
                    "7x7"
                ]
            },
            "subSamplingX": {
                "description": null,
                "default_values": "2",
                "values_set": []
            },
            "subSamplingY": {
                "description": null,
                "default_values": "2",
                "values_set": []
            },
            "outputImageBy": {
                "description": null,
                "default_values": "Ratio",
                "values_set": [
                    "Image Size",
                    "Ratio",
                    "Pixel Spacing"
                ]
            },
            "targetImageHeight": {
                "description": "The row dimension of the output image",
                "default_values": "1000",
                "values_set": []
            },
            "targetImageWidth": {
                "description": "The col dimension of the output image",
                "default_values": "1000",
                "values_set": []
            },
            "widthRatio": {
                "description": "The width ratio of the output/input images",
                "default_values": "0.5",
                "values_set": []
            },
            "heightRatio": {
                "description": "The height ratio of the output/input images",
                "default_values": "0.5",
                "values_set": []
            },
            "rangeSpacing": {
                "description": "The range pixel spacing",
                "default_values": "12.5",
                "values_set": []
            },
            "azimuthSpacing": {
                "description": "The azimuth pixel spacing",
                "default_values": "12.5",
                "values_set": []
            }
        }
    },
    "TndviOp": {
        "alias": "TndviOp",
        "description": "Transformed Normalized Difference Vegetation Index retrieves the Isovegetation lines parallel to soil line",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.TndviOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the TNDVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the TNDVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "TOPSAR-Split": {
        "alias": "TOPSAR-Split",
        "description": "Creates a new product with only the selected subswath",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sentinel1.gpf.TOPSARSplitOp",
        "version": "1.0",
        "params": {
            "subswath": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "selectedPolarisations": {
                "description": "The list of polarisations",
                "default_values": null,
                "values_set": []
            },
            "firstBurstIndex": {
                "description": "The first burst index",
                "default_values": "1",
                "values_set": []
            },
            "lastBurstIndex": {
                "description": "The last burst index",
                "default_values": "9999",
                "values_set": []
            },
            "wktAoi": {
                "description": "WKT polygon to be used for selecting bursts",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "GaseousAbsorption": {
        "alias": "GaseousAbsorption",
        "description": "Correct the influence of atmospheric gas absorption for those OLCI channels.",
        "authors": "Marco Peters, Muhammad Bala (Brockmann Consult)",
        "name": "org.esa.s3tbx.olci.radiometry.gasabsorption.GaseousAbsorptionOp",
        "version": "1.1",
        "params": {}
    },
    "Speckle-Filter": {
        "alias": "Speckle-Filter",
        "description": "Speckle Reduction",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.sar.gpf.filtering.SpeckleFilterOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            },
            "filter": {
                "description": null,
                "default_values": "Lee Sigma",
                "values_set": [
                    "None",
                    "Boxcar",
                    "Median",
                    "Frost",
                    "Gamma Map",
                    "Lee",
                    "Refined Lee",
                    "Lee Sigma",
                    "IDAN"
                ]
            },
            "filterSizeX": {
                "description": "The kernel x dimension",
                "default_values": "3",
                "values_set": []
            },
            "filterSizeY": {
                "description": "The kernel y dimension",
                "default_values": "3",
                "values_set": []
            },
            "dampingFactor": {
                "description": "The damping factor (Frost filter only)",
                "default_values": "2",
                "values_set": []
            },
            "estimateENL": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "enl": {
                "description": "The number of looks",
                "default_values": "1.0",
                "values_set": []
            },
            "numLooksStr": {
                "description": null,
                "default_values": "1",
                "values_set": [
                    "1",
                    "2",
                    "3",
                    "4"
                ]
            },
            "windowSize": {
                "description": null,
                "default_values": "7x7",
                "values_set": [
                    "5x5",
                    "7x7",
                    "9x9",
                    "11x11",
                    "13x13",
                    "15x15",
                    "17x17"
                ]
            },
            "targetWindowSizeStr": {
                "description": null,
                "default_values": "3x3",
                "values_set": [
                    "3x3",
                    "5x5"
                ]
            },
            "sigmaStr": {
                "description": null,
                "default_values": "0.9",
                "values_set": [
                    "0.5",
                    "0.6",
                    "0.7",
                    "0.8",
                    "0.9"
                ]
            },
            "anSize": {
                "description": "The Adaptive Neighbourhood size",
                "default_values": "50",
                "values_set": []
            }
        }
    },
    "ThermalNoiseRemoval": {
        "alias": "ThermalNoiseRemoval",
        "description": "Removes thermal noise from products",
        "authors": "Cecilia Wong, Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.calibration.gpf.Sentinel1RemoveThermalNoiseOp",
        "version": "1.0",
        "params": {
            "selectedPolarisations": {
                "description": "The list of polarisations",
                "default_values": null,
                "values_set": []
            },
            "removeThermalNoise": {
                "description": "Remove thermal noise",
                "default_values": "true",
                "values_set": []
            },
            "reIntroduceThermalNoise": {
                "description": "Re-introduce thermal noise",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "RviOp": {
        "alias": "RviOp",
        "description": "Ratio Vegetation Index retrieves the Isovegetation lines converge at origin",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.RviOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the RVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the RVI computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "PssraOp": {
        "alias": "PssraOp",
        "description": "Pigment Specific Simple Ratio, chlorophyll index",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.PssraOp",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "redFactor": {
                "description": "The value of the red source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "redSourceBand": {
                "description": "The red band for the PSSRa computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the PSSRa computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "TestPattern": {
        "alias": "TestPattern",
        "description": "For testing only",
        "authors": "Jun Lu, Luis Veci",
        "name": "org.esa.s1tbx.utilities.gpf.TestPatternOp",
        "version": "1.0",
        "params": {
            "sourceBandNames": {
                "description": "The list of source bands.",
                "default_values": null,
                "values_set": []
            }
        }
    },
    "c2rcc.viirs": {
        "alias": "c2rcc.viirs",
        "description": "Performs atmospheric correction and IOP retrieval on Viirs L1C data products.",
        "authors": "Roland Doerffer, Marco Peters (Brockmann Consult)",
        "name": "org.esa.s3tbx.c2rcc.viirs.C2rccViirsOperator",
        "version": "1.0",
        "params": {
            "validPixelExpression": {
                "description": "Defines the pixels which are valid for processing",
                "default_values": "!(l2_flags.LAND || rhot_862 > 0.25)",
                "values_set": []
            },
            "salinity": {
                "description": "The value used as salinity for the scene",
                "default_values": "35.0",
                "values_set": []
            },
            "temperature": {
                "description": "The value used as temperature for the scene",
                "default_values": "15.0",
                "values_set": []
            },
            "ozone": {
                "description": "The value used as ozone if not provided by auxiliary data",
                "default_values": "330",
                "values_set": []
            },
            "press": {
                "description": "The surface air pressure at sea level if not provided by auxiliary data",
                "default_values": "1000",
                "values_set": []
            },
            "atmosphericAuxDataPath": {
                "description": "Path to the atmospheric auxiliary data directory. Use either this or tomsomiStartProduct, tomsomiEndProduct, ncepStartProduct and ncepEndProduct to use ozone and air pressure aux data for calculations. If the auxiliary data needed for interpolation not available in this path, the data will automatically downloaded.",
                "default_values": null,
                "values_set": []
            },
            "outputRtosa": {
                "description": null,
                "default_values": "false",
                "values_set": []
            },
            "outputAsRrs": {
                "description": "Reflectance values in the target product shall be either written as remote sensing or water leaving reflectances",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "TopoPhaseRemoval": {
        "alias": "TopoPhaseRemoval",
        "description": "Compute and subtract TOPO phase",
        "authors": "Petar Marinkovic",
        "name": "org.jlinda.nest.gpf.SubtRefDemOp",
        "version": "1.0",
        "params": {
            "orbitDegree": {
                "description": "Degree of orbit interpolation polynomial",
                "default_values": "3",
                "values_set": []
            },
            "demName": {
                "description": "The digital elevation model.",
                "default_values": "SRTM 3Sec",
                "values_set": []
            },
            "externalDEMFile": {
                "description": null,
                "default_values": null,
                "values_set": []
            },
            "externalDEMNoDataValue": {
                "description": null,
                "default_values": "0",
                "values_set": []
            },
            "tileExtensionPercent": {
                "description": "Define extension of tile for DEM simulation (optimization parameter).",
                "default_values": "100",
                "values_set": []
            },
            "outputTopoPhaseBand": {
                "description": "Output topographic phase band.",
                "default_values": "false",
                "values_set": []
            },
            "outputElevationBand": {
                "description": "Output elevation band.",
                "default_values": "false",
                "values_set": []
            },
            "outputLatLonBands": {
                "description": "Output lat/lon bands.",
                "default_values": "false",
                "values_set": []
            }
        }
    },
    "SM-Dielectric-Modeling": {
        "alias": "SM-Dielectric-Modeling",
        "description": "Performs SM inversion using dielectric model",
        "authors": null,
        "name": "org.csa.rstb.soilmoisture.gpf.SMDielectricModelInverOp",
        "version": null,
        "params": {
            "modelToUse": {
                "description": "Choice of dielectric models for SM inversion",
                "default_values": "Hallikainen",
                "values_set": [
                    "Hallikainen",
                    "Mironov"
                ]
            },
            "minSM": {
                "description": "Minimum soil moisture value",
                "default_values": "0.0",
                "values_set": []
            },
            "maxSM": {
                "description": "Maximum soil moisture value",
                "default_values": "0.55",
                "values_set": []
            },
            "outputRDC": {
                "description": "Optional RDC in output",
                "default_values": "true",
                "values_set": []
            },
            "outputLandCover": {
                "description": "Optional LandCover in output",
                "default_values": "true",
                "values_set": []
            },
            "effectiveSoilTemperature": {
                "description": "Effective soil temperature",
                "default_values": "18.0",
                "values_set": []
            }
        }
    },
    "AzimuthFilter": {
        "alias": "AzimuthFilter",
        "description": "Azimuth Filter",
        "authors": "Petar Marinkovic",
        "name": "org.jlinda.nest.gpf.AzimuthFilterOp",
        "version": "1.0",
        "params": {
            "fftLength": {
                "description": "Length of filtering window",
                "default_values": "256",
                "values_set": [
                    "64",
                    "128",
                    "256",
                    "512",
                    "1024",
                    "2048"
                ]
            },
            "aziFilterOverlap": {
                "description": "Overlap between filtering windows in azimuth direction [lines]",
                "default_values": "0",
                "values_set": [
                    "0",
                    "8",
                    "16",
                    "32",
                    "64",
                    "128",
                    "256"
                ]
            },
            "alphaHamming": {
                "description": "Weight for Hamming filter (1 is rectangular window)",
                "default_values": "0.75",
                "values_set": [
                    "0.5",
                    "0.75",
                    "0.8",
                    "0.9",
                    "1"
                ]
            }
        }
    },
    "Ndwi2Op": {
        "alias": "Ndwi2Op",
        "description": "The Normalized Difference Water Index, allowing for the measurement of surface water extent",
        "authors": "Dragos Mihailescu",
        "name": "org.esa.s2tbx.radiometry.Ndwi2Op",
        "version": "1.0",
        "params": {
            "resampleType": {
                "description": "If selected band s differ in size, the resample method used before computing the index",
                "default_values": "None",
                "values_set": [
                    "None",
                    "Lowest resolution",
                    "Highest resolution"
                ]
            },
            "upsamplingMethod": {
                "description": "The method used for interpolation (upsampling to a finer resolution).",
                "default_values": "Nearest",
                "values_set": [
                    "Nearest",
                    "Bilinear",
                    "Bicubic"
                ]
            },
            "downsamplingMethod": {
                "description": "The method used for aggregation (downsampling to a coarser resolution).",
                "default_values": "First",
                "values_set": [
                    "First",
                    "Min",
                    "Max",
                    "Mean",
                    "Median"
                ]
            },
            "greenFactor": {
                "description": "The value of the green source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "nirFactor": {
                "description": "The value of the NIR source band is multiplied by this value.",
                "default_values": "1.0F",
                "values_set": []
            },
            "greenSourceBand": {
                "description": "The green band for the NDWI2 computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            },
            "nirSourceBand": {
                "description": "The near-infrared band for the NDWI2 computation. If not provided, the operator will try to find the best fitting band.",
                "default_values": null,
                "values_set": []
            }
        }
    }
}